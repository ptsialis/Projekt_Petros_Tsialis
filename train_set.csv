;name_of_the_features;id_of_the_features;name_of_the_dataset;datatype_of_the_feature;dataset_min_value;dataset_max_value;data_descr;chat_gpt_just_feature;chat_gpt_all_feature;chat_gpt_desc_feature;just_feature_min_value;just_feature_max_value;all_feature_min_value;all_feature_max_value;all_feature_min_value_desc;all_feature_max_value_desc;iou_just_feature;iou_all_feature;iou_alldesc_feature
0;x-box;6;letter;numeric;0.0;15.0;"**Author**: David J. Slate  

**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Letter+Recognition) - 01-01-1991  

**Please cite**: P. W. Frey and D. J. Slate. ""Letter Recognition Using Holland-style Adaptive Classifiers"". Machine Learning 6(2), 1991  



1. TITLE: 

  Letter Image Recognition Data 

 

    The objective is to identify each of a large number of black-and-white

    rectangular pixel displays as one of the 26 capital letters in the English

    alphabet.  The character images were based on 20 different fonts and each

    letter within these 20 fonts was randomly distorted to produce a file of

    20,000 unique stimuli.  Each stimulus was converted into 16 primitive

    numerical attributes (statistical moments and edge counts) which were then

    scaled to fit into a range of integer values from 0 through 15.  We

    typically train on the first 16000 items and then use the resulting model

    to predict the letter category for the remaining 4000.  See the article

    cited above for more details.";"Minimum: 0
Maximum: 100";"Minimum: 0
Maximum: 15";"The range of values for the feature ""x-box"" is from the minimum value to the maximum value in the dataset.";0.0;100.0;0.0;15.0;;;0.15;1.0;
1;y-box;6;letter;numeric;0.0;15.0;"**Author**: David J. Slate  

**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Letter+Recognition) - 01-01-1991  

**Please cite**: P. W. Frey and D. J. Slate. ""Letter Recognition Using Holland-style Adaptive Classifiers"". Machine Learning 6(2), 1991  



1. TITLE: 

  Letter Image Recognition Data 

 

    The objective is to identify each of a large number of black-and-white

    rectangular pixel displays as one of the 26 capital letters in the English

    alphabet.  The character images were based on 20 different fonts and each

    letter within these 20 fonts was randomly distorted to produce a file of

    20,000 unique stimuli.  Each stimulus was converted into 16 primitive

    numerical attributes (statistical moments and edge counts) which were then

    scaled to fit into a range of integer values from 0 through 15.  We

    typically train on the first 16000 items and then use the resulting model

    to predict the letter category for the remaining 4000.  See the article

    cited above for more details.";"Minimum: 0.0
Maximum: 10.0";"Minimum: Unknown
Maximum: Unknown";"Based on the given dataset description we can determine the range of values for the feature ""y-box"" by calculating the minimum and maximum values from the dataset.

Min y-box: 0
Max y-box: 15";0.0;10.0;;;0.0;15.0;0.6666666666666666;;1.0
2;width;6;letter;numeric;0.0;15.0;"**Author**: David J. Slate  

**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Letter+Recognition) - 01-01-1991  

**Please cite**: P. W. Frey and D. J. Slate. ""Letter Recognition Using Holland-style Adaptive Classifiers"". Machine Learning 6(2), 1991  



1. TITLE: 

  Letter Image Recognition Data 

 

    The objective is to identify each of a large number of black-and-white

    rectangular pixel displays as one of the 26 capital letters in the English

    alphabet.  The character images were based on 20 different fonts and each

    letter within these 20 fonts was randomly distorted to produce a file of

    20,000 unique stimuli.  Each stimulus was converted into 16 primitive

    numerical attributes (statistical moments and edge counts) which were then

    scaled to fit into a range of integer values from 0 through 15.  We

    typically train on the first 16000 items and then use the resulting model

    to predict the letter category for the remaining 4000.  See the article

    cited above for more details.";"Minimum: 0.5
Maximum: 10.0";"Minimum: 0.5
Maximum: 10.0";"The range of values for the feature ""width"" in the dataset is as follows:

Min: 0
Max: 15";0.5;10.0;0.5;10.0;0.0;15.0;0.6333333333333333;0.6333333333333333;1.0
3;high;6;letter;numeric;0.0;15.0;"**Author**: David J. Slate  

**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Letter+Recognition) - 01-01-1991  

**Please cite**: P. W. Frey and D. J. Slate. ""Letter Recognition Using Holland-style Adaptive Classifiers"". Machine Learning 6(2), 1991  



1. TITLE: 

  Letter Image Recognition Data 

 

    The objective is to identify each of a large number of black-and-white

    rectangular pixel displays as one of the 26 capital letters in the English

    alphabet.  The character images were based on 20 different fonts and each

    letter within these 20 fonts was randomly distorted to produce a file of

    20,000 unique stimuli.  Each stimulus was converted into 16 primitive

    numerical attributes (statistical moments and edge counts) which were then

    scaled to fit into a range of integer values from 0 through 15.  We

    typically train on the first 16000 items and then use the resulting model

    to predict the letter category for the remaining 4000.  See the article

    cited above for more details.";"Minimum: 0 
Maximum: 100";"Minimum: 1
Maximum: 20";"The range of values for the feature ""high"" is from 0 to 15.";0.0;100.0;1.0;20.0;0.0;15.0;0.15;0.7;1.0
4;onpix;6;letter;numeric;0.0;15.0;"**Author**: David J. Slate  

**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Letter+Recognition) - 01-01-1991  

**Please cite**: P. W. Frey and D. J. Slate. ""Letter Recognition Using Holland-style Adaptive Classifiers"". Machine Learning 6(2), 1991  



1. TITLE: 

  Letter Image Recognition Data 

 

    The objective is to identify each of a large number of black-and-white

    rectangular pixel displays as one of the 26 capital letters in the English

    alphabet.  The character images were based on 20 different fonts and each

    letter within these 20 fonts was randomly distorted to produce a file of

    20,000 unique stimuli.  Each stimulus was converted into 16 primitive

    numerical attributes (statistical moments and edge counts) which were then

    scaled to fit into a range of integer values from 0 through 15.  We

    typically train on the first 16000 items and then use the resulting model

    to predict the letter category for the remaining 4000.  See the article

    cited above for more details.";"Minimum: 0.0
Maximum: 16.0";"Minimum: 0
Maximum: Unknown";"The range of values for the feature ""onpix"" in the dataset is from 0 to 15.";0.0;16.0;;;0.0;15.0;0.9375;;1.0
5;x-bar;6;letter;numeric;0.0;15.0;"**Author**: David J. Slate  

**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Letter+Recognition) - 01-01-1991  

**Please cite**: P. W. Frey and D. J. Slate. ""Letter Recognition Using Holland-style Adaptive Classifiers"". Machine Learning 6(2), 1991  



1. TITLE: 

  Letter Image Recognition Data 

 

    The objective is to identify each of a large number of black-and-white

    rectangular pixel displays as one of the 26 capital letters in the English

    alphabet.  The character images were based on 20 different fonts and each

    letter within these 20 fonts was randomly distorted to produce a file of

    20,000 unique stimuli.  Each stimulus was converted into 16 primitive

    numerical attributes (statistical moments and edge counts) which were then

    scaled to fit into a range of integer values from 0 through 15.  We

    typically train on the first 16000 items and then use the resulting model

    to predict the letter category for the remaining 4000.  See the article

    cited above for more details.";"Minimum: 0
Maximum: 100";"Minimum: Unknown
Maximum: Unknown";Based on the given dataset description, the range for the feature x-bar is not specified. Therefore, we cannot determine the minimum and maximum values for x-bar without further information.;0.0;100.0;;;;;0.15;;
6;y-bar;6;letter;numeric;0.0;15.0;"**Author**: David J. Slate  

**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Letter+Recognition) - 01-01-1991  

**Please cite**: P. W. Frey and D. J. Slate. ""Letter Recognition Using Holland-style Adaptive Classifiers"". Machine Learning 6(2), 1991  



1. TITLE: 

  Letter Image Recognition Data 

 

    The objective is to identify each of a large number of black-and-white

    rectangular pixel displays as one of the 26 capital letters in the English

    alphabet.  The character images were based on 20 different fonts and each

    letter within these 20 fonts was randomly distorted to produce a file of

    20,000 unique stimuli.  Each stimulus was converted into 16 primitive

    numerical attributes (statistical moments and edge counts) which were then

    scaled to fit into a range of integer values from 0 through 15.  We

    typically train on the first 16000 items and then use the resulting model

    to predict the letter category for the remaining 4000.  See the article

    cited above for more details.";"Minimum: 0.0
Maximum: 1.0";"Minimum: 0.0
Maximum: 1.0";Based on the description of the dataset the feature y-bar represents one of the statistical moments and is scaled to fit into a range of integer values from 0 through 15. Therefore the minimum value for y-bar is 0 and the maximum value is 15.;0.0;1.0;0.0;1.0;;;0.06666666666666667;0.06666666666666667;
7;x2bar;6;letter;numeric;0.0;15.0;"**Author**: David J. Slate  

**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Letter+Recognition) - 01-01-1991  

**Please cite**: P. W. Frey and D. J. Slate. ""Letter Recognition Using Holland-style Adaptive Classifiers"". Machine Learning 6(2), 1991  



1. TITLE: 

  Letter Image Recognition Data 

 

    The objective is to identify each of a large number of black-and-white

    rectangular pixel displays as one of the 26 capital letters in the English

    alphabet.  The character images were based on 20 different fonts and each

    letter within these 20 fonts was randomly distorted to produce a file of

    20,000 unique stimuli.  Each stimulus was converted into 16 primitive

    numerical attributes (statistical moments and edge counts) which were then

    scaled to fit into a range of integer values from 0 through 15.  We

    typically train on the first 16000 items and then use the resulting model

    to predict the letter category for the remaining 4000.  See the article

    cited above for more details.";"Minimum: 0.0
Maximum: 1.0";"Minimum: 0.0
Maximum: 1.0";The range of values for the feature x2bar can be found by examining the dataset. However since I do not have access to the dataset I cannot provide you with the specific minimum and maximum values for this feature. Please refer to the dataset itself to obtain this information.;0.0;1.0;0.0;1.0;;;0.06666666666666667;0.06666666666666667;
8;y2bar;6;letter;numeric;0.0;15.0;"**Author**: David J. Slate  

**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Letter+Recognition) - 01-01-1991  

**Please cite**: P. W. Frey and D. J. Slate. ""Letter Recognition Using Holland-style Adaptive Classifiers"". Machine Learning 6(2), 1991  



1. TITLE: 

  Letter Image Recognition Data 

 

    The objective is to identify each of a large number of black-and-white

    rectangular pixel displays as one of the 26 capital letters in the English

    alphabet.  The character images were based on 20 different fonts and each

    letter within these 20 fonts was randomly distorted to produce a file of

    20,000 unique stimuli.  Each stimulus was converted into 16 primitive

    numerical attributes (statistical moments and edge counts) which were then

    scaled to fit into a range of integer values from 0 through 15.  We

    typically train on the first 16000 items and then use the resulting model

    to predict the letter category for the remaining 4000.  See the article

    cited above for more details.";"Minimum: 0.0
Maximum: 1.0";Sorry, as a language AI model, I do not have access to specific datasets or the ability to provide accurate ranges for specific features. However, I can help answer any other questions you may have about data science or provide general guidance.;The range of values for the feature y2bar in the dataset is between 0 and 15.;0.0;1.0;;;;;0.06666666666666667;;
9;xybar;6;letter;numeric;0.0;15.0;"**Author**: David J. Slate  

**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Letter+Recognition) - 01-01-1991  

**Please cite**: P. W. Frey and D. J. Slate. ""Letter Recognition Using Holland-style Adaptive Classifiers"". Machine Learning 6(2), 1991  



1. TITLE: 

  Letter Image Recognition Data 

 

    The objective is to identify each of a large number of black-and-white

    rectangular pixel displays as one of the 26 capital letters in the English

    alphabet.  The character images were based on 20 different fonts and each

    letter within these 20 fonts was randomly distorted to produce a file of

    20,000 unique stimuli.  Each stimulus was converted into 16 primitive

    numerical attributes (statistical moments and edge counts) which were then

    scaled to fit into a range of integer values from 0 through 15.  We

    typically train on the first 16000 items and then use the resulting model

    to predict the letter category for the remaining 4000.  See the article

    cited above for more details.";min(xybar) = 0.0 max(xybar) = 1.0;Range for feature xybar: Minimum = 0 Maximum = 10;Based on the given dataset description the range of values for the feature 'xybar' is from 0 to 15.;0.0;1.0;0.0;10.0;0.0;15.0;0.06666666666666667;0.6666666666666666;1.0
10;x2ybr;6;letter;numeric;0.0;15.0;"**Author**: David J. Slate  

**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Letter+Recognition) - 01-01-1991  

**Please cite**: P. W. Frey and D. J. Slate. ""Letter Recognition Using Holland-style Adaptive Classifiers"". Machine Learning 6(2), 1991  



1. TITLE: 

  Letter Image Recognition Data 

 

    The objective is to identify each of a large number of black-and-white

    rectangular pixel displays as one of the 26 capital letters in the English

    alphabet.  The character images were based on 20 different fonts and each

    letter within these 20 fonts was randomly distorted to produce a file of

    20,000 unique stimuli.  Each stimulus was converted into 16 primitive

    numerical attributes (statistical moments and edge counts) which were then

    scaled to fit into a range of integer values from 0 through 15.  We

    typically train on the first 16000 items and then use the resulting model

    to predict the letter category for the remaining 4000.  See the article

    cited above for more details.";"Minimum: Unknown
Maximum: Unknown";"Minimum: -5.0
Maximum: 12.0";"The range of values for the feature ""x2ybr"" in the dataset is between 0 and 8.";;;-5.0;12.0;;;;0.6;
11;xy2br;6;letter;numeric;0.0;15.0;"**Author**: David J. Slate  

**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Letter+Recognition) - 01-01-1991  

**Please cite**: P. W. Frey and D. J. Slate. ""Letter Recognition Using Holland-style Adaptive Classifiers"". Machine Learning 6(2), 1991  



1. TITLE: 

  Letter Image Recognition Data 

 

    The objective is to identify each of a large number of black-and-white

    rectangular pixel displays as one of the 26 capital letters in the English

    alphabet.  The character images were based on 20 different fonts and each

    letter within these 20 fonts was randomly distorted to produce a file of

    20,000 unique stimuli.  Each stimulus was converted into 16 primitive

    numerical attributes (statistical moments and edge counts) which were then

    scaled to fit into a range of integer values from 0 through 15.  We

    typically train on the first 16000 items and then use the resulting model

    to predict the letter category for the remaining 4000.  See the article

    cited above for more details.";"Minimum value: 0.1875
Maximum value: 0.7778";"Minimum: 0
Maximum: 15";"Based on the dataset description the feature ""xy2br"" has a range of integer values from 0 through 15.";0.1875;0.7778;0.0;15.0;;;0.03935333333333334;1.0;
12;x-ege;6;letter;numeric;0.0;15.0;"**Author**: David J. Slate  

**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Letter+Recognition) - 01-01-1991  

**Please cite**: P. W. Frey and D. J. Slate. ""Letter Recognition Using Holland-style Adaptive Classifiers"". Machine Learning 6(2), 1991  



1. TITLE: 

  Letter Image Recognition Data 

 

    The objective is to identify each of a large number of black-and-white

    rectangular pixel displays as one of the 26 capital letters in the English

    alphabet.  The character images were based on 20 different fonts and each

    letter within these 20 fonts was randomly distorted to produce a file of

    20,000 unique stimuli.  Each stimulus was converted into 16 primitive

    numerical attributes (statistical moments and edge counts) which were then

    scaled to fit into a range of integer values from 0 through 15.  We

    typically train on the first 16000 items and then use the resulting model

    to predict the letter category for the remaining 4000.  See the article

    cited above for more details.";"Minimum: 0.1
Maximum: 10.0";"Minimum: 0
Maximum: 15";The range of values for the feature x-ege in the dataset is from the minimum value of 0 to the maximum value of 15.;0.1;10.0;0.0;15.0;0.0;15.0;0.66;1.0;1.0
13;xegvy;6;letter;numeric;0.0;15.0;"**Author**: David J. Slate  

**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Letter+Recognition) - 01-01-1991  

**Please cite**: P. W. Frey and D. J. Slate. ""Letter Recognition Using Holland-style Adaptive Classifiers"". Machine Learning 6(2), 1991  



1. TITLE: 

  Letter Image Recognition Data 

 

    The objective is to identify each of a large number of black-and-white

    rectangular pixel displays as one of the 26 capital letters in the English

    alphabet.  The character images were based on 20 different fonts and each

    letter within these 20 fonts was randomly distorted to produce a file of

    20,000 unique stimuli.  Each stimulus was converted into 16 primitive

    numerical attributes (statistical moments and edge counts) which were then

    scaled to fit into a range of integer values from 0 through 15.  We

    typically train on the first 16000 items and then use the resulting model

    to predict the letter category for the remaining 4000.  See the article

    cited above for more details.";"Minimum: -100
Maximum: 100";"Minimum: 0
Maximum: 15";"From the given dataset description, the range of values for the feature ""xegvy"" is not provided.";-100.0;100.0;0.0;15.0;;;0.075;1.0;
14;y-ege;6;letter;numeric;0.0;15.0;"**Author**: David J. Slate  

**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Letter+Recognition) - 01-01-1991  

**Please cite**: P. W. Frey and D. J. Slate. ""Letter Recognition Using Holland-style Adaptive Classifiers"". Machine Learning 6(2), 1991  



1. TITLE: 

  Letter Image Recognition Data 

 

    The objective is to identify each of a large number of black-and-white

    rectangular pixel displays as one of the 26 capital letters in the English

    alphabet.  The character images were based on 20 different fonts and each

    letter within these 20 fonts was randomly distorted to produce a file of

    20,000 unique stimuli.  Each stimulus was converted into 16 primitive

    numerical attributes (statistical moments and edge counts) which were then

    scaled to fit into a range of integer values from 0 through 15.  We

    typically train on the first 16000 items and then use the resulting model

    to predict the letter category for the remaining 4000.  See the article

    cited above for more details.";"Minimum: -âˆž
Maximum: âˆž";"Minimum: 0
Maximum: 9";The minimum value for the feature y-ege is 0 and the maximum value is 15.;;;0.0;9.0;0.0;15.0;;0.6;1.0
15;yegvx;6;letter;numeric;0.0;15.0;"**Author**: David J. Slate  

**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Letter+Recognition) - 01-01-1991  

**Please cite**: P. W. Frey and D. J. Slate. ""Letter Recognition Using Holland-style Adaptive Classifiers"". Machine Learning 6(2), 1991  



1. TITLE: 

  Letter Image Recognition Data 

 

    The objective is to identify each of a large number of black-and-white

    rectangular pixel displays as one of the 26 capital letters in the English

    alphabet.  The character images were based on 20 different fonts and each

    letter within these 20 fonts was randomly distorted to produce a file of

    20,000 unique stimuli.  Each stimulus was converted into 16 primitive

    numerical attributes (statistical moments and edge counts) which were then

    scaled to fit into a range of integer values from 0 through 15.  We

    typically train on the first 16000 items and then use the resulting model

    to predict the letter category for the remaining 4000.  See the article

    cited above for more details.";"I'm sorry, but as an AI language model, I don't have access to your dataset or any specific information about the feature ""yegvx"". Therefore, I cannot provide a specific range of values or make an accurate guess.";"Minimum: 0
Maximum: 15";Based on the given dataset description, the range of values for the feature yegvx is not provided.;;;0.0;15.0;;;;1.0;
16;duration;31;credit-g;numeric;4.0;72.0;"**Author**: Dr. Hans Hofmann  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/statlog+(german+credit+data)) - 1994    
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

**German Credit dataset**  
This dataset classifies people described by a set of attributes as good or bad credit risks.

This dataset comes with a cost matrix: 
``` 
Good  Bad (predicted)  
Good   0    1   (actual)  
Bad    5    0  
```

It is worse to class a customer as good when they are bad (5), than it is to class a customer as bad when they are good (1).  

### Attribute description  

1. Status of existing checking account, in Deutsche Mark.  
2. Duration in months  
3. Credit history (credits taken, paid back duly, delays, critical accounts)  
4. Purpose of the credit (car, television,...)  
5. Credit amount  
6. Status of savings account/bonds, in Deutsche Mark.  
7. Present employment, in number of years.  
8. Installment rate in percentage of disposable income  
9. Personal status (married, single,...) and sex  
10. Other debtors / guarantors  
11. Present residence since X years  
12. Property (e.g. real estate)  
13. Age in years  
14. Other installment plans (banks, stores)  
15. Housing (rent, own,...)  
16. Number of existing credits at this bank  
17. Job  
18. Number of people being liable to provide maintenance for  
19. Telephone (yes,no)  
20. Foreign worker (yes,no)";;"Minimum: 1
Maximum: unknown";"Min duration: 4
Max duration: 72";;;;;4.0;72.0;;;1.0
17;credit_amount;31;credit-g;numeric;250.0;18424.0;"**Author**: Dr. Hans Hofmann  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/statlog+(german+credit+data)) - 1994    
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

**German Credit dataset**  
This dataset classifies people described by a set of attributes as good or bad credit risks.

This dataset comes with a cost matrix: 
``` 
Good  Bad (predicted)  
Good   0    1   (actual)  
Bad    5    0  
```

It is worse to class a customer as good when they are bad (5), than it is to class a customer as bad when they are good (1).  

### Attribute description  

1. Status of existing checking account, in Deutsche Mark.  
2. Duration in months  
3. Credit history (credits taken, paid back duly, delays, critical accounts)  
4. Purpose of the credit (car, television,...)  
5. Credit amount  
6. Status of savings account/bonds, in Deutsche Mark.  
7. Present employment, in number of years.  
8. Installment rate in percentage of disposable income  
9. Personal status (married, single,...) and sex  
10. Other debtors / guarantors  
11. Present residence since X years  
12. Property (e.g. real estate)  
13. Age in years  
14. Other installment plans (banks, stores)  
15. Housing (rent, own,...)  
16. Number of existing credits at this bank  
17. Job  
18. Number of people being liable to provide maintenance for  
19. Telephone (yes,no)  
20. Foreign worker (yes,no)";"Minimum: 100
Maximum: 100000";"Minimum: 100
Maximum: 100000";"The range of values for the feature ""credit_amount"" can be obtained by finding the minimum and maximum values from the dataset. However, without access to the actual dataset, I cannot provide the specific values. Please refer to the dataset or load the data into a program to find the minimum and maximum values for the ""credit_amount"" feature.";100.0;100000.0;100.0;100000.0;;;0.18192192192192191;0.18192192192192191;
18;installment_commitment;31;credit-g;numeric;1.0;4.0;"**Author**: Dr. Hans Hofmann  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/statlog+(german+credit+data)) - 1994    
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

**German Credit dataset**  
This dataset classifies people described by a set of attributes as good or bad credit risks.

This dataset comes with a cost matrix: 
``` 
Good  Bad (predicted)  
Good   0    1   (actual)  
Bad    5    0  
```

It is worse to class a customer as good when they are bad (5), than it is to class a customer as bad when they are good (1).  

### Attribute description  

1. Status of existing checking account, in Deutsche Mark.  
2. Duration in months  
3. Credit history (credits taken, paid back duly, delays, critical accounts)  
4. Purpose of the credit (car, television,...)  
5. Credit amount  
6. Status of savings account/bonds, in Deutsche Mark.  
7. Present employment, in number of years.  
8. Installment rate in percentage of disposable income  
9. Personal status (married, single,...) and sex  
10. Other debtors / guarantors  
11. Present residence since X years  
12. Property (e.g. real estate)  
13. Age in years  
14. Other installment plans (banks, stores)  
15. Housing (rent, own,...)  
16. Number of existing credits at this bank  
17. Job  
18. Number of people being liable to provide maintenance for  
19. Telephone (yes,no)  
20. Foreign worker (yes,no)";;"minimum: 1
maximum: 4";"The range of values for the feature ""installment_commitment"" in the dataset is as follows:
Minimum value: 1
Maximum value: 4";;;1.0;4.0;1.0;4.0;;1.0;1.0
19;residence_since;31;credit-g;numeric;1.0;4.0;"**Author**: Dr. Hans Hofmann  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/statlog+(german+credit+data)) - 1994    
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

**German Credit dataset**  
This dataset classifies people described by a set of attributes as good or bad credit risks.

This dataset comes with a cost matrix: 
``` 
Good  Bad (predicted)  
Good   0    1   (actual)  
Bad    5    0  
```

It is worse to class a customer as good when they are bad (5), than it is to class a customer as bad when they are good (1).  

### Attribute description  

1. Status of existing checking account, in Deutsche Mark.  
2. Duration in months  
3. Credit history (credits taken, paid back duly, delays, critical accounts)  
4. Purpose of the credit (car, television,...)  
5. Credit amount  
6. Status of savings account/bonds, in Deutsche Mark.  
7. Present employment, in number of years.  
8. Installment rate in percentage of disposable income  
9. Personal status (married, single,...) and sex  
10. Other debtors / guarantors  
11. Present residence since X years  
12. Property (e.g. real estate)  
13. Age in years  
14. Other installment plans (banks, stores)  
15. Housing (rent, own,...)  
16. Number of existing credits at this bank  
17. Job  
18. Number of people being liable to provide maintenance for  
19. Telephone (yes,no)  
20. Foreign worker (yes,no)";"Min: 1 year
Max: 50 years";"Min: 1 year
Max: 50 years";The range of values for the feature residence_since is [14].;1.0;50.0;1.0;50.0;;;0.061224489795918366;0.061224489795918366;
20;age;31;credit-g;numeric;19.0;75.0;"**Author**: Dr. Hans Hofmann  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/statlog+(german+credit+data)) - 1994    
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

**German Credit dataset**  
This dataset classifies people described by a set of attributes as good or bad credit risks.

This dataset comes with a cost matrix: 
``` 
Good  Bad (predicted)  
Good   0    1   (actual)  
Bad    5    0  
```

It is worse to class a customer as good when they are bad (5), than it is to class a customer as bad when they are good (1).  

### Attribute description  

1. Status of existing checking account, in Deutsche Mark.  
2. Duration in months  
3. Credit history (credits taken, paid back duly, delays, critical accounts)  
4. Purpose of the credit (car, television,...)  
5. Credit amount  
6. Status of savings account/bonds, in Deutsche Mark.  
7. Present employment, in number of years.  
8. Installment rate in percentage of disposable income  
9. Personal status (married, single,...) and sex  
10. Other debtors / guarantors  
11. Present residence since X years  
12. Property (e.g. real estate)  
13. Age in years  
14. Other installment plans (banks, stores)  
15. Housing (rent, own,...)  
16. Number of existing credits at this bank  
17. Job  
18. Number of people being liable to provide maintenance for  
19. Telephone (yes,no)  
20. Foreign worker (yes,no)";Minimum age: 18 Maximum age: 65;"min age: 18
max age: 60";"The range of values for the feature ""age"" in the dataset is minimum 19 years and maximum 75 years.";18.0;65.0;18.0;60.0;19.0;75.0;0.8070175438596491;0.7192982456140351;1.0
21;existing_credits;31;credit-g;numeric;1.0;4.0;"**Author**: Dr. Hans Hofmann  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/statlog+(german+credit+data)) - 1994    
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

**German Credit dataset**  
This dataset classifies people described by a set of attributes as good or bad credit risks.

This dataset comes with a cost matrix: 
``` 
Good  Bad (predicted)  
Good   0    1   (actual)  
Bad    5    0  
```

It is worse to class a customer as good when they are bad (5), than it is to class a customer as bad when they are good (1).  

### Attribute description  

1. Status of existing checking account, in Deutsche Mark.  
2. Duration in months  
3. Credit history (credits taken, paid back duly, delays, critical accounts)  
4. Purpose of the credit (car, television,...)  
5. Credit amount  
6. Status of savings account/bonds, in Deutsche Mark.  
7. Present employment, in number of years.  
8. Installment rate in percentage of disposable income  
9. Personal status (married, single,...) and sex  
10. Other debtors / guarantors  
11. Present residence since X years  
12. Property (e.g. real estate)  
13. Age in years  
14. Other installment plans (banks, stores)  
15. Housing (rent, own,...)  
16. Number of existing credits at this bank  
17. Job  
18. Number of people being liable to provide maintenance for  
19. Telephone (yes,no)  
20. Foreign worker (yes,no)";"Minimum: 0
Maximum: 50";"Minimum: 0
Maximum: 10";"The range of values for the feature ""existing_credits"" in the dataset is from 1 to 4.";0.0;50.0;0.0;10.0;1.0;4.0;0.06;0.3;1.0
22;num_dependents;31;credit-g;numeric;1.0;2.0;"**Author**: Dr. Hans Hofmann  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/statlog+(german+credit+data)) - 1994    
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

**German Credit dataset**  
This dataset classifies people described by a set of attributes as good or bad credit risks.

This dataset comes with a cost matrix: 
``` 
Good  Bad (predicted)  
Good   0    1   (actual)  
Bad    5    0  
```

It is worse to class a customer as good when they are bad (5), than it is to class a customer as bad when they are good (1).  

### Attribute description  

1. Status of existing checking account, in Deutsche Mark.  
2. Duration in months  
3. Credit history (credits taken, paid back duly, delays, critical accounts)  
4. Purpose of the credit (car, television,...)  
5. Credit amount  
6. Status of savings account/bonds, in Deutsche Mark.  
7. Present employment, in number of years.  
8. Installment rate in percentage of disposable income  
9. Personal status (married, single,...) and sex  
10. Other debtors / guarantors  
11. Present residence since X years  
12. Property (e.g. real estate)  
13. Age in years  
14. Other installment plans (banks, stores)  
15. Housing (rent, own,...)  
16. Number of existing credits at this bank  
17. Job  
18. Number of people being liable to provide maintenance for  
19. Telephone (yes,no)  
20. Foreign worker (yes,no)";;"minimum: 0
maximum: 3";"The range of values for the feature ""num_dependents"" in the German Credit dataset is from 1 to 2.";;;0.0;3.0;1.0;2.0;;0.3333333333333333;1.0
23;height;30;page-blocks;numeric;1.0;804.0;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

1. Title of Database: Blocks Classification
 2. Sources:
    (a) Donato Malerba
        Dipartimento di Informatica
        University of Bari
        via Orabona 4
        70126 Bari - Italy
        phone: +39 - 80 - 5443269
        fax: +39 - 80 - 5443196
        malerbad@vm.csata.it
    (b) Donor: Donato Malerba
    (c) Date: July 1995
 3. Past Usage:
    This data set have been used to try different simplification methods
    for decision trees. A summary of the results can be found in:
 
    Malerba, D., Esposito, F., and Semeraro, G.
    ""A Further Comparison of Simplification Methods for Decision-Tree Induction.""
    In D. Fisher and H. Lenz (Eds.), ""Learning  from Data: 
    Artificial Intelligence and Statistics V"", Lecture Notes in Statistics,
    Springer Verlag, Berlin, 1995.
 
    The problem consists in classifying all the blocks of the page
    layout of a document that has been detected by a segmentation
    process. This is an essential step in document analysis
    in order to separate text from graphic areas. Indeed, 
    the five classes are: text (1), horizontal line (2),
    picture (3), vertical line (4) and graphic (5).
    For a detailed presentation of the problem see:
 
     Esposito F., Malerba D., & Semeraro G.
   Multistrategy Learning for Document Recognition
          Applied Artificial Intelligence, 8, pp. 33-84, 1994
 
    All instances have been personally checked so that
    low noise is present in the data.
 
 4. Relevant Information Paragraph:
 
    The 5473 examples comes from 54 distinct documents. 
    Each observation concerns one block. 
    All attributes are numeric.
    Data are in a format readable by C4.5.
 
 5. Number of Instances: 5473.
 
 6. Number of Attributes 
 
    height:   integer.         | Height of the block.
    lenght:   integer.     | Length of the block. 
    area:     integer.    | Area of the block (height * lenght);
    eccen:    continuous.  | Eccentricity of the block (lenght / height);
    p_black:  continuous.  | Percentage of black pixels within the block (blackpix / area);
    p_and:    continuous.        | Percentage of black pixels after the application of the Run Length Smoothing Algorithm (RLSA) (blackand / area);
    mean_tr:  continuous.      | Mean number of white-black transitions (blackpix / wb_trans);
    blackpix: integer.    | Total number of black pixels in the original bitmap of the block.
    blackand: integer.        | Total number of black pixels in the bitmap of the block after the RLSA.
    wb_trans: integer.          | Number of white-black transitions in the original bitmap of the block.
 
 
 
 7. Missing Attribute Values:  No missing value.
 
 8. Class Distribution: 
 
                                            Valid    Cum
    Class               Frequency  Percent  Percent  Percent
  
 text                      4913     89.8     89.8     89.8
 horiz. line                329      6.0      6.0     95.8
 graphic                     28       .5       .5     96.3
 vert. line                  88      1.6      1.6     97.9
 picture                    115      2.1      2.1    100.0
                                 -------  -------  -------
                         TOTAL      5473    100.0    100.0
 
 Summary Statistics:
 
 Variable      Mean    Std Dev   Minimum   Maximum   Correlation 
 
 HEIGHT       10.47      18.96         1       804         .3510
 LENGTH       89.57     114.72         1       553        -.0045
 AREA       1198.41    4849.38         7    143993         .2343
 ECCEN        13.75      30.70      .007    537.00         .0992
 P_BLACK        .37        .18      .052      1.00         .2130
 P_AND          .79        .17      .062      1.00        -.1771
 MEAN_TR       6.22      69.08      1.00   4955.00         .0723
 BLACKPIX    365.93    1270.33         7     33017         .1656
 BLACKAND    741.11    1881.50         7     46133         .1565
 WB_TRANS    106.66     167.31         1      3212         .0337
 

 Information about the dataset
 CLASSTYPE: nominal
 CLASSINDEX: last";"Minimum: 150 cm
Maximum: 190 cm";"Minimum: Unknown
Maximum: Unknown";"The range of values for the feature ""height"" in the dataset is from 1 to 804.";150.0;190.0;;;1.0;804.0;0.049813200498132;;1.0
24;lenght;30;page-blocks;numeric;1.0;553.0;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

1. Title of Database: Blocks Classification
 2. Sources:
    (a) Donato Malerba
        Dipartimento di Informatica
        University of Bari
        via Orabona 4
        70126 Bari - Italy
        phone: +39 - 80 - 5443269
        fax: +39 - 80 - 5443196
        malerbad@vm.csata.it
    (b) Donor: Donato Malerba
    (c) Date: July 1995
 3. Past Usage:
    This data set have been used to try different simplification methods
    for decision trees. A summary of the results can be found in:
 
    Malerba, D., Esposito, F., and Semeraro, G.
    ""A Further Comparison of Simplification Methods for Decision-Tree Induction.""
    In D. Fisher and H. Lenz (Eds.), ""Learning  from Data: 
    Artificial Intelligence and Statistics V"", Lecture Notes in Statistics,
    Springer Verlag, Berlin, 1995.
 
    The problem consists in classifying all the blocks of the page
    layout of a document that has been detected by a segmentation
    process. This is an essential step in document analysis
    in order to separate text from graphic areas. Indeed, 
    the five classes are: text (1), horizontal line (2),
    picture (3), vertical line (4) and graphic (5).
    For a detailed presentation of the problem see:
 
     Esposito F., Malerba D., & Semeraro G.
   Multistrategy Learning for Document Recognition
          Applied Artificial Intelligence, 8, pp. 33-84, 1994
 
    All instances have been personally checked so that
    low noise is present in the data.
 
 4. Relevant Information Paragraph:
 
    The 5473 examples comes from 54 distinct documents. 
    Each observation concerns one block. 
    All attributes are numeric.
    Data are in a format readable by C4.5.
 
 5. Number of Instances: 5473.
 
 6. Number of Attributes 
 
    height:   integer.         | Height of the block.
    lenght:   integer.     | Length of the block. 
    area:     integer.    | Area of the block (height * lenght);
    eccen:    continuous.  | Eccentricity of the block (lenght / height);
    p_black:  continuous.  | Percentage of black pixels within the block (blackpix / area);
    p_and:    continuous.        | Percentage of black pixels after the application of the Run Length Smoothing Algorithm (RLSA) (blackand / area);
    mean_tr:  continuous.      | Mean number of white-black transitions (blackpix / wb_trans);
    blackpix: integer.    | Total number of black pixels in the original bitmap of the block.
    blackand: integer.        | Total number of black pixels in the bitmap of the block after the RLSA.
    wb_trans: integer.          | Number of white-black transitions in the original bitmap of the block.
 
 
 
 7. Missing Attribute Values:  No missing value.
 
 8. Class Distribution: 
 
                                            Valid    Cum
    Class               Frequency  Percent  Percent  Percent
  
 text                      4913     89.8     89.8     89.8
 horiz. line                329      6.0      6.0     95.8
 graphic                     28       .5       .5     96.3
 vert. line                  88      1.6      1.6     97.9
 picture                    115      2.1      2.1    100.0
                                 -------  -------  -------
                         TOTAL      5473    100.0    100.0
 
 Summary Statistics:
 
 Variable      Mean    Std Dev   Minimum   Maximum   Correlation 
 
 HEIGHT       10.47      18.96         1       804         .3510
 LENGTH       89.57     114.72         1       553        -.0045
 AREA       1198.41    4849.38         7    143993         .2343
 ECCEN        13.75      30.70      .007    537.00         .0992
 P_BLACK        .37        .18      .052      1.00         .2130
 P_AND          .79        .17      .062      1.00        -.1771
 MEAN_TR       6.22      69.08      1.00   4955.00         .0723
 BLACKPIX    365.93    1270.33         7     33017         .1656
 BLACKAND    741.11    1881.50         7     46133         .1565
 WB_TRANS    106.66     167.31         1      3212         .0337
 

 Information about the dataset
 CLASSTYPE: nominal
 CLASSINDEX: last";"min length: 1
max length: 100";"Minimum: 1
Maximum: 100";"Range for the feature ""length"" in the dataset:
Minimum: 1
Maximum: 553";1.0;100.0;1.0;100.0;1.0;553.0;0.1793478260869565;0.1793478260869565;1.0
25;area;30;page-blocks;numeric;7.0;143993.0;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

1. Title of Database: Blocks Classification
 2. Sources:
    (a) Donato Malerba
        Dipartimento di Informatica
        University of Bari
        via Orabona 4
        70126 Bari - Italy
        phone: +39 - 80 - 5443269
        fax: +39 - 80 - 5443196
        malerbad@vm.csata.it
    (b) Donor: Donato Malerba
    (c) Date: July 1995
 3. Past Usage:
    This data set have been used to try different simplification methods
    for decision trees. A summary of the results can be found in:
 
    Malerba, D., Esposito, F., and Semeraro, G.
    ""A Further Comparison of Simplification Methods for Decision-Tree Induction.""
    In D. Fisher and H. Lenz (Eds.), ""Learning  from Data: 
    Artificial Intelligence and Statistics V"", Lecture Notes in Statistics,
    Springer Verlag, Berlin, 1995.
 
    The problem consists in classifying all the blocks of the page
    layout of a document that has been detected by a segmentation
    process. This is an essential step in document analysis
    in order to separate text from graphic areas. Indeed, 
    the five classes are: text (1), horizontal line (2),
    picture (3), vertical line (4) and graphic (5).
    For a detailed presentation of the problem see:
 
     Esposito F., Malerba D., & Semeraro G.
   Multistrategy Learning for Document Recognition
          Applied Artificial Intelligence, 8, pp. 33-84, 1994
 
    All instances have been personally checked so that
    low noise is present in the data.
 
 4. Relevant Information Paragraph:
 
    The 5473 examples comes from 54 distinct documents. 
    Each observation concerns one block. 
    All attributes are numeric.
    Data are in a format readable by C4.5.
 
 5. Number of Instances: 5473.
 
 6. Number of Attributes 
 
    height:   integer.         | Height of the block.
    lenght:   integer.     | Length of the block. 
    area:     integer.    | Area of the block (height * lenght);
    eccen:    continuous.  | Eccentricity of the block (lenght / height);
    p_black:  continuous.  | Percentage of black pixels within the block (blackpix / area);
    p_and:    continuous.        | Percentage of black pixels after the application of the Run Length Smoothing Algorithm (RLSA) (blackand / area);
    mean_tr:  continuous.      | Mean number of white-black transitions (blackpix / wb_trans);
    blackpix: integer.    | Total number of black pixels in the original bitmap of the block.
    blackand: integer.        | Total number of black pixels in the bitmap of the block after the RLSA.
    wb_trans: integer.          | Number of white-black transitions in the original bitmap of the block.
 
 
 
 7. Missing Attribute Values:  No missing value.
 
 8. Class Distribution: 
 
                                            Valid    Cum
    Class               Frequency  Percent  Percent  Percent
  
 text                      4913     89.8     89.8     89.8
 horiz. line                329      6.0      6.0     95.8
 graphic                     28       .5       .5     96.3
 vert. line                  88      1.6      1.6     97.9
 picture                    115      2.1      2.1    100.0
                                 -------  -------  -------
                         TOTAL      5473    100.0    100.0
 
 Summary Statistics:
 
 Variable      Mean    Std Dev   Minimum   Maximum   Correlation 
 
 HEIGHT       10.47      18.96         1       804         .3510
 LENGTH       89.57     114.72         1       553        -.0045
 AREA       1198.41    4849.38         7    143993         .2343
 ECCEN        13.75      30.70      .007    537.00         .0992
 P_BLACK        .37        .18      .052      1.00         .2130
 P_AND          .79        .17      .062      1.00        -.1771
 MEAN_TR       6.22      69.08      1.00   4955.00         .0723
 BLACKPIX    365.93    1270.33         7     33017         .1656
 BLACKAND    741.11    1881.50         7     46133         .1565
 WB_TRANS    106.66     167.31         1      3212         .0337
 

 Information about the dataset
 CLASSTYPE: nominal
 CLASSINDEX: last";"Minimum: 0
Maximum: 1000000";"Minimum: 0 
Maximum: Unknown";The range of values for the feature 'area' is minimum: 7 maximum: 143993.;0.0;1000000.0;;;7.0;143993.0;0.143986;;1.0
26;eccen;30;page-blocks;numeric;0.006999999999999999;537.0;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

1. Title of Database: Blocks Classification
 2. Sources:
    (a) Donato Malerba
        Dipartimento di Informatica
        University of Bari
        via Orabona 4
        70126 Bari - Italy
        phone: +39 - 80 - 5443269
        fax: +39 - 80 - 5443196
        malerbad@vm.csata.it
    (b) Donor: Donato Malerba
    (c) Date: July 1995
 3. Past Usage:
    This data set have been used to try different simplification methods
    for decision trees. A summary of the results can be found in:
 
    Malerba, D., Esposito, F., and Semeraro, G.
    ""A Further Comparison of Simplification Methods for Decision-Tree Induction.""
    In D. Fisher and H. Lenz (Eds.), ""Learning  from Data: 
    Artificial Intelligence and Statistics V"", Lecture Notes in Statistics,
    Springer Verlag, Berlin, 1995.
 
    The problem consists in classifying all the blocks of the page
    layout of a document that has been detected by a segmentation
    process. This is an essential step in document analysis
    in order to separate text from graphic areas. Indeed, 
    the five classes are: text (1), horizontal line (2),
    picture (3), vertical line (4) and graphic (5).
    For a detailed presentation of the problem see:
 
     Esposito F., Malerba D., & Semeraro G.
   Multistrategy Learning for Document Recognition
          Applied Artificial Intelligence, 8, pp. 33-84, 1994
 
    All instances have been personally checked so that
    low noise is present in the data.
 
 4. Relevant Information Paragraph:
 
    The 5473 examples comes from 54 distinct documents. 
    Each observation concerns one block. 
    All attributes are numeric.
    Data are in a format readable by C4.5.
 
 5. Number of Instances: 5473.
 
 6. Number of Attributes 
 
    height:   integer.         | Height of the block.
    lenght:   integer.     | Length of the block. 
    area:     integer.    | Area of the block (height * lenght);
    eccen:    continuous.  | Eccentricity of the block (lenght / height);
    p_black:  continuous.  | Percentage of black pixels within the block (blackpix / area);
    p_and:    continuous.        | Percentage of black pixels after the application of the Run Length Smoothing Algorithm (RLSA) (blackand / area);
    mean_tr:  continuous.      | Mean number of white-black transitions (blackpix / wb_trans);
    blackpix: integer.    | Total number of black pixels in the original bitmap of the block.
    blackand: integer.        | Total number of black pixels in the bitmap of the block after the RLSA.
    wb_trans: integer.          | Number of white-black transitions in the original bitmap of the block.
 
 
 
 7. Missing Attribute Values:  No missing value.
 
 8. Class Distribution: 
 
                                            Valid    Cum
    Class               Frequency  Percent  Percent  Percent
  
 text                      4913     89.8     89.8     89.8
 horiz. line                329      6.0      6.0     95.8
 graphic                     28       .5       .5     96.3
 vert. line                  88      1.6      1.6     97.9
 picture                    115      2.1      2.1    100.0
                                 -------  -------  -------
                         TOTAL      5473    100.0    100.0
 
 Summary Statistics:
 
 Variable      Mean    Std Dev   Minimum   Maximum   Correlation 
 
 HEIGHT       10.47      18.96         1       804         .3510
 LENGTH       89.57     114.72         1       553        -.0045
 AREA       1198.41    4849.38         7    143993         .2343
 ECCEN        13.75      30.70      .007    537.00         .0992
 P_BLACK        .37        .18      .052      1.00         .2130
 P_AND          .79        .17      .062      1.00        -.1771
 MEAN_TR       6.22      69.08      1.00   4955.00         .0723
 BLACKPIX    365.93    1270.33         7     33017         .1656
 BLACKAND    741.11    1881.50         7     46133         .1565
 WB_TRANS    106.66     167.31         1      3212         .0337
 

 Information about the dataset
 CLASSTYPE: nominal
 CLASSINDEX: last";"Minimum: 0.5
Maximum: 1.5";"The range for the feature ""eccen"" in this dataset is 0.1 to 1.0.";eccen: 0.007 537.00;0.5;1.5;0.1;1.0;0.006999999999999999;537.0;0.0018622216676939922;0.0016759995009245929;1.0
27;p_black;30;page-blocks;numeric;0.052000000000000005;1.0;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

1. Title of Database: Blocks Classification
 2. Sources:
    (a) Donato Malerba
        Dipartimento di Informatica
        University of Bari
        via Orabona 4
        70126 Bari - Italy
        phone: +39 - 80 - 5443269
        fax: +39 - 80 - 5443196
        malerbad@vm.csata.it
    (b) Donor: Donato Malerba
    (c) Date: July 1995
 3. Past Usage:
    This data set have been used to try different simplification methods
    for decision trees. A summary of the results can be found in:
 
    Malerba, D., Esposito, F., and Semeraro, G.
    ""A Further Comparison of Simplification Methods for Decision-Tree Induction.""
    In D. Fisher and H. Lenz (Eds.), ""Learning  from Data: 
    Artificial Intelligence and Statistics V"", Lecture Notes in Statistics,
    Springer Verlag, Berlin, 1995.
 
    The problem consists in classifying all the blocks of the page
    layout of a document that has been detected by a segmentation
    process. This is an essential step in document analysis
    in order to separate text from graphic areas. Indeed, 
    the five classes are: text (1), horizontal line (2),
    picture (3), vertical line (4) and graphic (5).
    For a detailed presentation of the problem see:
 
     Esposito F., Malerba D., & Semeraro G.
   Multistrategy Learning for Document Recognition
          Applied Artificial Intelligence, 8, pp. 33-84, 1994
 
    All instances have been personally checked so that
    low noise is present in the data.
 
 4. Relevant Information Paragraph:
 
    The 5473 examples comes from 54 distinct documents. 
    Each observation concerns one block. 
    All attributes are numeric.
    Data are in a format readable by C4.5.
 
 5. Number of Instances: 5473.
 
 6. Number of Attributes 
 
    height:   integer.         | Height of the block.
    lenght:   integer.     | Length of the block. 
    area:     integer.    | Area of the block (height * lenght);
    eccen:    continuous.  | Eccentricity of the block (lenght / height);
    p_black:  continuous.  | Percentage of black pixels within the block (blackpix / area);
    p_and:    continuous.        | Percentage of black pixels after the application of the Run Length Smoothing Algorithm (RLSA) (blackand / area);
    mean_tr:  continuous.      | Mean number of white-black transitions (blackpix / wb_trans);
    blackpix: integer.    | Total number of black pixels in the original bitmap of the block.
    blackand: integer.        | Total number of black pixels in the bitmap of the block after the RLSA.
    wb_trans: integer.          | Number of white-black transitions in the original bitmap of the block.
 
 
 
 7. Missing Attribute Values:  No missing value.
 
 8. Class Distribution: 
 
                                            Valid    Cum
    Class               Frequency  Percent  Percent  Percent
  
 text                      4913     89.8     89.8     89.8
 horiz. line                329      6.0      6.0     95.8
 graphic                     28       .5       .5     96.3
 vert. line                  88      1.6      1.6     97.9
 picture                    115      2.1      2.1    100.0
                                 -------  -------  -------
                         TOTAL      5473    100.0    100.0
 
 Summary Statistics:
 
 Variable      Mean    Std Dev   Minimum   Maximum   Correlation 
 
 HEIGHT       10.47      18.96         1       804         .3510
 LENGTH       89.57     114.72         1       553        -.0045
 AREA       1198.41    4849.38         7    143993         .2343
 ECCEN        13.75      30.70      .007    537.00         .0992
 P_BLACK        .37        .18      .052      1.00         .2130
 P_AND          .79        .17      .062      1.00        -.1771
 MEAN_TR       6.22      69.08      1.00   4955.00         .0723
 BLACKPIX    365.93    1270.33         7     33017         .1656
 BLACKAND    741.11    1881.50         7     46133         .1565
 WB_TRANS    106.66     167.31         1      3212         .0337
 

 Information about the dataset
 CLASSTYPE: nominal
 CLASSINDEX: last";Sorry, but as an AI language model, I don't have access to real-time data or the ability to guess specific values from a dataset. However, if you provide me with the dataset or more information about it, I can help you analyze it or provide insights based on the available information.;"Minimum: 0.0
Maximum: 1.0";"The range of values for the feature ""p_black"" in the dataset is from 0.052 to 1.00.";;;0.0;1.0;0.052000000000000005;1.0;;0.948;1.0
28;p_and;30;page-blocks;numeric;0.062;1.0;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

1. Title of Database: Blocks Classification
 2. Sources:
    (a) Donato Malerba
        Dipartimento di Informatica
        University of Bari
        via Orabona 4
        70126 Bari - Italy
        phone: +39 - 80 - 5443269
        fax: +39 - 80 - 5443196
        malerbad@vm.csata.it
    (b) Donor: Donato Malerba
    (c) Date: July 1995
 3. Past Usage:
    This data set have been used to try different simplification methods
    for decision trees. A summary of the results can be found in:
 
    Malerba, D., Esposito, F., and Semeraro, G.
    ""A Further Comparison of Simplification Methods for Decision-Tree Induction.""
    In D. Fisher and H. Lenz (Eds.), ""Learning  from Data: 
    Artificial Intelligence and Statistics V"", Lecture Notes in Statistics,
    Springer Verlag, Berlin, 1995.
 
    The problem consists in classifying all the blocks of the page
    layout of a document that has been detected by a segmentation
    process. This is an essential step in document analysis
    in order to separate text from graphic areas. Indeed, 
    the five classes are: text (1), horizontal line (2),
    picture (3), vertical line (4) and graphic (5).
    For a detailed presentation of the problem see:
 
     Esposito F., Malerba D., & Semeraro G.
   Multistrategy Learning for Document Recognition
          Applied Artificial Intelligence, 8, pp. 33-84, 1994
 
    All instances have been personally checked so that
    low noise is present in the data.
 
 4. Relevant Information Paragraph:
 
    The 5473 examples comes from 54 distinct documents. 
    Each observation concerns one block. 
    All attributes are numeric.
    Data are in a format readable by C4.5.
 
 5. Number of Instances: 5473.
 
 6. Number of Attributes 
 
    height:   integer.         | Height of the block.
    lenght:   integer.     | Length of the block. 
    area:     integer.    | Area of the block (height * lenght);
    eccen:    continuous.  | Eccentricity of the block (lenght / height);
    p_black:  continuous.  | Percentage of black pixels within the block (blackpix / area);
    p_and:    continuous.        | Percentage of black pixels after the application of the Run Length Smoothing Algorithm (RLSA) (blackand / area);
    mean_tr:  continuous.      | Mean number of white-black transitions (blackpix / wb_trans);
    blackpix: integer.    | Total number of black pixels in the original bitmap of the block.
    blackand: integer.        | Total number of black pixels in the bitmap of the block after the RLSA.
    wb_trans: integer.          | Number of white-black transitions in the original bitmap of the block.
 
 
 
 7. Missing Attribute Values:  No missing value.
 
 8. Class Distribution: 
 
                                            Valid    Cum
    Class               Frequency  Percent  Percent  Percent
  
 text                      4913     89.8     89.8     89.8
 horiz. line                329      6.0      6.0     95.8
 graphic                     28       .5       .5     96.3
 vert. line                  88      1.6      1.6     97.9
 picture                    115      2.1      2.1    100.0
                                 -------  -------  -------
                         TOTAL      5473    100.0    100.0
 
 Summary Statistics:
 
 Variable      Mean    Std Dev   Minimum   Maximum   Correlation 
 
 HEIGHT       10.47      18.96         1       804         .3510
 LENGTH       89.57     114.72         1       553        -.0045
 AREA       1198.41    4849.38         7    143993         .2343
 ECCEN        13.75      30.70      .007    537.00         .0992
 P_BLACK        .37        .18      .052      1.00         .2130
 P_AND          .79        .17      .062      1.00        -.1771
 MEAN_TR       6.22      69.08      1.00   4955.00         .0723
 BLACKPIX    365.93    1270.33         7     33017         .1656
 BLACKAND    741.11    1881.50         7     46133         .1565
 WB_TRANS    106.66     167.31         1      3212         .0337
 

 Information about the dataset
 CLASSTYPE: nominal
 CLASSINDEX: last";min: 0 max: 100;"Minimum: 0 
Maximum: 1";"The range of values for the feature ""p_and"" is between 0.062 and 1.00.";0.0;100.0;0.0;1.0;0.062;1.0;0.00938;0.938;1.0
29;mean_tr;30;page-blocks;numeric;1.0;4955.0;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

1. Title of Database: Blocks Classification
 2. Sources:
    (a) Donato Malerba
        Dipartimento di Informatica
        University of Bari
        via Orabona 4
        70126 Bari - Italy
        phone: +39 - 80 - 5443269
        fax: +39 - 80 - 5443196
        malerbad@vm.csata.it
    (b) Donor: Donato Malerba
    (c) Date: July 1995
 3. Past Usage:
    This data set have been used to try different simplification methods
    for decision trees. A summary of the results can be found in:
 
    Malerba, D., Esposito, F., and Semeraro, G.
    ""A Further Comparison of Simplification Methods for Decision-Tree Induction.""
    In D. Fisher and H. Lenz (Eds.), ""Learning  from Data: 
    Artificial Intelligence and Statistics V"", Lecture Notes in Statistics,
    Springer Verlag, Berlin, 1995.
 
    The problem consists in classifying all the blocks of the page
    layout of a document that has been detected by a segmentation
    process. This is an essential step in document analysis
    in order to separate text from graphic areas. Indeed, 
    the five classes are: text (1), horizontal line (2),
    picture (3), vertical line (4) and graphic (5).
    For a detailed presentation of the problem see:
 
     Esposito F., Malerba D., & Semeraro G.
   Multistrategy Learning for Document Recognition
          Applied Artificial Intelligence, 8, pp. 33-84, 1994
 
    All instances have been personally checked so that
    low noise is present in the data.
 
 4. Relevant Information Paragraph:
 
    The 5473 examples comes from 54 distinct documents. 
    Each observation concerns one block. 
    All attributes are numeric.
    Data are in a format readable by C4.5.
 
 5. Number of Instances: 5473.
 
 6. Number of Attributes 
 
    height:   integer.         | Height of the block.
    lenght:   integer.     | Length of the block. 
    area:     integer.    | Area of the block (height * lenght);
    eccen:    continuous.  | Eccentricity of the block (lenght / height);
    p_black:  continuous.  | Percentage of black pixels within the block (blackpix / area);
    p_and:    continuous.        | Percentage of black pixels after the application of the Run Length Smoothing Algorithm (RLSA) (blackand / area);
    mean_tr:  continuous.      | Mean number of white-black transitions (blackpix / wb_trans);
    blackpix: integer.    | Total number of black pixels in the original bitmap of the block.
    blackand: integer.        | Total number of black pixels in the bitmap of the block after the RLSA.
    wb_trans: integer.          | Number of white-black transitions in the original bitmap of the block.
 
 
 
 7. Missing Attribute Values:  No missing value.
 
 8. Class Distribution: 
 
                                            Valid    Cum
    Class               Frequency  Percent  Percent  Percent
  
 text                      4913     89.8     89.8     89.8
 horiz. line                329      6.0      6.0     95.8
 graphic                     28       .5       .5     96.3
 vert. line                  88      1.6      1.6     97.9
 picture                    115      2.1      2.1    100.0
                                 -------  -------  -------
                         TOTAL      5473    100.0    100.0
 
 Summary Statistics:
 
 Variable      Mean    Std Dev   Minimum   Maximum   Correlation 
 
 HEIGHT       10.47      18.96         1       804         .3510
 LENGTH       89.57     114.72         1       553        -.0045
 AREA       1198.41    4849.38         7    143993         .2343
 ECCEN        13.75      30.70      .007    537.00         .0992
 P_BLACK        .37        .18      .052      1.00         .2130
 P_AND          .79        .17      .062      1.00        -.1771
 MEAN_TR       6.22      69.08      1.00   4955.00         .0723
 BLACKPIX    365.93    1270.33         7     33017         .1656
 BLACKAND    741.11    1881.50         7     46133         .1565
 WB_TRANS    106.66     167.31         1      3212         .0337
 

 Information about the dataset
 CLASSTYPE: nominal
 CLASSINDEX: last";"min: -âˆž
max: +âˆž";"min: -âˆž
max: +âˆž";The range for the feature mean_tr in the dataset is 1.00 to 4955.00.;;;;;1.0;4955.0;;;1.0
30;blackpix;30;page-blocks;numeric;7.0;33017.0;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

1. Title of Database: Blocks Classification
 2. Sources:
    (a) Donato Malerba
        Dipartimento di Informatica
        University of Bari
        via Orabona 4
        70126 Bari - Italy
        phone: +39 - 80 - 5443269
        fax: +39 - 80 - 5443196
        malerbad@vm.csata.it
    (b) Donor: Donato Malerba
    (c) Date: July 1995
 3. Past Usage:
    This data set have been used to try different simplification methods
    for decision trees. A summary of the results can be found in:
 
    Malerba, D., Esposito, F., and Semeraro, G.
    ""A Further Comparison of Simplification Methods for Decision-Tree Induction.""
    In D. Fisher and H. Lenz (Eds.), ""Learning  from Data: 
    Artificial Intelligence and Statistics V"", Lecture Notes in Statistics,
    Springer Verlag, Berlin, 1995.
 
    The problem consists in classifying all the blocks of the page
    layout of a document that has been detected by a segmentation
    process. This is an essential step in document analysis
    in order to separate text from graphic areas. Indeed, 
    the five classes are: text (1), horizontal line (2),
    picture (3), vertical line (4) and graphic (5).
    For a detailed presentation of the problem see:
 
     Esposito F., Malerba D., & Semeraro G.
   Multistrategy Learning for Document Recognition
          Applied Artificial Intelligence, 8, pp. 33-84, 1994
 
    All instances have been personally checked so that
    low noise is present in the data.
 
 4. Relevant Information Paragraph:
 
    The 5473 examples comes from 54 distinct documents. 
    Each observation concerns one block. 
    All attributes are numeric.
    Data are in a format readable by C4.5.
 
 5. Number of Instances: 5473.
 
 6. Number of Attributes 
 
    height:   integer.         | Height of the block.
    lenght:   integer.     | Length of the block. 
    area:     integer.    | Area of the block (height * lenght);
    eccen:    continuous.  | Eccentricity of the block (lenght / height);
    p_black:  continuous.  | Percentage of black pixels within the block (blackpix / area);
    p_and:    continuous.        | Percentage of black pixels after the application of the Run Length Smoothing Algorithm (RLSA) (blackand / area);
    mean_tr:  continuous.      | Mean number of white-black transitions (blackpix / wb_trans);
    blackpix: integer.    | Total number of black pixels in the original bitmap of the block.
    blackand: integer.        | Total number of black pixels in the bitmap of the block after the RLSA.
    wb_trans: integer.          | Number of white-black transitions in the original bitmap of the block.
 
 
 
 7. Missing Attribute Values:  No missing value.
 
 8. Class Distribution: 
 
                                            Valid    Cum
    Class               Frequency  Percent  Percent  Percent
  
 text                      4913     89.8     89.8     89.8
 horiz. line                329      6.0      6.0     95.8
 graphic                     28       .5       .5     96.3
 vert. line                  88      1.6      1.6     97.9
 picture                    115      2.1      2.1    100.0
                                 -------  -------  -------
                         TOTAL      5473    100.0    100.0
 
 Summary Statistics:
 
 Variable      Mean    Std Dev   Minimum   Maximum   Correlation 
 
 HEIGHT       10.47      18.96         1       804         .3510
 LENGTH       89.57     114.72         1       553        -.0045
 AREA       1198.41    4849.38         7    143993         .2343
 ECCEN        13.75      30.70      .007    537.00         .0992
 P_BLACK        .37        .18      .052      1.00         .2130
 P_AND          .79        .17      .062      1.00        -.1771
 MEAN_TR       6.22      69.08      1.00   4955.00         .0723
 BLACKPIX    365.93    1270.33         7     33017         .1656
 BLACKAND    741.11    1881.50         7     46133         .1565
 WB_TRANS    106.66     167.31         1      3212         .0337
 

 Information about the dataset
 CLASSTYPE: nominal
 CLASSINDEX: last";"Minimum: 0
Maximum: 255";"Minimum: 0  
Maximum: unknown (as the dataset is not provided)";"The range of values for the feature ""blackpix"" is 7 to 33017.";0.0;255.0;;;7.0;33017.0;0.007511282066814066;;1.0
31;blackand;30;page-blocks;numeric;7.0;46133.0;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

1. Title of Database: Blocks Classification
 2. Sources:
    (a) Donato Malerba
        Dipartimento di Informatica
        University of Bari
        via Orabona 4
        70126 Bari - Italy
        phone: +39 - 80 - 5443269
        fax: +39 - 80 - 5443196
        malerbad@vm.csata.it
    (b) Donor: Donato Malerba
    (c) Date: July 1995
 3. Past Usage:
    This data set have been used to try different simplification methods
    for decision trees. A summary of the results can be found in:
 
    Malerba, D., Esposito, F., and Semeraro, G.
    ""A Further Comparison of Simplification Methods for Decision-Tree Induction.""
    In D. Fisher and H. Lenz (Eds.), ""Learning  from Data: 
    Artificial Intelligence and Statistics V"", Lecture Notes in Statistics,
    Springer Verlag, Berlin, 1995.
 
    The problem consists in classifying all the blocks of the page
    layout of a document that has been detected by a segmentation
    process. This is an essential step in document analysis
    in order to separate text from graphic areas. Indeed, 
    the five classes are: text (1), horizontal line (2),
    picture (3), vertical line (4) and graphic (5).
    For a detailed presentation of the problem see:
 
     Esposito F., Malerba D., & Semeraro G.
   Multistrategy Learning for Document Recognition
          Applied Artificial Intelligence, 8, pp. 33-84, 1994
 
    All instances have been personally checked so that
    low noise is present in the data.
 
 4. Relevant Information Paragraph:
 
    The 5473 examples comes from 54 distinct documents. 
    Each observation concerns one block. 
    All attributes are numeric.
    Data are in a format readable by C4.5.
 
 5. Number of Instances: 5473.
 
 6. Number of Attributes 
 
    height:   integer.         | Height of the block.
    lenght:   integer.     | Length of the block. 
    area:     integer.    | Area of the block (height * lenght);
    eccen:    continuous.  | Eccentricity of the block (lenght / height);
    p_black:  continuous.  | Percentage of black pixels within the block (blackpix / area);
    p_and:    continuous.        | Percentage of black pixels after the application of the Run Length Smoothing Algorithm (RLSA) (blackand / area);
    mean_tr:  continuous.      | Mean number of white-black transitions (blackpix / wb_trans);
    blackpix: integer.    | Total number of black pixels in the original bitmap of the block.
    blackand: integer.        | Total number of black pixels in the bitmap of the block after the RLSA.
    wb_trans: integer.          | Number of white-black transitions in the original bitmap of the block.
 
 
 
 7. Missing Attribute Values:  No missing value.
 
 8. Class Distribution: 
 
                                            Valid    Cum
    Class               Frequency  Percent  Percent  Percent
  
 text                      4913     89.8     89.8     89.8
 horiz. line                329      6.0      6.0     95.8
 graphic                     28       .5       .5     96.3
 vert. line                  88      1.6      1.6     97.9
 picture                    115      2.1      2.1    100.0
                                 -------  -------  -------
                         TOTAL      5473    100.0    100.0
 
 Summary Statistics:
 
 Variable      Mean    Std Dev   Minimum   Maximum   Correlation 
 
 HEIGHT       10.47      18.96         1       804         .3510
 LENGTH       89.57     114.72         1       553        -.0045
 AREA       1198.41    4849.38         7    143993         .2343
 ECCEN        13.75      30.70      .007    537.00         .0992
 P_BLACK        .37        .18      .052      1.00         .2130
 P_AND          .79        .17      .062      1.00        -.1771
 MEAN_TR       6.22      69.08      1.00   4955.00         .0723
 BLACKPIX    365.93    1270.33         7     33017         .1656
 BLACKAND    741.11    1881.50         7     46133         .1565
 WB_TRANS    106.66     167.31         1      3212         .0337
 

 Information about the dataset
 CLASSTYPE: nominal
 CLASSINDEX: last";min: 0 max: 1;min: 0 max: 1;"Based on the dataset the range of values for the feature ""blackand"" is from 7 to 46133.";0.0;1.0;0.0;1.0;7.0;46133.0;;;1.0
32;wb_trans;30;page-blocks;numeric;1.0;3212.0;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

1. Title of Database: Blocks Classification
 2. Sources:
    (a) Donato Malerba
        Dipartimento di Informatica
        University of Bari
        via Orabona 4
        70126 Bari - Italy
        phone: +39 - 80 - 5443269
        fax: +39 - 80 - 5443196
        malerbad@vm.csata.it
    (b) Donor: Donato Malerba
    (c) Date: July 1995
 3. Past Usage:
    This data set have been used to try different simplification methods
    for decision trees. A summary of the results can be found in:
 
    Malerba, D., Esposito, F., and Semeraro, G.
    ""A Further Comparison of Simplification Methods for Decision-Tree Induction.""
    In D. Fisher and H. Lenz (Eds.), ""Learning  from Data: 
    Artificial Intelligence and Statistics V"", Lecture Notes in Statistics,
    Springer Verlag, Berlin, 1995.
 
    The problem consists in classifying all the blocks of the page
    layout of a document that has been detected by a segmentation
    process. This is an essential step in document analysis
    in order to separate text from graphic areas. Indeed, 
    the five classes are: text (1), horizontal line (2),
    picture (3), vertical line (4) and graphic (5).
    For a detailed presentation of the problem see:
 
     Esposito F., Malerba D., & Semeraro G.
   Multistrategy Learning for Document Recognition
          Applied Artificial Intelligence, 8, pp. 33-84, 1994
 
    All instances have been personally checked so that
    low noise is present in the data.
 
 4. Relevant Information Paragraph:
 
    The 5473 examples comes from 54 distinct documents. 
    Each observation concerns one block. 
    All attributes are numeric.
    Data are in a format readable by C4.5.
 
 5. Number of Instances: 5473.
 
 6. Number of Attributes 
 
    height:   integer.         | Height of the block.
    lenght:   integer.     | Length of the block. 
    area:     integer.    | Area of the block (height * lenght);
    eccen:    continuous.  | Eccentricity of the block (lenght / height);
    p_black:  continuous.  | Percentage of black pixels within the block (blackpix / area);
    p_and:    continuous.        | Percentage of black pixels after the application of the Run Length Smoothing Algorithm (RLSA) (blackand / area);
    mean_tr:  continuous.      | Mean number of white-black transitions (blackpix / wb_trans);
    blackpix: integer.    | Total number of black pixels in the original bitmap of the block.
    blackand: integer.        | Total number of black pixels in the bitmap of the block after the RLSA.
    wb_trans: integer.          | Number of white-black transitions in the original bitmap of the block.
 
 
 
 7. Missing Attribute Values:  No missing value.
 
 8. Class Distribution: 
 
                                            Valid    Cum
    Class               Frequency  Percent  Percent  Percent
  
 text                      4913     89.8     89.8     89.8
 horiz. line                329      6.0      6.0     95.8
 graphic                     28       .5       .5     96.3
 vert. line                  88      1.6      1.6     97.9
 picture                    115      2.1      2.1    100.0
                                 -------  -------  -------
                         TOTAL      5473    100.0    100.0
 
 Summary Statistics:
 
 Variable      Mean    Std Dev   Minimum   Maximum   Correlation 
 
 HEIGHT       10.47      18.96         1       804         .3510
 LENGTH       89.57     114.72         1       553        -.0045
 AREA       1198.41    4849.38         7    143993         .2343
 ECCEN        13.75      30.70      .007    537.00         .0992
 P_BLACK        .37        .18      .052      1.00         .2130
 P_AND          .79        .17      .062      1.00        -.1771
 MEAN_TR       6.22      69.08      1.00   4955.00         .0723
 BLACKPIX    365.93    1270.33         7     33017         .1656
 BLACKAND    741.11    1881.50         7     46133         .1565
 WB_TRANS    106.66     167.31         1      3212         .0337
 

 Information about the dataset
 CLASSTYPE: nominal
 CLASSINDEX: last";;"Minimum: 0
Maximum: 255";"The range of values for the feature ""wb_trans"" is: min = 1 max = 3212.";;;0.0;255.0;1.0;3212.0;;0.07907845579078455;1.0
33;date;151;electricity;numeric;0.0;1.0;"**Author**: M. Harries, J. Gama, A. Bifet  
**Source**: [Joao Gama](http://www.inescporto.pt/~jgama/ales/ales_5.html) - 2009  
**Please cite**: None  

**Electricity** is a widely used dataset described by M. Harries and analyzed by J. Gama (see papers below). This data was collected from the Australian New South Wales Electricity Market. In this market, prices are not fixed and are affected by demand and supply of the market. They are set every five minutes. Electricity transfers to/from the neighboring state of Victoria were done to alleviate fluctuations.

The dataset (originally named ELEC2) contains 45,312 instances dated from 7 May 1996 to 5 December 1998. Each example of the dataset refers to a period of 30 minutes, i.e. there are 48 instances for each time period of one day. Each example on the dataset has 5 fields, the day of week, the time stamp, the New South Wales electricity demand, the Victoria electricity demand, the scheduled electricity transfer between states and the class label. The class label identifies the change of the price (UP or DOWN) in New South Wales relative to a moving average of the last 24 hours (and removes the impact of longer term price trends). 

The data was normalized by A. Bifet.

### Attribute information  
* Date: date between 7 May 1996 to 5 December 1998. Here normalized between 0 and 1
* Day: day of the week (1-7)
* Period: time of the measurement (1-48) in half hour intervals over 24 hours. Here normalized between 0 and 1
* NSWprice: New South Wales electricity price, normalized between 0 and 1
* NSWdemand: New South Wales electricity demand, normalized between 0 and 1
* VICprice: Victoria electricity price, normalized between 0 and 1
* VICdemand: Victoria electricity demand, normalized between 0 and 1
* transfer: scheduled electricity transfer between both states, normalized between 0 and 1

### Relevant papers  
M. Harries. Splice-2 comparative evaluation: Electricity pricing. Technical report, The University of South Wales, 1999.  
J. Gama, P. Medas, G. Castillo, and P. Rodrigues. Learning with drift detection. In SBIA Brazilian Symposium on Artificial Intelligence, pages 286â€“295, 2004.";"Minimum: 01-01-1900
Maximum: 31-12-2100";"Minimum: 01/01/2000
Maximum: 12/31/2022";"The range of values for the feature ""date"" in this dataset is from 7 May 1996 to 5 December 1998.";;;;;;;;;
34;period;151;electricity;numeric;0.0;1.0;"**Author**: M. Harries, J. Gama, A. Bifet  
**Source**: [Joao Gama](http://www.inescporto.pt/~jgama/ales/ales_5.html) - 2009  
**Please cite**: None  

**Electricity** is a widely used dataset described by M. Harries and analyzed by J. Gama (see papers below). This data was collected from the Australian New South Wales Electricity Market. In this market, prices are not fixed and are affected by demand and supply of the market. They are set every five minutes. Electricity transfers to/from the neighboring state of Victoria were done to alleviate fluctuations.

The dataset (originally named ELEC2) contains 45,312 instances dated from 7 May 1996 to 5 December 1998. Each example of the dataset refers to a period of 30 minutes, i.e. there are 48 instances for each time period of one day. Each example on the dataset has 5 fields, the day of week, the time stamp, the New South Wales electricity demand, the Victoria electricity demand, the scheduled electricity transfer between states and the class label. The class label identifies the change of the price (UP or DOWN) in New South Wales relative to a moving average of the last 24 hours (and removes the impact of longer term price trends). 

The data was normalized by A. Bifet.

### Attribute information  
* Date: date between 7 May 1996 to 5 December 1998. Here normalized between 0 and 1
* Day: day of the week (1-7)
* Period: time of the measurement (1-48) in half hour intervals over 24 hours. Here normalized between 0 and 1
* NSWprice: New South Wales electricity price, normalized between 0 and 1
* NSWdemand: New South Wales electricity demand, normalized between 0 and 1
* VICprice: Victoria electricity price, normalized between 0 and 1
* VICdemand: Victoria electricity demand, normalized between 0 and 1
* transfer: scheduled electricity transfer between both states, normalized between 0 and 1

### Relevant papers  
M. Harries. Splice-2 comparative evaluation: Electricity pricing. Technical report, The University of South Wales, 1999.  
J. Gama, P. Medas, G. Castillo, and P. Rodrigues. Learning with drift detection. In SBIA Brazilian Symposium on Artificial Intelligence, pages 286â€“295, 2004.";;;"The range of values for the feature ""period"" in the dataset is between 1 and 48.";;;;;1.0;48.0;;;0.0
35;nswprice;151;electricity;numeric;0.0;1.0;"**Author**: M. Harries, J. Gama, A. Bifet  
**Source**: [Joao Gama](http://www.inescporto.pt/~jgama/ales/ales_5.html) - 2009  
**Please cite**: None  

**Electricity** is a widely used dataset described by M. Harries and analyzed by J. Gama (see papers below). This data was collected from the Australian New South Wales Electricity Market. In this market, prices are not fixed and are affected by demand and supply of the market. They are set every five minutes. Electricity transfers to/from the neighboring state of Victoria were done to alleviate fluctuations.

The dataset (originally named ELEC2) contains 45,312 instances dated from 7 May 1996 to 5 December 1998. Each example of the dataset refers to a period of 30 minutes, i.e. there are 48 instances for each time period of one day. Each example on the dataset has 5 fields, the day of week, the time stamp, the New South Wales electricity demand, the Victoria electricity demand, the scheduled electricity transfer between states and the class label. The class label identifies the change of the price (UP or DOWN) in New South Wales relative to a moving average of the last 24 hours (and removes the impact of longer term price trends). 

The data was normalized by A. Bifet.

### Attribute information  
* Date: date between 7 May 1996 to 5 December 1998. Here normalized between 0 and 1
* Day: day of the week (1-7)
* Period: time of the measurement (1-48) in half hour intervals over 24 hours. Here normalized between 0 and 1
* NSWprice: New South Wales electricity price, normalized between 0 and 1
* NSWdemand: New South Wales electricity demand, normalized between 0 and 1
* VICprice: Victoria electricity price, normalized between 0 and 1
* VICdemand: Victoria electricity demand, normalized between 0 and 1
* transfer: scheduled electricity transfer between both states, normalized between 0 and 1

### Relevant papers  
M. Harries. Splice-2 comparative evaluation: Electricity pricing. Technical report, The University of South Wales, 1999.  
J. Gama, P. Medas, G. Castillo, and P. Rodrigues. Learning with drift detection. In SBIA Brazilian Symposium on Artificial Intelligence, pages 286â€“295, 2004.";"Minimum: $10000
Maximum: $2000000";"Minimum: 0
Maximum: 1000";"For the feature ""nswprice"" in the dataset the minimum value is 0 and the maximum value is 1.";10000.0;2000000.0;0.0;1000.0;0.0;1.0;;0.001;1.0
36;nswdemand;151;electricity;numeric;0.0;1.0;"**Author**: M. Harries, J. Gama, A. Bifet  
**Source**: [Joao Gama](http://www.inescporto.pt/~jgama/ales/ales_5.html) - 2009  
**Please cite**: None  

**Electricity** is a widely used dataset described by M. Harries and analyzed by J. Gama (see papers below). This data was collected from the Australian New South Wales Electricity Market. In this market, prices are not fixed and are affected by demand and supply of the market. They are set every five minutes. Electricity transfers to/from the neighboring state of Victoria were done to alleviate fluctuations.

The dataset (originally named ELEC2) contains 45,312 instances dated from 7 May 1996 to 5 December 1998. Each example of the dataset refers to a period of 30 minutes, i.e. there are 48 instances for each time period of one day. Each example on the dataset has 5 fields, the day of week, the time stamp, the New South Wales electricity demand, the Victoria electricity demand, the scheduled electricity transfer between states and the class label. The class label identifies the change of the price (UP or DOWN) in New South Wales relative to a moving average of the last 24 hours (and removes the impact of longer term price trends). 

The data was normalized by A. Bifet.

### Attribute information  
* Date: date between 7 May 1996 to 5 December 1998. Here normalized between 0 and 1
* Day: day of the week (1-7)
* Period: time of the measurement (1-48) in half hour intervals over 24 hours. Here normalized between 0 and 1
* NSWprice: New South Wales electricity price, normalized between 0 and 1
* NSWdemand: New South Wales electricity demand, normalized between 0 and 1
* VICprice: Victoria electricity price, normalized between 0 and 1
* VICdemand: Victoria electricity demand, normalized between 0 and 1
* transfer: scheduled electricity transfer between both states, normalized between 0 and 1

### Relevant papers  
M. Harries. Splice-2 comparative evaluation: Electricity pricing. Technical report, The University of South Wales, 1999.  
J. Gama, P. Medas, G. Castillo, and P. Rodrigues. Learning with drift detection. In SBIA Brazilian Symposium on Artificial Intelligence, pages 286â€“295, 2004.";"min: 100
max: 10000";"min: 100
max: 10000";"The range of values for the feature ""nswdemand"" is between 0 and 1.";100.0;10000.0;100.0;10000.0;0.0;1.0;;;1.0
37;vicprice;151;electricity;numeric;0.0;1.0;"**Author**: M. Harries, J. Gama, A. Bifet  
**Source**: [Joao Gama](http://www.inescporto.pt/~jgama/ales/ales_5.html) - 2009  
**Please cite**: None  

**Electricity** is a widely used dataset described by M. Harries and analyzed by J. Gama (see papers below). This data was collected from the Australian New South Wales Electricity Market. In this market, prices are not fixed and are affected by demand and supply of the market. They are set every five minutes. Electricity transfers to/from the neighboring state of Victoria were done to alleviate fluctuations.

The dataset (originally named ELEC2) contains 45,312 instances dated from 7 May 1996 to 5 December 1998. Each example of the dataset refers to a period of 30 minutes, i.e. there are 48 instances for each time period of one day. Each example on the dataset has 5 fields, the day of week, the time stamp, the New South Wales electricity demand, the Victoria electricity demand, the scheduled electricity transfer between states and the class label. The class label identifies the change of the price (UP or DOWN) in New South Wales relative to a moving average of the last 24 hours (and removes the impact of longer term price trends). 

The data was normalized by A. Bifet.

### Attribute information  
* Date: date between 7 May 1996 to 5 December 1998. Here normalized between 0 and 1
* Day: day of the week (1-7)
* Period: time of the measurement (1-48) in half hour intervals over 24 hours. Here normalized between 0 and 1
* NSWprice: New South Wales electricity price, normalized between 0 and 1
* NSWdemand: New South Wales electricity demand, normalized between 0 and 1
* VICprice: Victoria electricity price, normalized between 0 and 1
* VICdemand: Victoria electricity demand, normalized between 0 and 1
* transfer: scheduled electricity transfer between both states, normalized between 0 and 1

### Relevant papers  
M. Harries. Splice-2 comparative evaluation: Electricity pricing. Technical report, The University of South Wales, 1999.  
J. Gama, P. Medas, G. Castillo, and P. Rodrigues. Learning with drift detection. In SBIA Brazilian Symposium on Artificial Intelligence, pages 286â€“295, 2004.";"Minimum: 0
Maximum: 10000";"Minimum: Unknown
Maximum: Unknown";"The range of values for the feature ""vicprice"" is between 0 and 1.";0.0;10000.0;;;0.0;1.0;0.0001;;1.0
38;vicdemand;151;electricity;numeric;0.0;1.0;"**Author**: M. Harries, J. Gama, A. Bifet  
**Source**: [Joao Gama](http://www.inescporto.pt/~jgama/ales/ales_5.html) - 2009  
**Please cite**: None  

**Electricity** is a widely used dataset described by M. Harries and analyzed by J. Gama (see papers below). This data was collected from the Australian New South Wales Electricity Market. In this market, prices are not fixed and are affected by demand and supply of the market. They are set every five minutes. Electricity transfers to/from the neighboring state of Victoria were done to alleviate fluctuations.

The dataset (originally named ELEC2) contains 45,312 instances dated from 7 May 1996 to 5 December 1998. Each example of the dataset refers to a period of 30 minutes, i.e. there are 48 instances for each time period of one day. Each example on the dataset has 5 fields, the day of week, the time stamp, the New South Wales electricity demand, the Victoria electricity demand, the scheduled electricity transfer between states and the class label. The class label identifies the change of the price (UP or DOWN) in New South Wales relative to a moving average of the last 24 hours (and removes the impact of longer term price trends). 

The data was normalized by A. Bifet.

### Attribute information  
* Date: date between 7 May 1996 to 5 December 1998. Here normalized between 0 and 1
* Day: day of the week (1-7)
* Period: time of the measurement (1-48) in half hour intervals over 24 hours. Here normalized between 0 and 1
* NSWprice: New South Wales electricity price, normalized between 0 and 1
* NSWdemand: New South Wales electricity demand, normalized between 0 and 1
* VICprice: Victoria electricity price, normalized between 0 and 1
* VICdemand: Victoria electricity demand, normalized between 0 and 1
* transfer: scheduled electricity transfer between both states, normalized between 0 and 1

### Relevant papers  
M. Harries. Splice-2 comparative evaluation: Electricity pricing. Technical report, The University of South Wales, 1999.  
J. Gama, P. Medas, G. Castillo, and P. Rodrigues. Learning with drift detection. In SBIA Brazilian Symposium on Artificial Intelligence, pages 286â€“295, 2004.";"Sorry, but I cannot provide a range of values for the feature ""vicdemand"" without any information about the dataset.";"Sorry, but I cannot provide a range of values for the feature ""vicdemand"" without any information about the dataset.";"The range of values for the feature ""VICdemand"" in the dataset is as follows:

Min: 0.0
Max: 1.0";;;;;0.0;1.0;;;1.0
39;transfer;151;electricity;numeric;0.0;1.0;"**Author**: M. Harries, J. Gama, A. Bifet  
**Source**: [Joao Gama](http://www.inescporto.pt/~jgama/ales/ales_5.html) - 2009  
**Please cite**: None  

**Electricity** is a widely used dataset described by M. Harries and analyzed by J. Gama (see papers below). This data was collected from the Australian New South Wales Electricity Market. In this market, prices are not fixed and are affected by demand and supply of the market. They are set every five minutes. Electricity transfers to/from the neighboring state of Victoria were done to alleviate fluctuations.

The dataset (originally named ELEC2) contains 45,312 instances dated from 7 May 1996 to 5 December 1998. Each example of the dataset refers to a period of 30 minutes, i.e. there are 48 instances for each time period of one day. Each example on the dataset has 5 fields, the day of week, the time stamp, the New South Wales electricity demand, the Victoria electricity demand, the scheduled electricity transfer between states and the class label. The class label identifies the change of the price (UP or DOWN) in New South Wales relative to a moving average of the last 24 hours (and removes the impact of longer term price trends). 

The data was normalized by A. Bifet.

### Attribute information  
* Date: date between 7 May 1996 to 5 December 1998. Here normalized between 0 and 1
* Day: day of the week (1-7)
* Period: time of the measurement (1-48) in half hour intervals over 24 hours. Here normalized between 0 and 1
* NSWprice: New South Wales electricity price, normalized between 0 and 1
* NSWdemand: New South Wales electricity demand, normalized between 0 and 1
* VICprice: Victoria electricity price, normalized between 0 and 1
* VICdemand: Victoria electricity demand, normalized between 0 and 1
* transfer: scheduled electricity transfer between both states, normalized between 0 and 1

### Relevant papers  
M. Harries. Splice-2 comparative evaluation: Electricity pricing. Technical report, The University of South Wales, 1999.  
J. Gama, P. Medas, G. Castillo, and P. Rodrigues. Learning with drift detection. In SBIA Brazilian Symposium on Artificial Intelligence, pages 286â€“295, 2004.";"Min: 0
Max: 1000000";"Minimum: 0 
Maximum: 1";"The range of values for the feature ""transfer"" in the dataset is between 0 and 1.";0.0;1000000.0;0.0;1.0;0.0;1.0;1e-06;1.0;1.0
40;Length;183;abalone;numeric;0.075;0.815;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

1. Title of Database: Abalone data
 
 2. Sources:
 
    (a) Original owners of database:
 	Marine Resources Division
 	Marine Research Laboratories - Taroona
 	Department of Primary Industry and Fisheries, Tasmania
 	GPO Box 619F, Hobart, Tasmania 7001, Australia
 	(contact: Warwick Nash +61 02 277277, wnash@dpi.tas.gov.au)
 
    (b) Donor of database:
 	Sam Waugh (Sam.Waugh@cs.utas.edu.au)
 	Department of Computer Science, University of Tasmania
 	GPO Box 252C, Hobart, Tasmania 7001, Australia
 
    (c) Date received: December 1995
 
 
 3. Past Usage:
 
    Sam Waugh (1995) ""Extending and benchmarking Cascade-Correlation"", PhD
    thesis, Computer Science Department, University of Tasmania.
 
    -- Test set performance (final 1044 examples, first 3133 used for training):
 	24.86% Cascade-Correlation (no hidden nodes)
 	26.25% Cascade-Correlation (5 hidden nodes)
 	21.5%  C4.5
 	 0.0%  Linear Discriminate Analysis
 	 3.57% k=5 Nearest Neighbour
       (Problem encoded as a classification task)
 
    -- Data set samples are highly overlapped.  Further information is required
 	to separate completely using affine combinations.  Other restrictions
 	to data set examined.
 
    David Clark, Zoltan Schreter, Anthony Adams ""A Quantitative Comparison of
    Dystal and Backpropagation"", submitted to the Australian Conference on
    Neural Networks (ACNN'96). Data set treated as a 3-category classification
    problem (grouping ring classes 1-8, 9 and 10, and 11 on).
 
    -- Test set performance (3133 training, 1044 testing as above):
 	64%    Backprop
 	55%    Dystal
    -- Previous work (Waugh, 1995) on same data set:
 	61.40% Cascade-Correlation (no hidden nodes)
 	65.61% Cascade-Correlation (5 hidden nodes)
 	59.2%  C4.5
 	32.57% Linear Discriminate Analysis
 	62.46% k=5 Nearest Neighbour
 
 
 4. Relevant Information Paragraph:
 
    Predicting the age of abalone from physical measurements.  The age of
    abalone is determined by cutting the shell through the cone, staining it,
    and counting the number of rings through a microscope -- a boring and
    time-consuming task.  Other measurements, which are easier to obtain, are
    used to predict the age.  Further information, such as weather patterns
    and location (hence food availability) may be required to solve the problem.
 
    From the original data examples with missing values were removed (the
    majority having the predicted value missing), and the ranges of the
    continuous values have been scaled for use with an ANN (by dividing by 200).
 
    Data comes from an original (non-machine-learning) study:
 
 	Warwick J Nash, Tracy L Sellers, Simon R Talbot, Andrew J Cawthorn and
 	Wes B Ford (1994) ""The Population Biology of Abalone (_Haliotis_
 	species) in Tasmania. I. Blacklip Abalone (_H. rubra_) from the North
 	Coast and Islands of Bass Strait"", Sea Fisheries Division, Technical
 	Report No. 48 (ISSN 1034-3288)
 
 
 5. Number of Instances: 4177
 
 
 6. Number of Attributes: 8
 
 
 7. Attribute information:
 
    Given is the attribute name, attribute type, the measurement unit and a
    brief description.  The number of rings is the value to predict: either
    as a continuous value or as a classification problem.
 
 	Name		Data Type	Meas.	Description
 	----		---------	-----	-----------
 	Sex		nominal			M, F, and I (infant)
 	Length		continuous	mm	Longest shell measurement
 	Diameter	continuous	mm	perpendicular to length
 	Height		continuous	mm	with meat in shell
 	Whole weight	continuous	grams	whole abalone
 	Shucked weight	continuous	grams	weight of meat
 	Viscera weight	continuous	grams	gut weight (after bleeding)
 	Shell weight	continuous	grams	after being dried
 	Rings		integer			+1.5 gives the age in years
 
    Statistics for numeric domains:
 
 		Length	Diam	Height	Whole	Shucked	Viscera	Shell	Rings
 	Min	0.075	0.055	0.000	0.002	0.001	0.001	0.002	    1
 	Max	0.815	0.650	1.130	2.826	1.488	0.760	1.005	   29
 	Mean	0.524	0.408	0.140	0.829	0.359	0.181	0.239	9.934
 	SD	0.120	0.099	0.042	0.490	0.222	0.110	0.139	3.224
 	Correl	0.557	0.575	0.557	0.540	0.421	0.504	0.628	  1.0
 
 
 8. Missing Attribute Values: None
 
 
 9. Class Distribution:
 
 	Class	Examples
 	-----	--------
 	1	1
 	2	1
 	3	15
 	4	57
 	5	115
 	6	259
 	7	391
 	8	568
 	9	689
 	10	634
 	11	487
 	12	267
 	13	203
 	14	126
 	15	103
 	16	67
 	17	58
 	18	42
 	19	32
 	20	26
 	21	14
 	22	6
 	23	9
 	24	2
 	25	1
 	26	1
 	27	2
 	29	1
 	-----	----
 	Total	4177
 
 Num Instances:     4177
 Num Attributes:    9
 Num Continuous:    8 (Int 1 / Real 7)
 Num Discrete:      1
 Missing values:    0 /  0.0%

     name                      type enum ints real     missing    distinct  (1)
   1 'Sex'                     Enum 100%   0%   0%     0 /  0%     3 /  0%   0% 
   2 'Length'                  Real   0%   0% 100%     0 /  0%   134 /  3%   0% 
   3 'Diameter'                Real   0%   0% 100%     0 /  0%   111 /  3%   0% 
   4 'Height'                  Real   0%   0% 100%     0 /  0%    51 /  1%   0% 
   5 'Whole weight'            Real   0%   0% 100%     0 /  0%  2429 / 58%  31% 
   6 'Shucked weight'          Real   0%   0% 100%     0 /  0%  1515 / 36%  10% 
   7 'Viscera weight'          Real   0%   0% 100%     0 /  0%   880 / 21%   3% 
   8 'Shell weight'            Real   0%   0% 100%     0 /  0%   926 / 22%   8% 
   9 'Class_Rings'             Int    0% 100%   0%     0 /  0%    28 /  1%   0%";"Min: 1cm
Max: 100cm";"Min: 1cm
Max: 100cm";"The range for the feature ""Length"" in the dataset is from 0.075 mm to 0.815 mm.";1.0;100.0;1.0;100.0;0.075;0.815;;;1.0
41;Diameter;183;abalone;numeric;0.055;0.65;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

1. Title of Database: Abalone data
 
 2. Sources:
 
    (a) Original owners of database:
 	Marine Resources Division
 	Marine Research Laboratories - Taroona
 	Department of Primary Industry and Fisheries, Tasmania
 	GPO Box 619F, Hobart, Tasmania 7001, Australia
 	(contact: Warwick Nash +61 02 277277, wnash@dpi.tas.gov.au)
 
    (b) Donor of database:
 	Sam Waugh (Sam.Waugh@cs.utas.edu.au)
 	Department of Computer Science, University of Tasmania
 	GPO Box 252C, Hobart, Tasmania 7001, Australia
 
    (c) Date received: December 1995
 
 
 3. Past Usage:
 
    Sam Waugh (1995) ""Extending and benchmarking Cascade-Correlation"", PhD
    thesis, Computer Science Department, University of Tasmania.
 
    -- Test set performance (final 1044 examples, first 3133 used for training):
 	24.86% Cascade-Correlation (no hidden nodes)
 	26.25% Cascade-Correlation (5 hidden nodes)
 	21.5%  C4.5
 	 0.0%  Linear Discriminate Analysis
 	 3.57% k=5 Nearest Neighbour
       (Problem encoded as a classification task)
 
    -- Data set samples are highly overlapped.  Further information is required
 	to separate completely using affine combinations.  Other restrictions
 	to data set examined.
 
    David Clark, Zoltan Schreter, Anthony Adams ""A Quantitative Comparison of
    Dystal and Backpropagation"", submitted to the Australian Conference on
    Neural Networks (ACNN'96). Data set treated as a 3-category classification
    problem (grouping ring classes 1-8, 9 and 10, and 11 on).
 
    -- Test set performance (3133 training, 1044 testing as above):
 	64%    Backprop
 	55%    Dystal
    -- Previous work (Waugh, 1995) on same data set:
 	61.40% Cascade-Correlation (no hidden nodes)
 	65.61% Cascade-Correlation (5 hidden nodes)
 	59.2%  C4.5
 	32.57% Linear Discriminate Analysis
 	62.46% k=5 Nearest Neighbour
 
 
 4. Relevant Information Paragraph:
 
    Predicting the age of abalone from physical measurements.  The age of
    abalone is determined by cutting the shell through the cone, staining it,
    and counting the number of rings through a microscope -- a boring and
    time-consuming task.  Other measurements, which are easier to obtain, are
    used to predict the age.  Further information, such as weather patterns
    and location (hence food availability) may be required to solve the problem.
 
    From the original data examples with missing values were removed (the
    majority having the predicted value missing), and the ranges of the
    continuous values have been scaled for use with an ANN (by dividing by 200).
 
    Data comes from an original (non-machine-learning) study:
 
 	Warwick J Nash, Tracy L Sellers, Simon R Talbot, Andrew J Cawthorn and
 	Wes B Ford (1994) ""The Population Biology of Abalone (_Haliotis_
 	species) in Tasmania. I. Blacklip Abalone (_H. rubra_) from the North
 	Coast and Islands of Bass Strait"", Sea Fisheries Division, Technical
 	Report No. 48 (ISSN 1034-3288)
 
 
 5. Number of Instances: 4177
 
 
 6. Number of Attributes: 8
 
 
 7. Attribute information:
 
    Given is the attribute name, attribute type, the measurement unit and a
    brief description.  The number of rings is the value to predict: either
    as a continuous value or as a classification problem.
 
 	Name		Data Type	Meas.	Description
 	----		---------	-----	-----------
 	Sex		nominal			M, F, and I (infant)
 	Length		continuous	mm	Longest shell measurement
 	Diameter	continuous	mm	perpendicular to length
 	Height		continuous	mm	with meat in shell
 	Whole weight	continuous	grams	whole abalone
 	Shucked weight	continuous	grams	weight of meat
 	Viscera weight	continuous	grams	gut weight (after bleeding)
 	Shell weight	continuous	grams	after being dried
 	Rings		integer			+1.5 gives the age in years
 
    Statistics for numeric domains:
 
 		Length	Diam	Height	Whole	Shucked	Viscera	Shell	Rings
 	Min	0.075	0.055	0.000	0.002	0.001	0.001	0.002	    1
 	Max	0.815	0.650	1.130	2.826	1.488	0.760	1.005	   29
 	Mean	0.524	0.408	0.140	0.829	0.359	0.181	0.239	9.934
 	SD	0.120	0.099	0.042	0.490	0.222	0.110	0.139	3.224
 	Correl	0.557	0.575	0.557	0.540	0.421	0.504	0.628	  1.0
 
 
 8. Missing Attribute Values: None
 
 
 9. Class Distribution:
 
 	Class	Examples
 	-----	--------
 	1	1
 	2	1
 	3	15
 	4	57
 	5	115
 	6	259
 	7	391
 	8	568
 	9	689
 	10	634
 	11	487
 	12	267
 	13	203
 	14	126
 	15	103
 	16	67
 	17	58
 	18	42
 	19	32
 	20	26
 	21	14
 	22	6
 	23	9
 	24	2
 	25	1
 	26	1
 	27	2
 	29	1
 	-----	----
 	Total	4177
 
 Num Instances:     4177
 Num Attributes:    9
 Num Continuous:    8 (Int 1 / Real 7)
 Num Discrete:      1
 Missing values:    0 /  0.0%

     name                      type enum ints real     missing    distinct  (1)
   1 'Sex'                     Enum 100%   0%   0%     0 /  0%     3 /  0%   0% 
   2 'Length'                  Real   0%   0% 100%     0 /  0%   134 /  3%   0% 
   3 'Diameter'                Real   0%   0% 100%     0 /  0%   111 /  3%   0% 
   4 'Height'                  Real   0%   0% 100%     0 /  0%    51 /  1%   0% 
   5 'Whole weight'            Real   0%   0% 100%     0 /  0%  2429 / 58%  31% 
   6 'Shucked weight'          Real   0%   0% 100%     0 /  0%  1515 / 36%  10% 
   7 'Viscera weight'          Real   0%   0% 100%     0 /  0%   880 / 21%   3% 
   8 'Shell weight'            Real   0%   0% 100%     0 /  0%   926 / 22%   8% 
   9 'Class_Rings'             Int    0% 100%   0%     0 /  0%    28 /  1%   0%";;"Minimum: 0.1
Maximum: 0.8";"The range of values for the feature ""Diameter"" is min=0.055 mm and max=0.650 mm.";;;0.1;0.8;0.055;0.65;;0.738255033557047;1.0
42;Height;183;abalone;numeric;0.0;1.13;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

1. Title of Database: Abalone data
 
 2. Sources:
 
    (a) Original owners of database:
 	Marine Resources Division
 	Marine Research Laboratories - Taroona
 	Department of Primary Industry and Fisheries, Tasmania
 	GPO Box 619F, Hobart, Tasmania 7001, Australia
 	(contact: Warwick Nash +61 02 277277, wnash@dpi.tas.gov.au)
 
    (b) Donor of database:
 	Sam Waugh (Sam.Waugh@cs.utas.edu.au)
 	Department of Computer Science, University of Tasmania
 	GPO Box 252C, Hobart, Tasmania 7001, Australia
 
    (c) Date received: December 1995
 
 
 3. Past Usage:
 
    Sam Waugh (1995) ""Extending and benchmarking Cascade-Correlation"", PhD
    thesis, Computer Science Department, University of Tasmania.
 
    -- Test set performance (final 1044 examples, first 3133 used for training):
 	24.86% Cascade-Correlation (no hidden nodes)
 	26.25% Cascade-Correlation (5 hidden nodes)
 	21.5%  C4.5
 	 0.0%  Linear Discriminate Analysis
 	 3.57% k=5 Nearest Neighbour
       (Problem encoded as a classification task)
 
    -- Data set samples are highly overlapped.  Further information is required
 	to separate completely using affine combinations.  Other restrictions
 	to data set examined.
 
    David Clark, Zoltan Schreter, Anthony Adams ""A Quantitative Comparison of
    Dystal and Backpropagation"", submitted to the Australian Conference on
    Neural Networks (ACNN'96). Data set treated as a 3-category classification
    problem (grouping ring classes 1-8, 9 and 10, and 11 on).
 
    -- Test set performance (3133 training, 1044 testing as above):
 	64%    Backprop
 	55%    Dystal
    -- Previous work (Waugh, 1995) on same data set:
 	61.40% Cascade-Correlation (no hidden nodes)
 	65.61% Cascade-Correlation (5 hidden nodes)
 	59.2%  C4.5
 	32.57% Linear Discriminate Analysis
 	62.46% k=5 Nearest Neighbour
 
 
 4. Relevant Information Paragraph:
 
    Predicting the age of abalone from physical measurements.  The age of
    abalone is determined by cutting the shell through the cone, staining it,
    and counting the number of rings through a microscope -- a boring and
    time-consuming task.  Other measurements, which are easier to obtain, are
    used to predict the age.  Further information, such as weather patterns
    and location (hence food availability) may be required to solve the problem.
 
    From the original data examples with missing values were removed (the
    majority having the predicted value missing), and the ranges of the
    continuous values have been scaled for use with an ANN (by dividing by 200).
 
    Data comes from an original (non-machine-learning) study:
 
 	Warwick J Nash, Tracy L Sellers, Simon R Talbot, Andrew J Cawthorn and
 	Wes B Ford (1994) ""The Population Biology of Abalone (_Haliotis_
 	species) in Tasmania. I. Blacklip Abalone (_H. rubra_) from the North
 	Coast and Islands of Bass Strait"", Sea Fisheries Division, Technical
 	Report No. 48 (ISSN 1034-3288)
 
 
 5. Number of Instances: 4177
 
 
 6. Number of Attributes: 8
 
 
 7. Attribute information:
 
    Given is the attribute name, attribute type, the measurement unit and a
    brief description.  The number of rings is the value to predict: either
    as a continuous value or as a classification problem.
 
 	Name		Data Type	Meas.	Description
 	----		---------	-----	-----------
 	Sex		nominal			M, F, and I (infant)
 	Length		continuous	mm	Longest shell measurement
 	Diameter	continuous	mm	perpendicular to length
 	Height		continuous	mm	with meat in shell
 	Whole weight	continuous	grams	whole abalone
 	Shucked weight	continuous	grams	weight of meat
 	Viscera weight	continuous	grams	gut weight (after bleeding)
 	Shell weight	continuous	grams	after being dried
 	Rings		integer			+1.5 gives the age in years
 
    Statistics for numeric domains:
 
 		Length	Diam	Height	Whole	Shucked	Viscera	Shell	Rings
 	Min	0.075	0.055	0.000	0.002	0.001	0.001	0.002	    1
 	Max	0.815	0.650	1.130	2.826	1.488	0.760	1.005	   29
 	Mean	0.524	0.408	0.140	0.829	0.359	0.181	0.239	9.934
 	SD	0.120	0.099	0.042	0.490	0.222	0.110	0.139	3.224
 	Correl	0.557	0.575	0.557	0.540	0.421	0.504	0.628	  1.0
 
 
 8. Missing Attribute Values: None
 
 
 9. Class Distribution:
 
 	Class	Examples
 	-----	--------
 	1	1
 	2	1
 	3	15
 	4	57
 	5	115
 	6	259
 	7	391
 	8	568
 	9	689
 	10	634
 	11	487
 	12	267
 	13	203
 	14	126
 	15	103
 	16	67
 	17	58
 	18	42
 	19	32
 	20	26
 	21	14
 	22	6
 	23	9
 	24	2
 	25	1
 	26	1
 	27	2
 	29	1
 	-----	----
 	Total	4177
 
 Num Instances:     4177
 Num Attributes:    9
 Num Continuous:    8 (Int 1 / Real 7)
 Num Discrete:      1
 Missing values:    0 /  0.0%

     name                      type enum ints real     missing    distinct  (1)
   1 'Sex'                     Enum 100%   0%   0%     0 /  0%     3 /  0%   0% 
   2 'Length'                  Real   0%   0% 100%     0 /  0%   134 /  3%   0% 
   3 'Diameter'                Real   0%   0% 100%     0 /  0%   111 /  3%   0% 
   4 'Height'                  Real   0%   0% 100%     0 /  0%    51 /  1%   0% 
   5 'Whole weight'            Real   0%   0% 100%     0 /  0%  2429 / 58%  31% 
   6 'Shucked weight'          Real   0%   0% 100%     0 /  0%  1515 / 36%  10% 
   7 'Viscera weight'          Real   0%   0% 100%     0 /  0%   880 / 21%   3% 
   8 'Shell weight'            Real   0%   0% 100%     0 /  0%   926 / 22%   8% 
   9 'Class_Rings'             Int    0% 100%   0%     0 /  0%    28 /  1%   0%";;Minimum: 0.0 Maximum: 1.3;"The range of values for the feature ""Height"" in the dataset is min = 0.000 mm and max = 1.130 mm.";;;0.0;1.3;0.0;1.13;;0.8692307692307691;1.0
43;Whole_weight;183;abalone;numeric;0.002;2.8255;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

1. Title of Database: Abalone data
 
 2. Sources:
 
    (a) Original owners of database:
 	Marine Resources Division
 	Marine Research Laboratories - Taroona
 	Department of Primary Industry and Fisheries, Tasmania
 	GPO Box 619F, Hobart, Tasmania 7001, Australia
 	(contact: Warwick Nash +61 02 277277, wnash@dpi.tas.gov.au)
 
    (b) Donor of database:
 	Sam Waugh (Sam.Waugh@cs.utas.edu.au)
 	Department of Computer Science, University of Tasmania
 	GPO Box 252C, Hobart, Tasmania 7001, Australia
 
    (c) Date received: December 1995
 
 
 3. Past Usage:
 
    Sam Waugh (1995) ""Extending and benchmarking Cascade-Correlation"", PhD
    thesis, Computer Science Department, University of Tasmania.
 
    -- Test set performance (final 1044 examples, first 3133 used for training):
 	24.86% Cascade-Correlation (no hidden nodes)
 	26.25% Cascade-Correlation (5 hidden nodes)
 	21.5%  C4.5
 	 0.0%  Linear Discriminate Analysis
 	 3.57% k=5 Nearest Neighbour
       (Problem encoded as a classification task)
 
    -- Data set samples are highly overlapped.  Further information is required
 	to separate completely using affine combinations.  Other restrictions
 	to data set examined.
 
    David Clark, Zoltan Schreter, Anthony Adams ""A Quantitative Comparison of
    Dystal and Backpropagation"", submitted to the Australian Conference on
    Neural Networks (ACNN'96). Data set treated as a 3-category classification
    problem (grouping ring classes 1-8, 9 and 10, and 11 on).
 
    -- Test set performance (3133 training, 1044 testing as above):
 	64%    Backprop
 	55%    Dystal
    -- Previous work (Waugh, 1995) on same data set:
 	61.40% Cascade-Correlation (no hidden nodes)
 	65.61% Cascade-Correlation (5 hidden nodes)
 	59.2%  C4.5
 	32.57% Linear Discriminate Analysis
 	62.46% k=5 Nearest Neighbour
 
 
 4. Relevant Information Paragraph:
 
    Predicting the age of abalone from physical measurements.  The age of
    abalone is determined by cutting the shell through the cone, staining it,
    and counting the number of rings through a microscope -- a boring and
    time-consuming task.  Other measurements, which are easier to obtain, are
    used to predict the age.  Further information, such as weather patterns
    and location (hence food availability) may be required to solve the problem.
 
    From the original data examples with missing values were removed (the
    majority having the predicted value missing), and the ranges of the
    continuous values have been scaled for use with an ANN (by dividing by 200).
 
    Data comes from an original (non-machine-learning) study:
 
 	Warwick J Nash, Tracy L Sellers, Simon R Talbot, Andrew J Cawthorn and
 	Wes B Ford (1994) ""The Population Biology of Abalone (_Haliotis_
 	species) in Tasmania. I. Blacklip Abalone (_H. rubra_) from the North
 	Coast and Islands of Bass Strait"", Sea Fisheries Division, Technical
 	Report No. 48 (ISSN 1034-3288)
 
 
 5. Number of Instances: 4177
 
 
 6. Number of Attributes: 8
 
 
 7. Attribute information:
 
    Given is the attribute name, attribute type, the measurement unit and a
    brief description.  The number of rings is the value to predict: either
    as a continuous value or as a classification problem.
 
 	Name		Data Type	Meas.	Description
 	----		---------	-----	-----------
 	Sex		nominal			M, F, and I (infant)
 	Length		continuous	mm	Longest shell measurement
 	Diameter	continuous	mm	perpendicular to length
 	Height		continuous	mm	with meat in shell
 	Whole weight	continuous	grams	whole abalone
 	Shucked weight	continuous	grams	weight of meat
 	Viscera weight	continuous	grams	gut weight (after bleeding)
 	Shell weight	continuous	grams	after being dried
 	Rings		integer			+1.5 gives the age in years
 
    Statistics for numeric domains:
 
 		Length	Diam	Height	Whole	Shucked	Viscera	Shell	Rings
 	Min	0.075	0.055	0.000	0.002	0.001	0.001	0.002	    1
 	Max	0.815	0.650	1.130	2.826	1.488	0.760	1.005	   29
 	Mean	0.524	0.408	0.140	0.829	0.359	0.181	0.239	9.934
 	SD	0.120	0.099	0.042	0.490	0.222	0.110	0.139	3.224
 	Correl	0.557	0.575	0.557	0.540	0.421	0.504	0.628	  1.0
 
 
 8. Missing Attribute Values: None
 
 
 9. Class Distribution:
 
 	Class	Examples
 	-----	--------
 	1	1
 	2	1
 	3	15
 	4	57
 	5	115
 	6	259
 	7	391
 	8	568
 	9	689
 	10	634
 	11	487
 	12	267
 	13	203
 	14	126
 	15	103
 	16	67
 	17	58
 	18	42
 	19	32
 	20	26
 	21	14
 	22	6
 	23	9
 	24	2
 	25	1
 	26	1
 	27	2
 	29	1
 	-----	----
 	Total	4177
 
 Num Instances:     4177
 Num Attributes:    9
 Num Continuous:    8 (Int 1 / Real 7)
 Num Discrete:      1
 Missing values:    0 /  0.0%

     name                      type enum ints real     missing    distinct  (1)
   1 'Sex'                     Enum 100%   0%   0%     0 /  0%     3 /  0%   0% 
   2 'Length'                  Real   0%   0% 100%     0 /  0%   134 /  3%   0% 
   3 'Diameter'                Real   0%   0% 100%     0 /  0%   111 /  3%   0% 
   4 'Height'                  Real   0%   0% 100%     0 /  0%    51 /  1%   0% 
   5 'Whole weight'            Real   0%   0% 100%     0 /  0%  2429 / 58%  31% 
   6 'Shucked weight'          Real   0%   0% 100%     0 /  0%  1515 / 36%  10% 
   7 'Viscera weight'          Real   0%   0% 100%     0 /  0%   880 / 21%   3% 
   8 'Shell weight'            Real   0%   0% 100%     0 /  0%   926 / 22%   8% 
   9 'Class_Rings'             Int    0% 100%   0%     0 /  0%    28 /  1%   0%";"Minimum: 0.001
Maximum: 2.825";"Minimum: 0.1
Maximum: 2.5";"The range of values for the feature ""Whole_weight"" is from 0.002 grams to 2.826 grams.";0.001;2.825;0.1;2.5;0.002;2.826;0.9994689325544346;0.8500088542588985;0.9998229461756374
44;Shucked_weight;183;abalone;numeric;0.001;1.4880000000000002;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

1. Title of Database: Abalone data
 
 2. Sources:
 
    (a) Original owners of database:
 	Marine Resources Division
 	Marine Research Laboratories - Taroona
 	Department of Primary Industry and Fisheries, Tasmania
 	GPO Box 619F, Hobart, Tasmania 7001, Australia
 	(contact: Warwick Nash +61 02 277277, wnash@dpi.tas.gov.au)
 
    (b) Donor of database:
 	Sam Waugh (Sam.Waugh@cs.utas.edu.au)
 	Department of Computer Science, University of Tasmania
 	GPO Box 252C, Hobart, Tasmania 7001, Australia
 
    (c) Date received: December 1995
 
 
 3. Past Usage:
 
    Sam Waugh (1995) ""Extending and benchmarking Cascade-Correlation"", PhD
    thesis, Computer Science Department, University of Tasmania.
 
    -- Test set performance (final 1044 examples, first 3133 used for training):
 	24.86% Cascade-Correlation (no hidden nodes)
 	26.25% Cascade-Correlation (5 hidden nodes)
 	21.5%  C4.5
 	 0.0%  Linear Discriminate Analysis
 	 3.57% k=5 Nearest Neighbour
       (Problem encoded as a classification task)
 
    -- Data set samples are highly overlapped.  Further information is required
 	to separate completely using affine combinations.  Other restrictions
 	to data set examined.
 
    David Clark, Zoltan Schreter, Anthony Adams ""A Quantitative Comparison of
    Dystal and Backpropagation"", submitted to the Australian Conference on
    Neural Networks (ACNN'96). Data set treated as a 3-category classification
    problem (grouping ring classes 1-8, 9 and 10, and 11 on).
 
    -- Test set performance (3133 training, 1044 testing as above):
 	64%    Backprop
 	55%    Dystal
    -- Previous work (Waugh, 1995) on same data set:
 	61.40% Cascade-Correlation (no hidden nodes)
 	65.61% Cascade-Correlation (5 hidden nodes)
 	59.2%  C4.5
 	32.57% Linear Discriminate Analysis
 	62.46% k=5 Nearest Neighbour
 
 
 4. Relevant Information Paragraph:
 
    Predicting the age of abalone from physical measurements.  The age of
    abalone is determined by cutting the shell through the cone, staining it,
    and counting the number of rings through a microscope -- a boring and
    time-consuming task.  Other measurements, which are easier to obtain, are
    used to predict the age.  Further information, such as weather patterns
    and location (hence food availability) may be required to solve the problem.
 
    From the original data examples with missing values were removed (the
    majority having the predicted value missing), and the ranges of the
    continuous values have been scaled for use with an ANN (by dividing by 200).
 
    Data comes from an original (non-machine-learning) study:
 
 	Warwick J Nash, Tracy L Sellers, Simon R Talbot, Andrew J Cawthorn and
 	Wes B Ford (1994) ""The Population Biology of Abalone (_Haliotis_
 	species) in Tasmania. I. Blacklip Abalone (_H. rubra_) from the North
 	Coast and Islands of Bass Strait"", Sea Fisheries Division, Technical
 	Report No. 48 (ISSN 1034-3288)
 
 
 5. Number of Instances: 4177
 
 
 6. Number of Attributes: 8
 
 
 7. Attribute information:
 
    Given is the attribute name, attribute type, the measurement unit and a
    brief description.  The number of rings is the value to predict: either
    as a continuous value or as a classification problem.
 
 	Name		Data Type	Meas.	Description
 	----		---------	-----	-----------
 	Sex		nominal			M, F, and I (infant)
 	Length		continuous	mm	Longest shell measurement
 	Diameter	continuous	mm	perpendicular to length
 	Height		continuous	mm	with meat in shell
 	Whole weight	continuous	grams	whole abalone
 	Shucked weight	continuous	grams	weight of meat
 	Viscera weight	continuous	grams	gut weight (after bleeding)
 	Shell weight	continuous	grams	after being dried
 	Rings		integer			+1.5 gives the age in years
 
    Statistics for numeric domains:
 
 		Length	Diam	Height	Whole	Shucked	Viscera	Shell	Rings
 	Min	0.075	0.055	0.000	0.002	0.001	0.001	0.002	    1
 	Max	0.815	0.650	1.130	2.826	1.488	0.760	1.005	   29
 	Mean	0.524	0.408	0.140	0.829	0.359	0.181	0.239	9.934
 	SD	0.120	0.099	0.042	0.490	0.222	0.110	0.139	3.224
 	Correl	0.557	0.575	0.557	0.540	0.421	0.504	0.628	  1.0
 
 
 8. Missing Attribute Values: None
 
 
 9. Class Distribution:
 
 	Class	Examples
 	-----	--------
 	1	1
 	2	1
 	3	15
 	4	57
 	5	115
 	6	259
 	7	391
 	8	568
 	9	689
 	10	634
 	11	487
 	12	267
 	13	203
 	14	126
 	15	103
 	16	67
 	17	58
 	18	42
 	19	32
 	20	26
 	21	14
 	22	6
 	23	9
 	24	2
 	25	1
 	26	1
 	27	2
 	29	1
 	-----	----
 	Total	4177
 
 Num Instances:     4177
 Num Attributes:    9
 Num Continuous:    8 (Int 1 / Real 7)
 Num Discrete:      1
 Missing values:    0 /  0.0%

     name                      type enum ints real     missing    distinct  (1)
   1 'Sex'                     Enum 100%   0%   0%     0 /  0%     3 /  0%   0% 
   2 'Length'                  Real   0%   0% 100%     0 /  0%   134 /  3%   0% 
   3 'Diameter'                Real   0%   0% 100%     0 /  0%   111 /  3%   0% 
   4 'Height'                  Real   0%   0% 100%     0 /  0%    51 /  1%   0% 
   5 'Whole weight'            Real   0%   0% 100%     0 /  0%  2429 / 58%  31% 
   6 'Shucked weight'          Real   0%   0% 100%     0 /  0%  1515 / 36%  10% 
   7 'Viscera weight'          Real   0%   0% 100%     0 /  0%   880 / 21%   3% 
   8 'Shell weight'            Real   0%   0% 100%     0 /  0%   926 / 22%   8% 
   9 'Class_Rings'             Int    0% 100%   0%     0 /  0%    28 /  1%   0%";"Minimum: 0.01
Maximum: 2.49";"Minimum: 0.1
Maximum: 1.5";"The min and max values for the feature ""Shucked_weight"" are 0.001 grams and 1.488 grams respectively.";0.01;2.49;0.1;1.5;0.001;1.4880000000000002;0.5938127762153476;0.9259506337558372;1.0
45;Viscera_weight;183;abalone;numeric;0.0005;0.76;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

1. Title of Database: Abalone data
 
 2. Sources:
 
    (a) Original owners of database:
 	Marine Resources Division
 	Marine Research Laboratories - Taroona
 	Department of Primary Industry and Fisheries, Tasmania
 	GPO Box 619F, Hobart, Tasmania 7001, Australia
 	(contact: Warwick Nash +61 02 277277, wnash@dpi.tas.gov.au)
 
    (b) Donor of database:
 	Sam Waugh (Sam.Waugh@cs.utas.edu.au)
 	Department of Computer Science, University of Tasmania
 	GPO Box 252C, Hobart, Tasmania 7001, Australia
 
    (c) Date received: December 1995
 
 
 3. Past Usage:
 
    Sam Waugh (1995) ""Extending and benchmarking Cascade-Correlation"", PhD
    thesis, Computer Science Department, University of Tasmania.
 
    -- Test set performance (final 1044 examples, first 3133 used for training):
 	24.86% Cascade-Correlation (no hidden nodes)
 	26.25% Cascade-Correlation (5 hidden nodes)
 	21.5%  C4.5
 	 0.0%  Linear Discriminate Analysis
 	 3.57% k=5 Nearest Neighbour
       (Problem encoded as a classification task)
 
    -- Data set samples are highly overlapped.  Further information is required
 	to separate completely using affine combinations.  Other restrictions
 	to data set examined.
 
    David Clark, Zoltan Schreter, Anthony Adams ""A Quantitative Comparison of
    Dystal and Backpropagation"", submitted to the Australian Conference on
    Neural Networks (ACNN'96). Data set treated as a 3-category classification
    problem (grouping ring classes 1-8, 9 and 10, and 11 on).
 
    -- Test set performance (3133 training, 1044 testing as above):
 	64%    Backprop
 	55%    Dystal
    -- Previous work (Waugh, 1995) on same data set:
 	61.40% Cascade-Correlation (no hidden nodes)
 	65.61% Cascade-Correlation (5 hidden nodes)
 	59.2%  C4.5
 	32.57% Linear Discriminate Analysis
 	62.46% k=5 Nearest Neighbour
 
 
 4. Relevant Information Paragraph:
 
    Predicting the age of abalone from physical measurements.  The age of
    abalone is determined by cutting the shell through the cone, staining it,
    and counting the number of rings through a microscope -- a boring and
    time-consuming task.  Other measurements, which are easier to obtain, are
    used to predict the age.  Further information, such as weather patterns
    and location (hence food availability) may be required to solve the problem.
 
    From the original data examples with missing values were removed (the
    majority having the predicted value missing), and the ranges of the
    continuous values have been scaled for use with an ANN (by dividing by 200).
 
    Data comes from an original (non-machine-learning) study:
 
 	Warwick J Nash, Tracy L Sellers, Simon R Talbot, Andrew J Cawthorn and
 	Wes B Ford (1994) ""The Population Biology of Abalone (_Haliotis_
 	species) in Tasmania. I. Blacklip Abalone (_H. rubra_) from the North
 	Coast and Islands of Bass Strait"", Sea Fisheries Division, Technical
 	Report No. 48 (ISSN 1034-3288)
 
 
 5. Number of Instances: 4177
 
 
 6. Number of Attributes: 8
 
 
 7. Attribute information:
 
    Given is the attribute name, attribute type, the measurement unit and a
    brief description.  The number of rings is the value to predict: either
    as a continuous value or as a classification problem.
 
 	Name		Data Type	Meas.	Description
 	----		---------	-----	-----------
 	Sex		nominal			M, F, and I (infant)
 	Length		continuous	mm	Longest shell measurement
 	Diameter	continuous	mm	perpendicular to length
 	Height		continuous	mm	with meat in shell
 	Whole weight	continuous	grams	whole abalone
 	Shucked weight	continuous	grams	weight of meat
 	Viscera weight	continuous	grams	gut weight (after bleeding)
 	Shell weight	continuous	grams	after being dried
 	Rings		integer			+1.5 gives the age in years
 
    Statistics for numeric domains:
 
 		Length	Diam	Height	Whole	Shucked	Viscera	Shell	Rings
 	Min	0.075	0.055	0.000	0.002	0.001	0.001	0.002	    1
 	Max	0.815	0.650	1.130	2.826	1.488	0.760	1.005	   29
 	Mean	0.524	0.408	0.140	0.829	0.359	0.181	0.239	9.934
 	SD	0.120	0.099	0.042	0.490	0.222	0.110	0.139	3.224
 	Correl	0.557	0.575	0.557	0.540	0.421	0.504	0.628	  1.0
 
 
 8. Missing Attribute Values: None
 
 
 9. Class Distribution:
 
 	Class	Examples
 	-----	--------
 	1	1
 	2	1
 	3	15
 	4	57
 	5	115
 	6	259
 	7	391
 	8	568
 	9	689
 	10	634
 	11	487
 	12	267
 	13	203
 	14	126
 	15	103
 	16	67
 	17	58
 	18	42
 	19	32
 	20	26
 	21	14
 	22	6
 	23	9
 	24	2
 	25	1
 	26	1
 	27	2
 	29	1
 	-----	----
 	Total	4177
 
 Num Instances:     4177
 Num Attributes:    9
 Num Continuous:    8 (Int 1 / Real 7)
 Num Discrete:      1
 Missing values:    0 /  0.0%

     name                      type enum ints real     missing    distinct  (1)
   1 'Sex'                     Enum 100%   0%   0%     0 /  0%     3 /  0%   0% 
   2 'Length'                  Real   0%   0% 100%     0 /  0%   134 /  3%   0% 
   3 'Diameter'                Real   0%   0% 100%     0 /  0%   111 /  3%   0% 
   4 'Height'                  Real   0%   0% 100%     0 /  0%    51 /  1%   0% 
   5 'Whole weight'            Real   0%   0% 100%     0 /  0%  2429 / 58%  31% 
   6 'Shucked weight'          Real   0%   0% 100%     0 /  0%  1515 / 36%  10% 
   7 'Viscera weight'          Real   0%   0% 100%     0 /  0%   880 / 21%   3% 
   8 'Shell weight'            Real   0%   0% 100%     0 /  0%   926 / 22%   8% 
   9 'Class_Rings'             Int    0% 100%   0%     0 /  0%    28 /  1%   0%";"Minimum: 0.05
Maximum: 0.95";"Minimum: 0.001
Maximum: 0.6";The range of values for the feature Viscera_weight is minimum 0.001 and maximum 0.760.;0.05;0.95;0.001;0.6;0.001;0.76;0.7477619799894681;0.7886767610269914;0.999341672152732
46;Shell_weight;183;abalone;numeric;0.0015;1.005;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

1. Title of Database: Abalone data
 
 2. Sources:
 
    (a) Original owners of database:
 	Marine Resources Division
 	Marine Research Laboratories - Taroona
 	Department of Primary Industry and Fisheries, Tasmania
 	GPO Box 619F, Hobart, Tasmania 7001, Australia
 	(contact: Warwick Nash +61 02 277277, wnash@dpi.tas.gov.au)
 
    (b) Donor of database:
 	Sam Waugh (Sam.Waugh@cs.utas.edu.au)
 	Department of Computer Science, University of Tasmania
 	GPO Box 252C, Hobart, Tasmania 7001, Australia
 
    (c) Date received: December 1995
 
 
 3. Past Usage:
 
    Sam Waugh (1995) ""Extending and benchmarking Cascade-Correlation"", PhD
    thesis, Computer Science Department, University of Tasmania.
 
    -- Test set performance (final 1044 examples, first 3133 used for training):
 	24.86% Cascade-Correlation (no hidden nodes)
 	26.25% Cascade-Correlation (5 hidden nodes)
 	21.5%  C4.5
 	 0.0%  Linear Discriminate Analysis
 	 3.57% k=5 Nearest Neighbour
       (Problem encoded as a classification task)
 
    -- Data set samples are highly overlapped.  Further information is required
 	to separate completely using affine combinations.  Other restrictions
 	to data set examined.
 
    David Clark, Zoltan Schreter, Anthony Adams ""A Quantitative Comparison of
    Dystal and Backpropagation"", submitted to the Australian Conference on
    Neural Networks (ACNN'96). Data set treated as a 3-category classification
    problem (grouping ring classes 1-8, 9 and 10, and 11 on).
 
    -- Test set performance (3133 training, 1044 testing as above):
 	64%    Backprop
 	55%    Dystal
    -- Previous work (Waugh, 1995) on same data set:
 	61.40% Cascade-Correlation (no hidden nodes)
 	65.61% Cascade-Correlation (5 hidden nodes)
 	59.2%  C4.5
 	32.57% Linear Discriminate Analysis
 	62.46% k=5 Nearest Neighbour
 
 
 4. Relevant Information Paragraph:
 
    Predicting the age of abalone from physical measurements.  The age of
    abalone is determined by cutting the shell through the cone, staining it,
    and counting the number of rings through a microscope -- a boring and
    time-consuming task.  Other measurements, which are easier to obtain, are
    used to predict the age.  Further information, such as weather patterns
    and location (hence food availability) may be required to solve the problem.
 
    From the original data examples with missing values were removed (the
    majority having the predicted value missing), and the ranges of the
    continuous values have been scaled for use with an ANN (by dividing by 200).
 
    Data comes from an original (non-machine-learning) study:
 
 	Warwick J Nash, Tracy L Sellers, Simon R Talbot, Andrew J Cawthorn and
 	Wes B Ford (1994) ""The Population Biology of Abalone (_Haliotis_
 	species) in Tasmania. I. Blacklip Abalone (_H. rubra_) from the North
 	Coast and Islands of Bass Strait"", Sea Fisheries Division, Technical
 	Report No. 48 (ISSN 1034-3288)
 
 
 5. Number of Instances: 4177
 
 
 6. Number of Attributes: 8
 
 
 7. Attribute information:
 
    Given is the attribute name, attribute type, the measurement unit and a
    brief description.  The number of rings is the value to predict: either
    as a continuous value or as a classification problem.
 
 	Name		Data Type	Meas.	Description
 	----		---------	-----	-----------
 	Sex		nominal			M, F, and I (infant)
 	Length		continuous	mm	Longest shell measurement
 	Diameter	continuous	mm	perpendicular to length
 	Height		continuous	mm	with meat in shell
 	Whole weight	continuous	grams	whole abalone
 	Shucked weight	continuous	grams	weight of meat
 	Viscera weight	continuous	grams	gut weight (after bleeding)
 	Shell weight	continuous	grams	after being dried
 	Rings		integer			+1.5 gives the age in years
 
    Statistics for numeric domains:
 
 		Length	Diam	Height	Whole	Shucked	Viscera	Shell	Rings
 	Min	0.075	0.055	0.000	0.002	0.001	0.001	0.002	    1
 	Max	0.815	0.650	1.130	2.826	1.488	0.760	1.005	   29
 	Mean	0.524	0.408	0.140	0.829	0.359	0.181	0.239	9.934
 	SD	0.120	0.099	0.042	0.490	0.222	0.110	0.139	3.224
 	Correl	0.557	0.575	0.557	0.540	0.421	0.504	0.628	  1.0
 
 
 8. Missing Attribute Values: None
 
 
 9. Class Distribution:
 
 	Class	Examples
 	-----	--------
 	1	1
 	2	1
 	3	15
 	4	57
 	5	115
 	6	259
 	7	391
 	8	568
 	9	689
 	10	634
 	11	487
 	12	267
 	13	203
 	14	126
 	15	103
 	16	67
 	17	58
 	18	42
 	19	32
 	20	26
 	21	14
 	22	6
 	23	9
 	24	2
 	25	1
 	26	1
 	27	2
 	29	1
 	-----	----
 	Total	4177
 
 Num Instances:     4177
 Num Attributes:    9
 Num Continuous:    8 (Int 1 / Real 7)
 Num Discrete:      1
 Missing values:    0 /  0.0%

     name                      type enum ints real     missing    distinct  (1)
   1 'Sex'                     Enum 100%   0%   0%     0 /  0%     3 /  0%   0% 
   2 'Length'                  Real   0%   0% 100%     0 /  0%   134 /  3%   0% 
   3 'Diameter'                Real   0%   0% 100%     0 /  0%   111 /  3%   0% 
   4 'Height'                  Real   0%   0% 100%     0 /  0%    51 /  1%   0% 
   5 'Whole weight'            Real   0%   0% 100%     0 /  0%  2429 / 58%  31% 
   6 'Shucked weight'          Real   0%   0% 100%     0 /  0%  1515 / 36%  10% 
   7 'Viscera weight'          Real   0%   0% 100%     0 /  0%   880 / 21%   3% 
   8 'Shell weight'            Real   0%   0% 100%     0 /  0%   926 / 22%   8% 
   9 'Class_Rings'             Int    0% 100%   0%     0 /  0%    28 /  1%   0%";"1. Min: 0.01
2. Max: 0.9";"Minimum: 0.001
Maximum: 1.005";"The feature ""Shell_weight"" has a range of values from 0.002 to 1.005.";;;0.001;1.005;0.002;1.005;;0.9995019920318723;0.9995017438963628
47;lread;197;cpu_act;numeric;0.0;1845.0;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

The Computer Activity databases are a collection of computer systems
 activity measures. The data was collected from a Sun Sparcstation
 20/712 with 128 Mbytes of memory running in a multi-user university
 department. Users would typically be doing a large variety of tasks
 ranging from accessing the internet, editing files or running very
 cpu-bound programs.  The data was collected continuously on two
 separate occasions. On both occassions, system activity was gathered
 every 5 seconds. The final dataset is taken from both occasions with
 equal numbers of observations coming from each collection epoch.
 
 System measures used:
 1. lread - Reads (transfers per second ) between system memory and user memory.
 2. lwrite - writes (transfers per second) between system memory and user memory.
 3. scall - Number of system calls of all types per second.
 4. sread - Number of system read calls per second.
 5. swrite - Number of system write calls per second . 
 6. fork - Number of system fork calls per second. 
 7. exec - Number of system exec calls per second. 
 8. rchar - Number of characters transferred per second by system read calls.
 9. wchar - Number of characters transfreed per second by system write calls. 
 10. pgout - Number of page out requests per second.
 11. ppgout - Number of pages, paged out per second. 
 12. pgfree - Number of pages per second placed on the free list. 
 13. pgscan - Number of pages checked if they can be freed per second.
 14. atch - Number of page attaches (satisfying a page fault by reclaiming a page in memory) per second.
 15. pgin - Number of page-in requests per second.
 16. ppgin - Number of pages paged in per second.
 17. pflt - Number of page faults caused by protection errors (copy-on-writes). 
 18. vflt - Number of page faults caused by address translation. 
 19. runqsz - Process run queue size.
 20. freemem - Number of memory pages available to user processes.
 21. freeswap - Number of disk blocks available for page swapping. 
 22. usr - Portion of time (%) that cpus run in user mode.
 23. sys - Portion of time (%) that cpus run in system mode.
 24. wio - Portion of time (%) that cpus are idle waiting for block IO.
 25. idle - Portion of time (%) that cpus are otherwise idle.
 
 The two different regression tasks obtained from these databases are:
 
 CompAct 
 Predict usr, the portion of time that cpus run in user mode from all attributes 1-21.
 
 CompAct(s) 
 Predict usr using a restricted number (excluding the paging information (10-18)
 
 Source: collection of regression datasets by Luis Torgo (ltorgo@ncc.up.pt) at
 http://www.ncc.up.pt/~ltorgo/Regression/DataSets.html
 Original source: DELVE repository of data. 
 Characteristics: 8192 cases, 22 continuous attributes";"Minimum: 0
Maximum: 100";"Minimum: 0
Maximum: 100000";"The min and max values for the feature ""lread"" are not provided in the dataset description.";0.0;100.0;0.0;100000.0;;;0.05420054200542006;0.01845;
48;lwrite;197;cpu_act;numeric;0.0;575.0;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

The Computer Activity databases are a collection of computer systems
 activity measures. The data was collected from a Sun Sparcstation
 20/712 with 128 Mbytes of memory running in a multi-user university
 department. Users would typically be doing a large variety of tasks
 ranging from accessing the internet, editing files or running very
 cpu-bound programs.  The data was collected continuously on two
 separate occasions. On both occassions, system activity was gathered
 every 5 seconds. The final dataset is taken from both occasions with
 equal numbers of observations coming from each collection epoch.
 
 System measures used:
 1. lread - Reads (transfers per second ) between system memory and user memory.
 2. lwrite - writes (transfers per second) between system memory and user memory.
 3. scall - Number of system calls of all types per second.
 4. sread - Number of system read calls per second.
 5. swrite - Number of system write calls per second . 
 6. fork - Number of system fork calls per second. 
 7. exec - Number of system exec calls per second. 
 8. rchar - Number of characters transferred per second by system read calls.
 9. wchar - Number of characters transfreed per second by system write calls. 
 10. pgout - Number of page out requests per second.
 11. ppgout - Number of pages, paged out per second. 
 12. pgfree - Number of pages per second placed on the free list. 
 13. pgscan - Number of pages checked if they can be freed per second.
 14. atch - Number of page attaches (satisfying a page fault by reclaiming a page in memory) per second.
 15. pgin - Number of page-in requests per second.
 16. ppgin - Number of pages paged in per second.
 17. pflt - Number of page faults caused by protection errors (copy-on-writes). 
 18. vflt - Number of page faults caused by address translation. 
 19. runqsz - Process run queue size.
 20. freemem - Number of memory pages available to user processes.
 21. freeswap - Number of disk blocks available for page swapping. 
 22. usr - Portion of time (%) that cpus run in user mode.
 23. sys - Portion of time (%) that cpus run in system mode.
 24. wio - Portion of time (%) that cpus are idle waiting for block IO.
 25. idle - Portion of time (%) that cpus are otherwise idle.
 
 The two different regression tasks obtained from these databases are:
 
 CompAct 
 Predict usr, the portion of time that cpus run in user mode from all attributes 1-21.
 
 CompAct(s) 
 Predict usr using a restricted number (excluding the paging information (10-18)
 
 Source: collection of regression datasets by Luis Torgo (ltorgo@ncc.up.pt) at
 http://www.ncc.up.pt/~ltorgo/Regression/DataSets.html
 Original source: DELVE repository of data. 
 Characteristics: 8192 cases, 22 continuous attributes";minimum: 0 maximum: 100;"Minimum: 0
Maximum: Unlimited";"The range of values for the feature ""lwritethat"" from this dataset is not specified.";0.0;100.0;;;;;0.17391304347826086;;
49;scall;197;cpu_act;numeric;109.0;12493.0;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

The Computer Activity databases are a collection of computer systems
 activity measures. The data was collected from a Sun Sparcstation
 20/712 with 128 Mbytes of memory running in a multi-user university
 department. Users would typically be doing a large variety of tasks
 ranging from accessing the internet, editing files or running very
 cpu-bound programs.  The data was collected continuously on two
 separate occasions. On both occassions, system activity was gathered
 every 5 seconds. The final dataset is taken from both occasions with
 equal numbers of observations coming from each collection epoch.
 
 System measures used:
 1. lread - Reads (transfers per second ) between system memory and user memory.
 2. lwrite - writes (transfers per second) between system memory and user memory.
 3. scall - Number of system calls of all types per second.
 4. sread - Number of system read calls per second.
 5. swrite - Number of system write calls per second . 
 6. fork - Number of system fork calls per second. 
 7. exec - Number of system exec calls per second. 
 8. rchar - Number of characters transferred per second by system read calls.
 9. wchar - Number of characters transfreed per second by system write calls. 
 10. pgout - Number of page out requests per second.
 11. ppgout - Number of pages, paged out per second. 
 12. pgfree - Number of pages per second placed on the free list. 
 13. pgscan - Number of pages checked if they can be freed per second.
 14. atch - Number of page attaches (satisfying a page fault by reclaiming a page in memory) per second.
 15. pgin - Number of page-in requests per second.
 16. ppgin - Number of pages paged in per second.
 17. pflt - Number of page faults caused by protection errors (copy-on-writes). 
 18. vflt - Number of page faults caused by address translation. 
 19. runqsz - Process run queue size.
 20. freemem - Number of memory pages available to user processes.
 21. freeswap - Number of disk blocks available for page swapping. 
 22. usr - Portion of time (%) that cpus run in user mode.
 23. sys - Portion of time (%) that cpus run in system mode.
 24. wio - Portion of time (%) that cpus are idle waiting for block IO.
 25. idle - Portion of time (%) that cpus are otherwise idle.
 
 The two different regression tasks obtained from these databases are:
 
 CompAct 
 Predict usr, the portion of time that cpus run in user mode from all attributes 1-21.
 
 CompAct(s) 
 Predict usr using a restricted number (excluding the paging information (10-18)
 
 Source: collection of regression datasets by Luis Torgo (ltorgo@ncc.up.pt) at
 http://www.ncc.up.pt/~ltorgo/Regression/DataSets.html
 Original source: DELVE repository of data. 
 Characteristics: 8192 cases, 22 continuous attributes";"Minimum: 0.0
Maximum: 1.0";"Minimum: 0
Maximum: Unknown";"For the feature ""scall"" in the dataset, the range of values is as follows:
Min: 0
Max: Unknown";0.0;1.0;;;;;;;
50;sread;197;cpu_act;numeric;6.0;5318.0;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

The Computer Activity databases are a collection of computer systems
 activity measures. The data was collected from a Sun Sparcstation
 20/712 with 128 Mbytes of memory running in a multi-user university
 department. Users would typically be doing a large variety of tasks
 ranging from accessing the internet, editing files or running very
 cpu-bound programs.  The data was collected continuously on two
 separate occasions. On both occassions, system activity was gathered
 every 5 seconds. The final dataset is taken from both occasions with
 equal numbers of observations coming from each collection epoch.
 
 System measures used:
 1. lread - Reads (transfers per second ) between system memory and user memory.
 2. lwrite - writes (transfers per second) between system memory and user memory.
 3. scall - Number of system calls of all types per second.
 4. sread - Number of system read calls per second.
 5. swrite - Number of system write calls per second . 
 6. fork - Number of system fork calls per second. 
 7. exec - Number of system exec calls per second. 
 8. rchar - Number of characters transferred per second by system read calls.
 9. wchar - Number of characters transfreed per second by system write calls. 
 10. pgout - Number of page out requests per second.
 11. ppgout - Number of pages, paged out per second. 
 12. pgfree - Number of pages per second placed on the free list. 
 13. pgscan - Number of pages checked if they can be freed per second.
 14. atch - Number of page attaches (satisfying a page fault by reclaiming a page in memory) per second.
 15. pgin - Number of page-in requests per second.
 16. ppgin - Number of pages paged in per second.
 17. pflt - Number of page faults caused by protection errors (copy-on-writes). 
 18. vflt - Number of page faults caused by address translation. 
 19. runqsz - Process run queue size.
 20. freemem - Number of memory pages available to user processes.
 21. freeswap - Number of disk blocks available for page swapping. 
 22. usr - Portion of time (%) that cpus run in user mode.
 23. sys - Portion of time (%) that cpus run in system mode.
 24. wio - Portion of time (%) that cpus are idle waiting for block IO.
 25. idle - Portion of time (%) that cpus are otherwise idle.
 
 The two different regression tasks obtained from these databases are:
 
 CompAct 
 Predict usr, the portion of time that cpus run in user mode from all attributes 1-21.
 
 CompAct(s) 
 Predict usr using a restricted number (excluding the paging information (10-18)
 
 Source: collection of regression datasets by Luis Torgo (ltorgo@ncc.up.pt) at
 http://www.ncc.up.pt/~ltorgo/Regression/DataSets.html
 Original source: DELVE repository of data. 
 Characteristics: 8192 cases, 22 continuous attributes";Minimum: 0 Maximum: 100;Minimum: 0 Maximum: 100;"The range of values for the feature ""sread"" in the dataset is as follows:
Min: 0
Max: unknown";0.0;100.0;0.0;100.0;;;0.017675817976682964;0.017675817976682964;
51;swrite;197;cpu_act;numeric;7.0;5456.0;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

The Computer Activity databases are a collection of computer systems
 activity measures. The data was collected from a Sun Sparcstation
 20/712 with 128 Mbytes of memory running in a multi-user university
 department. Users would typically be doing a large variety of tasks
 ranging from accessing the internet, editing files or running very
 cpu-bound programs.  The data was collected continuously on two
 separate occasions. On both occassions, system activity was gathered
 every 5 seconds. The final dataset is taken from both occasions with
 equal numbers of observations coming from each collection epoch.
 
 System measures used:
 1. lread - Reads (transfers per second ) between system memory and user memory.
 2. lwrite - writes (transfers per second) between system memory and user memory.
 3. scall - Number of system calls of all types per second.
 4. sread - Number of system read calls per second.
 5. swrite - Number of system write calls per second . 
 6. fork - Number of system fork calls per second. 
 7. exec - Number of system exec calls per second. 
 8. rchar - Number of characters transferred per second by system read calls.
 9. wchar - Number of characters transfreed per second by system write calls. 
 10. pgout - Number of page out requests per second.
 11. ppgout - Number of pages, paged out per second. 
 12. pgfree - Number of pages per second placed on the free list. 
 13. pgscan - Number of pages checked if they can be freed per second.
 14. atch - Number of page attaches (satisfying a page fault by reclaiming a page in memory) per second.
 15. pgin - Number of page-in requests per second.
 16. ppgin - Number of pages paged in per second.
 17. pflt - Number of page faults caused by protection errors (copy-on-writes). 
 18. vflt - Number of page faults caused by address translation. 
 19. runqsz - Process run queue size.
 20. freemem - Number of memory pages available to user processes.
 21. freeswap - Number of disk blocks available for page swapping. 
 22. usr - Portion of time (%) that cpus run in user mode.
 23. sys - Portion of time (%) that cpus run in system mode.
 24. wio - Portion of time (%) that cpus are idle waiting for block IO.
 25. idle - Portion of time (%) that cpus are otherwise idle.
 
 The two different regression tasks obtained from these databases are:
 
 CompAct 
 Predict usr, the portion of time that cpus run in user mode from all attributes 1-21.
 
 CompAct(s) 
 Predict usr using a restricted number (excluding the paging information (10-18)
 
 Source: collection of regression datasets by Luis Torgo (ltorgo@ncc.up.pt) at
 http://www.ncc.up.pt/~ltorgo/Regression/DataSets.html
 Original source: DELVE repository of data. 
 Characteristics: 8192 cases, 22 continuous attributes";"Minimum: 0
Maximum: 1";"Minimum: 0
Maximum: Any positive value";"Based on the dataset description, the feature ""swrite"" represents the number of system write calls per second. To set the range of values for this feature, we need to find the minimum and maximum values from the dataset.";0.0;1.0;;;;;;;
52;fork;197;cpu_act;numeric;0.0;20.12;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

The Computer Activity databases are a collection of computer systems
 activity measures. The data was collected from a Sun Sparcstation
 20/712 with 128 Mbytes of memory running in a multi-user university
 department. Users would typically be doing a large variety of tasks
 ranging from accessing the internet, editing files or running very
 cpu-bound programs.  The data was collected continuously on two
 separate occasions. On both occassions, system activity was gathered
 every 5 seconds. The final dataset is taken from both occasions with
 equal numbers of observations coming from each collection epoch.
 
 System measures used:
 1. lread - Reads (transfers per second ) between system memory and user memory.
 2. lwrite - writes (transfers per second) between system memory and user memory.
 3. scall - Number of system calls of all types per second.
 4. sread - Number of system read calls per second.
 5. swrite - Number of system write calls per second . 
 6. fork - Number of system fork calls per second. 
 7. exec - Number of system exec calls per second. 
 8. rchar - Number of characters transferred per second by system read calls.
 9. wchar - Number of characters transfreed per second by system write calls. 
 10. pgout - Number of page out requests per second.
 11. ppgout - Number of pages, paged out per second. 
 12. pgfree - Number of pages per second placed on the free list. 
 13. pgscan - Number of pages checked if they can be freed per second.
 14. atch - Number of page attaches (satisfying a page fault by reclaiming a page in memory) per second.
 15. pgin - Number of page-in requests per second.
 16. ppgin - Number of pages paged in per second.
 17. pflt - Number of page faults caused by protection errors (copy-on-writes). 
 18. vflt - Number of page faults caused by address translation. 
 19. runqsz - Process run queue size.
 20. freemem - Number of memory pages available to user processes.
 21. freeswap - Number of disk blocks available for page swapping. 
 22. usr - Portion of time (%) that cpus run in user mode.
 23. sys - Portion of time (%) that cpus run in system mode.
 24. wio - Portion of time (%) that cpus are idle waiting for block IO.
 25. idle - Portion of time (%) that cpus are otherwise idle.
 
 The two different regression tasks obtained from these databases are:
 
 CompAct 
 Predict usr, the portion of time that cpus run in user mode from all attributes 1-21.
 
 CompAct(s) 
 Predict usr using a restricted number (excluding the paging information (10-18)
 
 Source: collection of regression datasets by Luis Torgo (ltorgo@ncc.up.pt) at
 http://www.ncc.up.pt/~ltorgo/Regression/DataSets.html
 Original source: DELVE repository of data. 
 Characteristics: 8192 cases, 22 continuous attributes";"Minimum: 0
Maximum: 1000";"Minimum: 0
Maximum: 100";"The minimum and maximum values for the feature ""fork"" in the dataset are not provided in the given information.";0.0;1000.0;0.0;100.0;;;0.020120000000000002;0.20120000000000002;
53;exec;197;cpu_act;numeric;0.0;59.56;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

The Computer Activity databases are a collection of computer systems
 activity measures. The data was collected from a Sun Sparcstation
 20/712 with 128 Mbytes of memory running in a multi-user university
 department. Users would typically be doing a large variety of tasks
 ranging from accessing the internet, editing files or running very
 cpu-bound programs.  The data was collected continuously on two
 separate occasions. On both occassions, system activity was gathered
 every 5 seconds. The final dataset is taken from both occasions with
 equal numbers of observations coming from each collection epoch.
 
 System measures used:
 1. lread - Reads (transfers per second ) between system memory and user memory.
 2. lwrite - writes (transfers per second) between system memory and user memory.
 3. scall - Number of system calls of all types per second.
 4. sread - Number of system read calls per second.
 5. swrite - Number of system write calls per second . 
 6. fork - Number of system fork calls per second. 
 7. exec - Number of system exec calls per second. 
 8. rchar - Number of characters transferred per second by system read calls.
 9. wchar - Number of characters transfreed per second by system write calls. 
 10. pgout - Number of page out requests per second.
 11. ppgout - Number of pages, paged out per second. 
 12. pgfree - Number of pages per second placed on the free list. 
 13. pgscan - Number of pages checked if they can be freed per second.
 14. atch - Number of page attaches (satisfying a page fault by reclaiming a page in memory) per second.
 15. pgin - Number of page-in requests per second.
 16. ppgin - Number of pages paged in per second.
 17. pflt - Number of page faults caused by protection errors (copy-on-writes). 
 18. vflt - Number of page faults caused by address translation. 
 19. runqsz - Process run queue size.
 20. freemem - Number of memory pages available to user processes.
 21. freeswap - Number of disk blocks available for page swapping. 
 22. usr - Portion of time (%) that cpus run in user mode.
 23. sys - Portion of time (%) that cpus run in system mode.
 24. wio - Portion of time (%) that cpus are idle waiting for block IO.
 25. idle - Portion of time (%) that cpus are otherwise idle.
 
 The two different regression tasks obtained from these databases are:
 
 CompAct 
 Predict usr, the portion of time that cpus run in user mode from all attributes 1-21.
 
 CompAct(s) 
 Predict usr using a restricted number (excluding the paging information (10-18)
 
 Source: collection of regression datasets by Luis Torgo (ltorgo@ncc.up.pt) at
 http://www.ncc.up.pt/~ltorgo/Regression/DataSets.html
 Original source: DELVE repository of data. 
 Characteristics: 8192 cases, 22 continuous attributes";"Minimum: 0
Maximum: 1000000";"Minimum: 0
Maximum: 1000000";"For the feature ""exec"" from the dataset, the minimum and maximum values are not given.";0.0;1000000.0;0.0;1000000.0;;;5.956e-05;5.956e-05;
54;rchar;197;cpu_act;numeric;278.0;2526649.0;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

The Computer Activity databases are a collection of computer systems
 activity measures. The data was collected from a Sun Sparcstation
 20/712 with 128 Mbytes of memory running in a multi-user university
 department. Users would typically be doing a large variety of tasks
 ranging from accessing the internet, editing files or running very
 cpu-bound programs.  The data was collected continuously on two
 separate occasions. On both occassions, system activity was gathered
 every 5 seconds. The final dataset is taken from both occasions with
 equal numbers of observations coming from each collection epoch.
 
 System measures used:
 1. lread - Reads (transfers per second ) between system memory and user memory.
 2. lwrite - writes (transfers per second) between system memory and user memory.
 3. scall - Number of system calls of all types per second.
 4. sread - Number of system read calls per second.
 5. swrite - Number of system write calls per second . 
 6. fork - Number of system fork calls per second. 
 7. exec - Number of system exec calls per second. 
 8. rchar - Number of characters transferred per second by system read calls.
 9. wchar - Number of characters transfreed per second by system write calls. 
 10. pgout - Number of page out requests per second.
 11. ppgout - Number of pages, paged out per second. 
 12. pgfree - Number of pages per second placed on the free list. 
 13. pgscan - Number of pages checked if they can be freed per second.
 14. atch - Number of page attaches (satisfying a page fault by reclaiming a page in memory) per second.
 15. pgin - Number of page-in requests per second.
 16. ppgin - Number of pages paged in per second.
 17. pflt - Number of page faults caused by protection errors (copy-on-writes). 
 18. vflt - Number of page faults caused by address translation. 
 19. runqsz - Process run queue size.
 20. freemem - Number of memory pages available to user processes.
 21. freeswap - Number of disk blocks available for page swapping. 
 22. usr - Portion of time (%) that cpus run in user mode.
 23. sys - Portion of time (%) that cpus run in system mode.
 24. wio - Portion of time (%) that cpus are idle waiting for block IO.
 25. idle - Portion of time (%) that cpus are otherwise idle.
 
 The two different regression tasks obtained from these databases are:
 
 CompAct 
 Predict usr, the portion of time that cpus run in user mode from all attributes 1-21.
 
 CompAct(s) 
 Predict usr using a restricted number (excluding the paging information (10-18)
 
 Source: collection of regression datasets by Luis Torgo (ltorgo@ncc.up.pt) at
 http://www.ncc.up.pt/~ltorgo/Regression/DataSets.html
 Original source: DELVE repository of data. 
 Characteristics: 8192 cases, 22 continuous attributes";"Minimum: 0
Maximum: Unknown";"Minimum: 0
Maximum: Unknown";"Based on the given information, the range of values for the feature ""rchar"" is not provided.";;;;;;;;;
55;wchar;197;cpu_act;numeric;1498.0;1801623.0;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

The Computer Activity databases are a collection of computer systems
 activity measures. The data was collected from a Sun Sparcstation
 20/712 with 128 Mbytes of memory running in a multi-user university
 department. Users would typically be doing a large variety of tasks
 ranging from accessing the internet, editing files or running very
 cpu-bound programs.  The data was collected continuously on two
 separate occasions. On both occassions, system activity was gathered
 every 5 seconds. The final dataset is taken from both occasions with
 equal numbers of observations coming from each collection epoch.
 
 System measures used:
 1. lread - Reads (transfers per second ) between system memory and user memory.
 2. lwrite - writes (transfers per second) between system memory and user memory.
 3. scall - Number of system calls of all types per second.
 4. sread - Number of system read calls per second.
 5. swrite - Number of system write calls per second . 
 6. fork - Number of system fork calls per second. 
 7. exec - Number of system exec calls per second. 
 8. rchar - Number of characters transferred per second by system read calls.
 9. wchar - Number of characters transfreed per second by system write calls. 
 10. pgout - Number of page out requests per second.
 11. ppgout - Number of pages, paged out per second. 
 12. pgfree - Number of pages per second placed on the free list. 
 13. pgscan - Number of pages checked if they can be freed per second.
 14. atch - Number of page attaches (satisfying a page fault by reclaiming a page in memory) per second.
 15. pgin - Number of page-in requests per second.
 16. ppgin - Number of pages paged in per second.
 17. pflt - Number of page faults caused by protection errors (copy-on-writes). 
 18. vflt - Number of page faults caused by address translation. 
 19. runqsz - Process run queue size.
 20. freemem - Number of memory pages available to user processes.
 21. freeswap - Number of disk blocks available for page swapping. 
 22. usr - Portion of time (%) that cpus run in user mode.
 23. sys - Portion of time (%) that cpus run in system mode.
 24. wio - Portion of time (%) that cpus are idle waiting for block IO.
 25. idle - Portion of time (%) that cpus are otherwise idle.
 
 The two different regression tasks obtained from these databases are:
 
 CompAct 
 Predict usr, the portion of time that cpus run in user mode from all attributes 1-21.
 
 CompAct(s) 
 Predict usr using a restricted number (excluding the paging information (10-18)
 
 Source: collection of regression datasets by Luis Torgo (ltorgo@ncc.up.pt) at
 http://www.ncc.up.pt/~ltorgo/Regression/DataSets.html
 Original source: DELVE repository of data. 
 Characteristics: 8192 cases, 22 continuous attributes";The minimum and maximum values for the feature wchar in the dataset are not provided.;"Minimum: 0

Maximum: Unknown";"The range of values for the feature ""wchar"" is not provided in the given dataset description.";;;;;;;;;
56;pgout;197;cpu_act;numeric;0.0;81.44;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

The Computer Activity databases are a collection of computer systems
 activity measures. The data was collected from a Sun Sparcstation
 20/712 with 128 Mbytes of memory running in a multi-user university
 department. Users would typically be doing a large variety of tasks
 ranging from accessing the internet, editing files or running very
 cpu-bound programs.  The data was collected continuously on two
 separate occasions. On both occassions, system activity was gathered
 every 5 seconds. The final dataset is taken from both occasions with
 equal numbers of observations coming from each collection epoch.
 
 System measures used:
 1. lread - Reads (transfers per second ) between system memory and user memory.
 2. lwrite - writes (transfers per second) between system memory and user memory.
 3. scall - Number of system calls of all types per second.
 4. sread - Number of system read calls per second.
 5. swrite - Number of system write calls per second . 
 6. fork - Number of system fork calls per second. 
 7. exec - Number of system exec calls per second. 
 8. rchar - Number of characters transferred per second by system read calls.
 9. wchar - Number of characters transfreed per second by system write calls. 
 10. pgout - Number of page out requests per second.
 11. ppgout - Number of pages, paged out per second. 
 12. pgfree - Number of pages per second placed on the free list. 
 13. pgscan - Number of pages checked if they can be freed per second.
 14. atch - Number of page attaches (satisfying a page fault by reclaiming a page in memory) per second.
 15. pgin - Number of page-in requests per second.
 16. ppgin - Number of pages paged in per second.
 17. pflt - Number of page faults caused by protection errors (copy-on-writes). 
 18. vflt - Number of page faults caused by address translation. 
 19. runqsz - Process run queue size.
 20. freemem - Number of memory pages available to user processes.
 21. freeswap - Number of disk blocks available for page swapping. 
 22. usr - Portion of time (%) that cpus run in user mode.
 23. sys - Portion of time (%) that cpus run in system mode.
 24. wio - Portion of time (%) that cpus are idle waiting for block IO.
 25. idle - Portion of time (%) that cpus are otherwise idle.
 
 The two different regression tasks obtained from these databases are:
 
 CompAct 
 Predict usr, the portion of time that cpus run in user mode from all attributes 1-21.
 
 CompAct(s) 
 Predict usr using a restricted number (excluding the paging information (10-18)
 
 Source: collection of regression datasets by Luis Torgo (ltorgo@ncc.up.pt) at
 http://www.ncc.up.pt/~ltorgo/Regression/DataSets.html
 Original source: DELVE repository of data. 
 Characteristics: 8192 cases, 22 continuous attributes";"Minimum: 0
Maximum: 100";Min: 0, Max: unknown;"The range for the feature ""pgout"" is:

Min: 0
Max: Unknown";0.0;100.0;;;;;0.8144;;
57;ppgout;197;cpu_act;numeric;0.0;184.2;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

The Computer Activity databases are a collection of computer systems
 activity measures. The data was collected from a Sun Sparcstation
 20/712 with 128 Mbytes of memory running in a multi-user university
 department. Users would typically be doing a large variety of tasks
 ranging from accessing the internet, editing files or running very
 cpu-bound programs.  The data was collected continuously on two
 separate occasions. On both occassions, system activity was gathered
 every 5 seconds. The final dataset is taken from both occasions with
 equal numbers of observations coming from each collection epoch.
 
 System measures used:
 1. lread - Reads (transfers per second ) between system memory and user memory.
 2. lwrite - writes (transfers per second) between system memory and user memory.
 3. scall - Number of system calls of all types per second.
 4. sread - Number of system read calls per second.
 5. swrite - Number of system write calls per second . 
 6. fork - Number of system fork calls per second. 
 7. exec - Number of system exec calls per second. 
 8. rchar - Number of characters transferred per second by system read calls.
 9. wchar - Number of characters transfreed per second by system write calls. 
 10. pgout - Number of page out requests per second.
 11. ppgout - Number of pages, paged out per second. 
 12. pgfree - Number of pages per second placed on the free list. 
 13. pgscan - Number of pages checked if they can be freed per second.
 14. atch - Number of page attaches (satisfying a page fault by reclaiming a page in memory) per second.
 15. pgin - Number of page-in requests per second.
 16. ppgin - Number of pages paged in per second.
 17. pflt - Number of page faults caused by protection errors (copy-on-writes). 
 18. vflt - Number of page faults caused by address translation. 
 19. runqsz - Process run queue size.
 20. freemem - Number of memory pages available to user processes.
 21. freeswap - Number of disk blocks available for page swapping. 
 22. usr - Portion of time (%) that cpus run in user mode.
 23. sys - Portion of time (%) that cpus run in system mode.
 24. wio - Portion of time (%) that cpus are idle waiting for block IO.
 25. idle - Portion of time (%) that cpus are otherwise idle.
 
 The two different regression tasks obtained from these databases are:
 
 CompAct 
 Predict usr, the portion of time that cpus run in user mode from all attributes 1-21.
 
 CompAct(s) 
 Predict usr using a restricted number (excluding the paging information (10-18)
 
 Source: collection of regression datasets by Luis Torgo (ltorgo@ncc.up.pt) at
 http://www.ncc.up.pt/~ltorgo/Regression/DataSets.html
 Original source: DELVE repository of data. 
 Characteristics: 8192 cases, 22 continuous attributes";"Minimum: 0
Maximum: 50";"Minimum: 0
Maximum: 5000";"The range of values for the feature ""ppgout"" in the dataset is:
Min: 0
Max: unknown";0.0;50.0;0.0;5000.0;;;0.2714440825190011;0.03684;
58;pgfree;197;cpu_act;numeric;0.0;523.0;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

The Computer Activity databases are a collection of computer systems
 activity measures. The data was collected from a Sun Sparcstation
 20/712 with 128 Mbytes of memory running in a multi-user university
 department. Users would typically be doing a large variety of tasks
 ranging from accessing the internet, editing files or running very
 cpu-bound programs.  The data was collected continuously on two
 separate occasions. On both occassions, system activity was gathered
 every 5 seconds. The final dataset is taken from both occasions with
 equal numbers of observations coming from each collection epoch.
 
 System measures used:
 1. lread - Reads (transfers per second ) between system memory and user memory.
 2. lwrite - writes (transfers per second) between system memory and user memory.
 3. scall - Number of system calls of all types per second.
 4. sread - Number of system read calls per second.
 5. swrite - Number of system write calls per second . 
 6. fork - Number of system fork calls per second. 
 7. exec - Number of system exec calls per second. 
 8. rchar - Number of characters transferred per second by system read calls.
 9. wchar - Number of characters transfreed per second by system write calls. 
 10. pgout - Number of page out requests per second.
 11. ppgout - Number of pages, paged out per second. 
 12. pgfree - Number of pages per second placed on the free list. 
 13. pgscan - Number of pages checked if they can be freed per second.
 14. atch - Number of page attaches (satisfying a page fault by reclaiming a page in memory) per second.
 15. pgin - Number of page-in requests per second.
 16. ppgin - Number of pages paged in per second.
 17. pflt - Number of page faults caused by protection errors (copy-on-writes). 
 18. vflt - Number of page faults caused by address translation. 
 19. runqsz - Process run queue size.
 20. freemem - Number of memory pages available to user processes.
 21. freeswap - Number of disk blocks available for page swapping. 
 22. usr - Portion of time (%) that cpus run in user mode.
 23. sys - Portion of time (%) that cpus run in system mode.
 24. wio - Portion of time (%) that cpus are idle waiting for block IO.
 25. idle - Portion of time (%) that cpus are otherwise idle.
 
 The two different regression tasks obtained from these databases are:
 
 CompAct 
 Predict usr, the portion of time that cpus run in user mode from all attributes 1-21.
 
 CompAct(s) 
 Predict usr using a restricted number (excluding the paging information (10-18)
 
 Source: collection of regression datasets by Luis Torgo (ltorgo@ncc.up.pt) at
 http://www.ncc.up.pt/~ltorgo/Regression/DataSets.html
 Original source: DELVE repository of data. 
 Characteristics: 8192 cases, 22 continuous attributes";"Minimum: 0
Maximum: 100";"Min: 0
Max: 100000";"The range of values for the feature ""pgfree"" in the dataset is between the minimum and maximum values observed. The exact values cannot be provided without access to the dataset.";0.0;100.0;0.0;100000.0;;;0.19120458891013384;0.00523;
59;pgscan;197;cpu_act;numeric;0.0;1237.0;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

The Computer Activity databases are a collection of computer systems
 activity measures. The data was collected from a Sun Sparcstation
 20/712 with 128 Mbytes of memory running in a multi-user university
 department. Users would typically be doing a large variety of tasks
 ranging from accessing the internet, editing files or running very
 cpu-bound programs.  The data was collected continuously on two
 separate occasions. On both occassions, system activity was gathered
 every 5 seconds. The final dataset is taken from both occasions with
 equal numbers of observations coming from each collection epoch.
 
 System measures used:
 1. lread - Reads (transfers per second ) between system memory and user memory.
 2. lwrite - writes (transfers per second) between system memory and user memory.
 3. scall - Number of system calls of all types per second.
 4. sread - Number of system read calls per second.
 5. swrite - Number of system write calls per second . 
 6. fork - Number of system fork calls per second. 
 7. exec - Number of system exec calls per second. 
 8. rchar - Number of characters transferred per second by system read calls.
 9. wchar - Number of characters transfreed per second by system write calls. 
 10. pgout - Number of page out requests per second.
 11. ppgout - Number of pages, paged out per second. 
 12. pgfree - Number of pages per second placed on the free list. 
 13. pgscan - Number of pages checked if they can be freed per second.
 14. atch - Number of page attaches (satisfying a page fault by reclaiming a page in memory) per second.
 15. pgin - Number of page-in requests per second.
 16. ppgin - Number of pages paged in per second.
 17. pflt - Number of page faults caused by protection errors (copy-on-writes). 
 18. vflt - Number of page faults caused by address translation. 
 19. runqsz - Process run queue size.
 20. freemem - Number of memory pages available to user processes.
 21. freeswap - Number of disk blocks available for page swapping. 
 22. usr - Portion of time (%) that cpus run in user mode.
 23. sys - Portion of time (%) that cpus run in system mode.
 24. wio - Portion of time (%) that cpus are idle waiting for block IO.
 25. idle - Portion of time (%) that cpus are otherwise idle.
 
 The two different regression tasks obtained from these databases are:
 
 CompAct 
 Predict usr, the portion of time that cpus run in user mode from all attributes 1-21.
 
 CompAct(s) 
 Predict usr using a restricted number (excluding the paging information (10-18)
 
 Source: collection of regression datasets by Luis Torgo (ltorgo@ncc.up.pt) at
 http://www.ncc.up.pt/~ltorgo/Regression/DataSets.html
 Original source: DELVE repository of data. 
 Characteristics: 8192 cases, 22 continuous attributes";"Minimum: 0
Maximum: 1000";"Minimum: 0
Maximum: Unknown";"The range of values for the feature ""pgscan"" is minimum 0 and maximum 65.";0.0;1000.0;;;0.0;65.0;0.8084074373484236;;0.05254648342764753
60;atch;197;cpu_act;numeric;0.0;211.58;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

The Computer Activity databases are a collection of computer systems
 activity measures. The data was collected from a Sun Sparcstation
 20/712 with 128 Mbytes of memory running in a multi-user university
 department. Users would typically be doing a large variety of tasks
 ranging from accessing the internet, editing files or running very
 cpu-bound programs.  The data was collected continuously on two
 separate occasions. On both occassions, system activity was gathered
 every 5 seconds. The final dataset is taken from both occasions with
 equal numbers of observations coming from each collection epoch.
 
 System measures used:
 1. lread - Reads (transfers per second ) between system memory and user memory.
 2. lwrite - writes (transfers per second) between system memory and user memory.
 3. scall - Number of system calls of all types per second.
 4. sread - Number of system read calls per second.
 5. swrite - Number of system write calls per second . 
 6. fork - Number of system fork calls per second. 
 7. exec - Number of system exec calls per second. 
 8. rchar - Number of characters transferred per second by system read calls.
 9. wchar - Number of characters transfreed per second by system write calls. 
 10. pgout - Number of page out requests per second.
 11. ppgout - Number of pages, paged out per second. 
 12. pgfree - Number of pages per second placed on the free list. 
 13. pgscan - Number of pages checked if they can be freed per second.
 14. atch - Number of page attaches (satisfying a page fault by reclaiming a page in memory) per second.
 15. pgin - Number of page-in requests per second.
 16. ppgin - Number of pages paged in per second.
 17. pflt - Number of page faults caused by protection errors (copy-on-writes). 
 18. vflt - Number of page faults caused by address translation. 
 19. runqsz - Process run queue size.
 20. freemem - Number of memory pages available to user processes.
 21. freeswap - Number of disk blocks available for page swapping. 
 22. usr - Portion of time (%) that cpus run in user mode.
 23. sys - Portion of time (%) that cpus run in system mode.
 24. wio - Portion of time (%) that cpus are idle waiting for block IO.
 25. idle - Portion of time (%) that cpus are otherwise idle.
 
 The two different regression tasks obtained from these databases are:
 
 CompAct 
 Predict usr, the portion of time that cpus run in user mode from all attributes 1-21.
 
 CompAct(s) 
 Predict usr using a restricted number (excluding the paging information (10-18)
 
 Source: collection of regression datasets by Luis Torgo (ltorgo@ncc.up.pt) at
 http://www.ncc.up.pt/~ltorgo/Regression/DataSets.html
 Original source: DELVE repository of data. 
 Characteristics: 8192 cases, 22 continuous attributes";"Minimum: 0
Maximum: 100";"Minimum: 0
Maximum: 1000";"The range of values for the feature ""atch"" is as follows:

Min: 0
Max: Unknown (not specified in the dataset description)";0.0;100.0;0.0;1000.0;;;0.4726344645051517;0.21158000000000002;
61;pgin;197;cpu_act;numeric;0.0;141.2;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

The Computer Activity databases are a collection of computer systems
 activity measures. The data was collected from a Sun Sparcstation
 20/712 with 128 Mbytes of memory running in a multi-user university
 department. Users would typically be doing a large variety of tasks
 ranging from accessing the internet, editing files or running very
 cpu-bound programs.  The data was collected continuously on two
 separate occasions. On both occassions, system activity was gathered
 every 5 seconds. The final dataset is taken from both occasions with
 equal numbers of observations coming from each collection epoch.
 
 System measures used:
 1. lread - Reads (transfers per second ) between system memory and user memory.
 2. lwrite - writes (transfers per second) between system memory and user memory.
 3. scall - Number of system calls of all types per second.
 4. sread - Number of system read calls per second.
 5. swrite - Number of system write calls per second . 
 6. fork - Number of system fork calls per second. 
 7. exec - Number of system exec calls per second. 
 8. rchar - Number of characters transferred per second by system read calls.
 9. wchar - Number of characters transfreed per second by system write calls. 
 10. pgout - Number of page out requests per second.
 11. ppgout - Number of pages, paged out per second. 
 12. pgfree - Number of pages per second placed on the free list. 
 13. pgscan - Number of pages checked if they can be freed per second.
 14. atch - Number of page attaches (satisfying a page fault by reclaiming a page in memory) per second.
 15. pgin - Number of page-in requests per second.
 16. ppgin - Number of pages paged in per second.
 17. pflt - Number of page faults caused by protection errors (copy-on-writes). 
 18. vflt - Number of page faults caused by address translation. 
 19. runqsz - Process run queue size.
 20. freemem - Number of memory pages available to user processes.
 21. freeswap - Number of disk blocks available for page swapping. 
 22. usr - Portion of time (%) that cpus run in user mode.
 23. sys - Portion of time (%) that cpus run in system mode.
 24. wio - Portion of time (%) that cpus are idle waiting for block IO.
 25. idle - Portion of time (%) that cpus are otherwise idle.
 
 The two different regression tasks obtained from these databases are:
 
 CompAct 
 Predict usr, the portion of time that cpus run in user mode from all attributes 1-21.
 
 CompAct(s) 
 Predict usr using a restricted number (excluding the paging information (10-18)
 
 Source: collection of regression datasets by Luis Torgo (ltorgo@ncc.up.pt) at
 http://www.ncc.up.pt/~ltorgo/Regression/DataSets.html
 Original source: DELVE repository of data. 
 Characteristics: 8192 cases, 22 continuous attributes";"Minimum: 0
Maximum: 1000";"Minimum value for pgin: 0
Maximum value for pgin: 1000";"The range of values for the feature ""pgin"" is not provided in the dataset description.";0.0;1000.0;0.0;1000.0;;;0.1412;0.1412;
62;ppgin;197;cpu_act;numeric;0.0;292.61;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

The Computer Activity databases are a collection of computer systems
 activity measures. The data was collected from a Sun Sparcstation
 20/712 with 128 Mbytes of memory running in a multi-user university
 department. Users would typically be doing a large variety of tasks
 ranging from accessing the internet, editing files or running very
 cpu-bound programs.  The data was collected continuously on two
 separate occasions. On both occassions, system activity was gathered
 every 5 seconds. The final dataset is taken from both occasions with
 equal numbers of observations coming from each collection epoch.
 
 System measures used:
 1. lread - Reads (transfers per second ) between system memory and user memory.
 2. lwrite - writes (transfers per second) between system memory and user memory.
 3. scall - Number of system calls of all types per second.
 4. sread - Number of system read calls per second.
 5. swrite - Number of system write calls per second . 
 6. fork - Number of system fork calls per second. 
 7. exec - Number of system exec calls per second. 
 8. rchar - Number of characters transferred per second by system read calls.
 9. wchar - Number of characters transfreed per second by system write calls. 
 10. pgout - Number of page out requests per second.
 11. ppgout - Number of pages, paged out per second. 
 12. pgfree - Number of pages per second placed on the free list. 
 13. pgscan - Number of pages checked if they can be freed per second.
 14. atch - Number of page attaches (satisfying a page fault by reclaiming a page in memory) per second.
 15. pgin - Number of page-in requests per second.
 16. ppgin - Number of pages paged in per second.
 17. pflt - Number of page faults caused by protection errors (copy-on-writes). 
 18. vflt - Number of page faults caused by address translation. 
 19. runqsz - Process run queue size.
 20. freemem - Number of memory pages available to user processes.
 21. freeswap - Number of disk blocks available for page swapping. 
 22. usr - Portion of time (%) that cpus run in user mode.
 23. sys - Portion of time (%) that cpus run in system mode.
 24. wio - Portion of time (%) that cpus are idle waiting for block IO.
 25. idle - Portion of time (%) that cpus are otherwise idle.
 
 The two different regression tasks obtained from these databases are:
 
 CompAct 
 Predict usr, the portion of time that cpus run in user mode from all attributes 1-21.
 
 CompAct(s) 
 Predict usr using a restricted number (excluding the paging information (10-18)
 
 Source: collection of regression datasets by Luis Torgo (ltorgo@ncc.up.pt) at
 http://www.ncc.up.pt/~ltorgo/Regression/DataSets.html
 Original source: DELVE repository of data. 
 Characteristics: 8192 cases, 22 continuous attributes";min: 0 max: 1000;"Minimum: 0
Maximum: Unknown";"The range of values for the feature ""ppgin"" in the dataset is not provided.";0.0;1000.0;;;;;0.29261000000000004;;
63;pflt;197;cpu_act;numeric;0.0;899.8;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

The Computer Activity databases are a collection of computer systems
 activity measures. The data was collected from a Sun Sparcstation
 20/712 with 128 Mbytes of memory running in a multi-user university
 department. Users would typically be doing a large variety of tasks
 ranging from accessing the internet, editing files or running very
 cpu-bound programs.  The data was collected continuously on two
 separate occasions. On both occassions, system activity was gathered
 every 5 seconds. The final dataset is taken from both occasions with
 equal numbers of observations coming from each collection epoch.
 
 System measures used:
 1. lread - Reads (transfers per second ) between system memory and user memory.
 2. lwrite - writes (transfers per second) between system memory and user memory.
 3. scall - Number of system calls of all types per second.
 4. sread - Number of system read calls per second.
 5. swrite - Number of system write calls per second . 
 6. fork - Number of system fork calls per second. 
 7. exec - Number of system exec calls per second. 
 8. rchar - Number of characters transferred per second by system read calls.
 9. wchar - Number of characters transfreed per second by system write calls. 
 10. pgout - Number of page out requests per second.
 11. ppgout - Number of pages, paged out per second. 
 12. pgfree - Number of pages per second placed on the free list. 
 13. pgscan - Number of pages checked if they can be freed per second.
 14. atch - Number of page attaches (satisfying a page fault by reclaiming a page in memory) per second.
 15. pgin - Number of page-in requests per second.
 16. ppgin - Number of pages paged in per second.
 17. pflt - Number of page faults caused by protection errors (copy-on-writes). 
 18. vflt - Number of page faults caused by address translation. 
 19. runqsz - Process run queue size.
 20. freemem - Number of memory pages available to user processes.
 21. freeswap - Number of disk blocks available for page swapping. 
 22. usr - Portion of time (%) that cpus run in user mode.
 23. sys - Portion of time (%) that cpus run in system mode.
 24. wio - Portion of time (%) that cpus are idle waiting for block IO.
 25. idle - Portion of time (%) that cpus are otherwise idle.
 
 The two different regression tasks obtained from these databases are:
 
 CompAct 
 Predict usr, the portion of time that cpus run in user mode from all attributes 1-21.
 
 CompAct(s) 
 Predict usr using a restricted number (excluding the paging information (10-18)
 
 Source: collection of regression datasets by Luis Torgo (ltorgo@ncc.up.pt) at
 http://www.ncc.up.pt/~ltorgo/Regression/DataSets.html
 Original source: DELVE repository of data. 
 Characteristics: 8192 cases, 22 continuous attributes";Cannot provide a range without any information about the dataset.;"Minimum: 0
Maximum: Unknown/Not enough information.";"The range of values for the feature ""pflt"" is unknown and cannot be determined without access to the dataset.";;;;;;;;;
64;vflt;197;cpu_act;numeric;0.2;1365.0;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

The Computer Activity databases are a collection of computer systems
 activity measures. The data was collected from a Sun Sparcstation
 20/712 with 128 Mbytes of memory running in a multi-user university
 department. Users would typically be doing a large variety of tasks
 ranging from accessing the internet, editing files or running very
 cpu-bound programs.  The data was collected continuously on two
 separate occasions. On both occassions, system activity was gathered
 every 5 seconds. The final dataset is taken from both occasions with
 equal numbers of observations coming from each collection epoch.
 
 System measures used:
 1. lread - Reads (transfers per second ) between system memory and user memory.
 2. lwrite - writes (transfers per second) between system memory and user memory.
 3. scall - Number of system calls of all types per second.
 4. sread - Number of system read calls per second.
 5. swrite - Number of system write calls per second . 
 6. fork - Number of system fork calls per second. 
 7. exec - Number of system exec calls per second. 
 8. rchar - Number of characters transferred per second by system read calls.
 9. wchar - Number of characters transfreed per second by system write calls. 
 10. pgout - Number of page out requests per second.
 11. ppgout - Number of pages, paged out per second. 
 12. pgfree - Number of pages per second placed on the free list. 
 13. pgscan - Number of pages checked if they can be freed per second.
 14. atch - Number of page attaches (satisfying a page fault by reclaiming a page in memory) per second.
 15. pgin - Number of page-in requests per second.
 16. ppgin - Number of pages paged in per second.
 17. pflt - Number of page faults caused by protection errors (copy-on-writes). 
 18. vflt - Number of page faults caused by address translation. 
 19. runqsz - Process run queue size.
 20. freemem - Number of memory pages available to user processes.
 21. freeswap - Number of disk blocks available for page swapping. 
 22. usr - Portion of time (%) that cpus run in user mode.
 23. sys - Portion of time (%) that cpus run in system mode.
 24. wio - Portion of time (%) that cpus are idle waiting for block IO.
 25. idle - Portion of time (%) that cpus are otherwise idle.
 
 The two different regression tasks obtained from these databases are:
 
 CompAct 
 Predict usr, the portion of time that cpus run in user mode from all attributes 1-21.
 
 CompAct(s) 
 Predict usr using a restricted number (excluding the paging information (10-18)
 
 Source: collection of regression datasets by Luis Torgo (ltorgo@ncc.up.pt) at
 http://www.ncc.up.pt/~ltorgo/Regression/DataSets.html
 Original source: DELVE repository of data. 
 Characteristics: 8192 cases, 22 continuous attributes";"Minimum: 0.01
Maximum: 100.0";"Minimum: 0
Maximum: 10000";"Range of values for the feature 'vflt':
Min: 0
Max: 1000";0.01;100.0;0.0;10000.0;0.0;1000.0;0.07311408874790291;0.13648;0.7324542124542124
65;runqsz;197;cpu_act;numeric;1.0;2823.0;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

The Computer Activity databases are a collection of computer systems
 activity measures. The data was collected from a Sun Sparcstation
 20/712 with 128 Mbytes of memory running in a multi-user university
 department. Users would typically be doing a large variety of tasks
 ranging from accessing the internet, editing files or running very
 cpu-bound programs.  The data was collected continuously on two
 separate occasions. On both occassions, system activity was gathered
 every 5 seconds. The final dataset is taken from both occasions with
 equal numbers of observations coming from each collection epoch.
 
 System measures used:
 1. lread - Reads (transfers per second ) between system memory and user memory.
 2. lwrite - writes (transfers per second) between system memory and user memory.
 3. scall - Number of system calls of all types per second.
 4. sread - Number of system read calls per second.
 5. swrite - Number of system write calls per second . 
 6. fork - Number of system fork calls per second. 
 7. exec - Number of system exec calls per second. 
 8. rchar - Number of characters transferred per second by system read calls.
 9. wchar - Number of characters transfreed per second by system write calls. 
 10. pgout - Number of page out requests per second.
 11. ppgout - Number of pages, paged out per second. 
 12. pgfree - Number of pages per second placed on the free list. 
 13. pgscan - Number of pages checked if they can be freed per second.
 14. atch - Number of page attaches (satisfying a page fault by reclaiming a page in memory) per second.
 15. pgin - Number of page-in requests per second.
 16. ppgin - Number of pages paged in per second.
 17. pflt - Number of page faults caused by protection errors (copy-on-writes). 
 18. vflt - Number of page faults caused by address translation. 
 19. runqsz - Process run queue size.
 20. freemem - Number of memory pages available to user processes.
 21. freeswap - Number of disk blocks available for page swapping. 
 22. usr - Portion of time (%) that cpus run in user mode.
 23. sys - Portion of time (%) that cpus run in system mode.
 24. wio - Portion of time (%) that cpus are idle waiting for block IO.
 25. idle - Portion of time (%) that cpus are otherwise idle.
 
 The two different regression tasks obtained from these databases are:
 
 CompAct 
 Predict usr, the portion of time that cpus run in user mode from all attributes 1-21.
 
 CompAct(s) 
 Predict usr using a restricted number (excluding the paging information (10-18)
 
 Source: collection of regression datasets by Luis Torgo (ltorgo@ncc.up.pt) at
 http://www.ncc.up.pt/~ltorgo/Regression/DataSets.html
 Original source: DELVE repository of data. 
 Characteristics: 8192 cases, 22 continuous attributes";"Minimum: 0
Maximum: 100";"Minimum: 0
Maximum: 100";"The range of values for the feature ""runqsz"" is: min = 0, max = unknown";0.0;100.0;0.0;100.0;;;0.03506907545164718;0.03506907545164718;
66;freemem;197;cpu_act;numeric;55.0;12027.0;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

The Computer Activity databases are a collection of computer systems
 activity measures. The data was collected from a Sun Sparcstation
 20/712 with 128 Mbytes of memory running in a multi-user university
 department. Users would typically be doing a large variety of tasks
 ranging from accessing the internet, editing files or running very
 cpu-bound programs.  The data was collected continuously on two
 separate occasions. On both occassions, system activity was gathered
 every 5 seconds. The final dataset is taken from both occasions with
 equal numbers of observations coming from each collection epoch.
 
 System measures used:
 1. lread - Reads (transfers per second ) between system memory and user memory.
 2. lwrite - writes (transfers per second) between system memory and user memory.
 3. scall - Number of system calls of all types per second.
 4. sread - Number of system read calls per second.
 5. swrite - Number of system write calls per second . 
 6. fork - Number of system fork calls per second. 
 7. exec - Number of system exec calls per second. 
 8. rchar - Number of characters transferred per second by system read calls.
 9. wchar - Number of characters transfreed per second by system write calls. 
 10. pgout - Number of page out requests per second.
 11. ppgout - Number of pages, paged out per second. 
 12. pgfree - Number of pages per second placed on the free list. 
 13. pgscan - Number of pages checked if they can be freed per second.
 14. atch - Number of page attaches (satisfying a page fault by reclaiming a page in memory) per second.
 15. pgin - Number of page-in requests per second.
 16. ppgin - Number of pages paged in per second.
 17. pflt - Number of page faults caused by protection errors (copy-on-writes). 
 18. vflt - Number of page faults caused by address translation. 
 19. runqsz - Process run queue size.
 20. freemem - Number of memory pages available to user processes.
 21. freeswap - Number of disk blocks available for page swapping. 
 22. usr - Portion of time (%) that cpus run in user mode.
 23. sys - Portion of time (%) that cpus run in system mode.
 24. wio - Portion of time (%) that cpus are idle waiting for block IO.
 25. idle - Portion of time (%) that cpus are otherwise idle.
 
 The two different regression tasks obtained from these databases are:
 
 CompAct 
 Predict usr, the portion of time that cpus run in user mode from all attributes 1-21.
 
 CompAct(s) 
 Predict usr using a restricted number (excluding the paging information (10-18)
 
 Source: collection of regression datasets by Luis Torgo (ltorgo@ncc.up.pt) at
 http://www.ncc.up.pt/~ltorgo/Regression/DataSets.html
 Original source: DELVE repository of data. 
 Characteristics: 8192 cases, 22 continuous attributes";"Minimum: 0
Maximum: 100";"Minimum: 0
Maximum: N/A (Insufficient information)";"Based on the given dataset, the range of values for the feature ""freemem"" is not provided.";0.0;100.0;;;;;0.0037415814417560487;;
67;freeswap;197;cpu_act;numeric;2.0;2243187.0;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

The Computer Activity databases are a collection of computer systems
 activity measures. The data was collected from a Sun Sparcstation
 20/712 with 128 Mbytes of memory running in a multi-user university
 department. Users would typically be doing a large variety of tasks
 ranging from accessing the internet, editing files or running very
 cpu-bound programs.  The data was collected continuously on two
 separate occasions. On both occassions, system activity was gathered
 every 5 seconds. The final dataset is taken from both occasions with
 equal numbers of observations coming from each collection epoch.
 
 System measures used:
 1. lread - Reads (transfers per second ) between system memory and user memory.
 2. lwrite - writes (transfers per second) between system memory and user memory.
 3. scall - Number of system calls of all types per second.
 4. sread - Number of system read calls per second.
 5. swrite - Number of system write calls per second . 
 6. fork - Number of system fork calls per second. 
 7. exec - Number of system exec calls per second. 
 8. rchar - Number of characters transferred per second by system read calls.
 9. wchar - Number of characters transfreed per second by system write calls. 
 10. pgout - Number of page out requests per second.
 11. ppgout - Number of pages, paged out per second. 
 12. pgfree - Number of pages per second placed on the free list. 
 13. pgscan - Number of pages checked if they can be freed per second.
 14. atch - Number of page attaches (satisfying a page fault by reclaiming a page in memory) per second.
 15. pgin - Number of page-in requests per second.
 16. ppgin - Number of pages paged in per second.
 17. pflt - Number of page faults caused by protection errors (copy-on-writes). 
 18. vflt - Number of page faults caused by address translation. 
 19. runqsz - Process run queue size.
 20. freemem - Number of memory pages available to user processes.
 21. freeswap - Number of disk blocks available for page swapping. 
 22. usr - Portion of time (%) that cpus run in user mode.
 23. sys - Portion of time (%) that cpus run in system mode.
 24. wio - Portion of time (%) that cpus are idle waiting for block IO.
 25. idle - Portion of time (%) that cpus are otherwise idle.
 
 The two different regression tasks obtained from these databases are:
 
 CompAct 
 Predict usr, the portion of time that cpus run in user mode from all attributes 1-21.
 
 CompAct(s) 
 Predict usr using a restricted number (excluding the paging information (10-18)
 
 Source: collection of regression datasets by Luis Torgo (ltorgo@ncc.up.pt) at
 http://www.ncc.up.pt/~ltorgo/Regression/DataSets.html
 Original source: DELVE repository of data. 
 Characteristics: 8192 cases, 22 continuous attributes";"Minimum: 0
Maximum: 100";"Minimum: 0
Maximum: Unknown";"The range of values for the feature ""freeswap"" in the dataset is:

Minimum: 0
Maximum: Unknown";0.0;100.0;;;;;4.368784234216764e-05;;
68;usr;197;cpu_act;numeric;0.0;99.0;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

The Computer Activity databases are a collection of computer systems
 activity measures. The data was collected from a Sun Sparcstation
 20/712 with 128 Mbytes of memory running in a multi-user university
 department. Users would typically be doing a large variety of tasks
 ranging from accessing the internet, editing files or running very
 cpu-bound programs.  The data was collected continuously on two
 separate occasions. On both occassions, system activity was gathered
 every 5 seconds. The final dataset is taken from both occasions with
 equal numbers of observations coming from each collection epoch.
 
 System measures used:
 1. lread - Reads (transfers per second ) between system memory and user memory.
 2. lwrite - writes (transfers per second) between system memory and user memory.
 3. scall - Number of system calls of all types per second.
 4. sread - Number of system read calls per second.
 5. swrite - Number of system write calls per second . 
 6. fork - Number of system fork calls per second. 
 7. exec - Number of system exec calls per second. 
 8. rchar - Number of characters transferred per second by system read calls.
 9. wchar - Number of characters transfreed per second by system write calls. 
 10. pgout - Number of page out requests per second.
 11. ppgout - Number of pages, paged out per second. 
 12. pgfree - Number of pages per second placed on the free list. 
 13. pgscan - Number of pages checked if they can be freed per second.
 14. atch - Number of page attaches (satisfying a page fault by reclaiming a page in memory) per second.
 15. pgin - Number of page-in requests per second.
 16. ppgin - Number of pages paged in per second.
 17. pflt - Number of page faults caused by protection errors (copy-on-writes). 
 18. vflt - Number of page faults caused by address translation. 
 19. runqsz - Process run queue size.
 20. freemem - Number of memory pages available to user processes.
 21. freeswap - Number of disk blocks available for page swapping. 
 22. usr - Portion of time (%) that cpus run in user mode.
 23. sys - Portion of time (%) that cpus run in system mode.
 24. wio - Portion of time (%) that cpus are idle waiting for block IO.
 25. idle - Portion of time (%) that cpus are otherwise idle.
 
 The two different regression tasks obtained from these databases are:
 
 CompAct 
 Predict usr, the portion of time that cpus run in user mode from all attributes 1-21.
 
 CompAct(s) 
 Predict usr using a restricted number (excluding the paging information (10-18)
 
 Source: collection of regression datasets by Luis Torgo (ltorgo@ncc.up.pt) at
 http://www.ncc.up.pt/~ltorgo/Regression/DataSets.html
 Original source: DELVE repository of data. 
 Characteristics: 8192 cases, 22 continuous attributes";Minimum: 0 Maximum: 100;"Minimum: 0
Maximum: 100";"The minimum and maximum values for the feature ""usr"" are not provided in the Dataset description.";0.0;100.0;0.0;100.0;;;0.99;0.99;
69;Clump_Thickness;251;BNG(breast-w);numeric;0.73546;13.717991;;"Minimum: 1
Maximum: 10";"Minimum: 1
Maximum: 10";;1.0;10.0;1.0;10.0;;;0.6932392458758619;0.6932392458758619;
70;Cell_Size_Uniformity;251;BNG(breast-w);numeric;0.564014;10.933095;;"Min: 1
Max: 10";"Minimum: 1
Maximum: 10";;1.0;10.0;1.0;10.0;;;0.8679650588128303;0.8679650588128303;
71;Cell_Shape_Uniformity;251;BNG(breast-w);numeric;1.0;12.604289;;01.10.2023 00:00;"Minimum: 1
Maximum: 10";;;;1.0;10.0;;;;0.7755753066818657;
72;Marginal_Adhesion;251;BNG(breast-w);numeric;1.0;11.158505;;Min: 0 Max: 10;"Minimum: 0
Maximum: 10";;0.0;10.0;0.0;10.0;;;0.8065596600978356;0.8065596600978356;
73;Single_Epi_Cell_Size;251;BNG(breast-w);numeric;1.0;14.414889000000002;;"Min: 0.2 
Max: 0.8";"Minimum: 1
Maximum: 10";;0.2;0.8;1.0;10.0;;;;0.6708963450983455;
74;Bare_Nuclei;251;BNG(breast-w);numeric;-0.117818;13.160789000000001;;"Minimum: 1
Maximum: 10";"Minimum: 1
Maximum: 10";;1.0;10.0;1.0;10.0;;;0.6777819390241762;0.6777819390241762;
75;Bland_Chromatin;251;BNG(breast-w);numeric;1.0;12.005376;;"Minimum: 1
Maximum: 10";"Minimum: 1
Maximum: 10";;1.0;10.0;1.0;10.0;;;0.8177821457440436;0.8177821457440436;
76;Normal_Nucleoli;251;BNG(breast-w);numeric;0.758343;10.700432000000001;;"Minimum: 0
Maximum: 10";"Minimum: 0
Maximum: 10";;0.0;10.0;0.0;10.0;;;0.8636713919587545;0.8636713919587545;
77;Mitoses;251;BNG(breast-w);numeric;1.0;12.044924;;Min: 1 Max: 10;"Minimum: 1
Maximum: 10";;1.0;10.0;1.0;10.0;;;0.8148539546311048;0.8148539546311048;
78;Alcohol;187;wine;numeric;11.03;14.83;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

1. Title of Database: Wine recognition data
 	Updated Sept 21, 1998 by C.Blake : Added attribute information
 
 2. Sources:
    (a) Forina, M. et al, PARVUS - An Extendible Package for Data
        Exploration, Classification and Correlation. Institute of Pharmaceutical
        and Food Analysis and Technologies, Via Brigata Salerno, 
        16147 Genoa, Italy.
 
    (b) Stefan Aeberhard, email: stefan@coral.cs.jcu.edu.au
    (c) July 1991
 3. Past Usage:
 
    (1)
    S. Aeberhard, D. Coomans and O. de Vel,
    Comparison of Classifiers in High Dimensional Settings,
    Tech. Rep. no. 92-02, (1992), Dept. of Computer Science and Dept. of
    Mathematics and Statistics, James Cook University of North Queensland.
    (Also submitted to Technometrics).
 
    The data was used with many others for comparing various 
    classifiers. The classes are separable, though only RDA 
    has achieved 100% correct classification.
    (RDA : 100%, QDA 99.4%, LDA 98.9%, 1NN 96.1% (z-transformed data))
    (All results using the leave-one-out technique)
 
    In a classification context, this is a well posed problem 
    with ""well behaved"" class structures. A good data set 
    for first testing of a new classifier, but not very 
    challenging.
 
    (2) 
    S. Aeberhard, D. Coomans and O. de Vel,
    ""THE CLASSIFICATION PERFORMANCE OF RDA""
    Tech. Rep. no. 92-01, (1992), Dept. of Computer Science and Dept. of
    Mathematics and Statistics, James Cook University of North Queensland.
    (Also submitted to Journal of Chemometrics).
 
    Here, the data was used to illustrate the superior performance of
    the use of a new appreciation function with RDA. 
 
 4. Relevant Information:
 
    -- These data are the results of a chemical analysis of
       wines grown in the same region in Italy but derived from three
       different cultivars.
       The analysis determined the quantities of 13 constituents
       found in each of the three types of wines. 
 
    -- I think that the initial data set had around 30 variables, but 
       for some reason I only have the 13 dimensional version. 
       I had a list of what the 30 or so variables were, but a.) 
       I lost it, and b.), I would not know which 13 variables
       are included in the set.
 
    -- The attributes are (dontated by Riccardo Leardi, 
 	riclea@anchem.unige.it )
  	1) Alcohol
  	2) Malic acid
  	3) Ash
 	4) Alcalinity of ash  
  	5) Magnesium
 	6) Total phenols
  	7) Flavanoids
  	8) Nonflavanoid phenols
  	9) Proanthocyanins
 	10)Color intensity
  	11)Hue
  	12)OD280/OD315 of diluted wines
  	13)Proline            
 
 5. Number of Instances
 
       	class 1 59
 	class 2 71
 	class 3 48
 
 6. Number of Attributes 
 	
 	13
 
 7. For Each Attribute:
 
 	All attributes are continuous
 	
 	No statistics available, but suggest to standardise
 	variables for certain uses (e.g. for us with classifiers
 	which are NOT scale invariant)
 
 	NOTE: 1st attribute is class identifier (1-3)
 
 8. Missing Attribute Values:
 
 	None
 
 9. Class Distribution: number of instances per class
 
       	class 1 59
 	class 2 71
 	class 3 48

 Information about the dataset
 CLASSTYPE: nominal
 CLASSINDEX: first";"Min: 1
Max: 100";"Minimum: 10.0
Maximum: 15.0";"The range of values for the feature ""Alcohol"" is from 11.03 to 14.83.";1.0;100.0;10.0;15.0;11.03;14.83;0.03838383838383839;0.7600000000000001;1.0
79;Malic_acid;187;wine;numeric;0.74;5.8;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

1. Title of Database: Wine recognition data
 	Updated Sept 21, 1998 by C.Blake : Added attribute information
 
 2. Sources:
    (a) Forina, M. et al, PARVUS - An Extendible Package for Data
        Exploration, Classification and Correlation. Institute of Pharmaceutical
        and Food Analysis and Technologies, Via Brigata Salerno, 
        16147 Genoa, Italy.
 
    (b) Stefan Aeberhard, email: stefan@coral.cs.jcu.edu.au
    (c) July 1991
 3. Past Usage:
 
    (1)
    S. Aeberhard, D. Coomans and O. de Vel,
    Comparison of Classifiers in High Dimensional Settings,
    Tech. Rep. no. 92-02, (1992), Dept. of Computer Science and Dept. of
    Mathematics and Statistics, James Cook University of North Queensland.
    (Also submitted to Technometrics).
 
    The data was used with many others for comparing various 
    classifiers. The classes are separable, though only RDA 
    has achieved 100% correct classification.
    (RDA : 100%, QDA 99.4%, LDA 98.9%, 1NN 96.1% (z-transformed data))
    (All results using the leave-one-out technique)
 
    In a classification context, this is a well posed problem 
    with ""well behaved"" class structures. A good data set 
    for first testing of a new classifier, but not very 
    challenging.
 
    (2) 
    S. Aeberhard, D. Coomans and O. de Vel,
    ""THE CLASSIFICATION PERFORMANCE OF RDA""
    Tech. Rep. no. 92-01, (1992), Dept. of Computer Science and Dept. of
    Mathematics and Statistics, James Cook University of North Queensland.
    (Also submitted to Journal of Chemometrics).
 
    Here, the data was used to illustrate the superior performance of
    the use of a new appreciation function with RDA. 
 
 4. Relevant Information:
 
    -- These data are the results of a chemical analysis of
       wines grown in the same region in Italy but derived from three
       different cultivars.
       The analysis determined the quantities of 13 constituents
       found in each of the three types of wines. 
 
    -- I think that the initial data set had around 30 variables, but 
       for some reason I only have the 13 dimensional version. 
       I had a list of what the 30 or so variables were, but a.) 
       I lost it, and b.), I would not know which 13 variables
       are included in the set.
 
    -- The attributes are (dontated by Riccardo Leardi, 
 	riclea@anchem.unige.it )
  	1) Alcohol
  	2) Malic acid
  	3) Ash
 	4) Alcalinity of ash  
  	5) Magnesium
 	6) Total phenols
  	7) Flavanoids
  	8) Nonflavanoid phenols
  	9) Proanthocyanins
 	10)Color intensity
  	11)Hue
  	12)OD280/OD315 of diluted wines
  	13)Proline            
 
 5. Number of Instances
 
       	class 1 59
 	class 2 71
 	class 3 48
 
 6. Number of Attributes 
 	
 	13
 
 7. For Each Attribute:
 
 	All attributes are continuous
 	
 	No statistics available, but suggest to standardise
 	variables for certain uses (e.g. for us with classifiers
 	which are NOT scale invariant)
 
 	NOTE: 1st attribute is class identifier (1-3)
 
 8. Missing Attribute Values:
 
 	None
 
 9. Class Distribution: number of instances per class
 
       	class 1 59
 	class 2 71
 	class 3 48

 Information about the dataset
 CLASSTYPE: nominal
 CLASSINDEX: first";;Minimum: 0.00 Maximum: 5.80;The range of values for the feature Malic_acid in the dataset is approximately 0.74 to 5.80.;;;0.0;5.8;0.74;5.8;;0.8724137931034482;1.0
80;Ash;187;wine;numeric;1.36;3.23;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

1. Title of Database: Wine recognition data
 	Updated Sept 21, 1998 by C.Blake : Added attribute information
 
 2. Sources:
    (a) Forina, M. et al, PARVUS - An Extendible Package for Data
        Exploration, Classification and Correlation. Institute of Pharmaceutical
        and Food Analysis and Technologies, Via Brigata Salerno, 
        16147 Genoa, Italy.
 
    (b) Stefan Aeberhard, email: stefan@coral.cs.jcu.edu.au
    (c) July 1991
 3. Past Usage:
 
    (1)
    S. Aeberhard, D. Coomans and O. de Vel,
    Comparison of Classifiers in High Dimensional Settings,
    Tech. Rep. no. 92-02, (1992), Dept. of Computer Science and Dept. of
    Mathematics and Statistics, James Cook University of North Queensland.
    (Also submitted to Technometrics).
 
    The data was used with many others for comparing various 
    classifiers. The classes are separable, though only RDA 
    has achieved 100% correct classification.
    (RDA : 100%, QDA 99.4%, LDA 98.9%, 1NN 96.1% (z-transformed data))
    (All results using the leave-one-out technique)
 
    In a classification context, this is a well posed problem 
    with ""well behaved"" class structures. A good data set 
    for first testing of a new classifier, but not very 
    challenging.
 
    (2) 
    S. Aeberhard, D. Coomans and O. de Vel,
    ""THE CLASSIFICATION PERFORMANCE OF RDA""
    Tech. Rep. no. 92-01, (1992), Dept. of Computer Science and Dept. of
    Mathematics and Statistics, James Cook University of North Queensland.
    (Also submitted to Journal of Chemometrics).
 
    Here, the data was used to illustrate the superior performance of
    the use of a new appreciation function with RDA. 
 
 4. Relevant Information:
 
    -- These data are the results of a chemical analysis of
       wines grown in the same region in Italy but derived from three
       different cultivars.
       The analysis determined the quantities of 13 constituents
       found in each of the three types of wines. 
 
    -- I think that the initial data set had around 30 variables, but 
       for some reason I only have the 13 dimensional version. 
       I had a list of what the 30 or so variables were, but a.) 
       I lost it, and b.), I would not know which 13 variables
       are included in the set.
 
    -- The attributes are (dontated by Riccardo Leardi, 
 	riclea@anchem.unige.it )
  	1) Alcohol
  	2) Malic acid
  	3) Ash
 	4) Alcalinity of ash  
  	5) Magnesium
 	6) Total phenols
  	7) Flavanoids
  	8) Nonflavanoid phenols
  	9) Proanthocyanins
 	10)Color intensity
  	11)Hue
  	12)OD280/OD315 of diluted wines
  	13)Proline            
 
 5. Number of Instances
 
       	class 1 59
 	class 2 71
 	class 3 48
 
 6. Number of Attributes 
 	
 	13
 
 7. For Each Attribute:
 
 	All attributes are continuous
 	
 	No statistics available, but suggest to standardise
 	variables for certain uses (e.g. for us with classifiers
 	which are NOT scale invariant)
 
 	NOTE: 1st attribute is class identifier (1-3)
 
 8. Missing Attribute Values:
 
 	None
 
 9. Class Distribution: number of instances per class
 
       	class 1 59
 	class 2 71
 	class 3 48

 Information about the dataset
 CLASSTYPE: nominal
 CLASSINDEX: first";"Minimum: 1.71
Maximum: 3.98";"Minimum: 1.36
Maximum: 3.23";"The range of values for the feature ""Ash"" in the dataset is:
Minimum: 1.36
Maximum: 3.23";1.71;3.98;1.36;3.23;1.36;3.23;0.5801526717557252;1.0;1.0
81;Alcalinity_of_ash;187;wine;numeric;10.6;30.0;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

1. Title of Database: Wine recognition data
 	Updated Sept 21, 1998 by C.Blake : Added attribute information
 
 2. Sources:
    (a) Forina, M. et al, PARVUS - An Extendible Package for Data
        Exploration, Classification and Correlation. Institute of Pharmaceutical
        and Food Analysis and Technologies, Via Brigata Salerno, 
        16147 Genoa, Italy.
 
    (b) Stefan Aeberhard, email: stefan@coral.cs.jcu.edu.au
    (c) July 1991
 3. Past Usage:
 
    (1)
    S. Aeberhard, D. Coomans and O. de Vel,
    Comparison of Classifiers in High Dimensional Settings,
    Tech. Rep. no. 92-02, (1992), Dept. of Computer Science and Dept. of
    Mathematics and Statistics, James Cook University of North Queensland.
    (Also submitted to Technometrics).
 
    The data was used with many others for comparing various 
    classifiers. The classes are separable, though only RDA 
    has achieved 100% correct classification.
    (RDA : 100%, QDA 99.4%, LDA 98.9%, 1NN 96.1% (z-transformed data))
    (All results using the leave-one-out technique)
 
    In a classification context, this is a well posed problem 
    with ""well behaved"" class structures. A good data set 
    for first testing of a new classifier, but not very 
    challenging.
 
    (2) 
    S. Aeberhard, D. Coomans and O. de Vel,
    ""THE CLASSIFICATION PERFORMANCE OF RDA""
    Tech. Rep. no. 92-01, (1992), Dept. of Computer Science and Dept. of
    Mathematics and Statistics, James Cook University of North Queensland.
    (Also submitted to Journal of Chemometrics).
 
    Here, the data was used to illustrate the superior performance of
    the use of a new appreciation function with RDA. 
 
 4. Relevant Information:
 
    -- These data are the results of a chemical analysis of
       wines grown in the same region in Italy but derived from three
       different cultivars.
       The analysis determined the quantities of 13 constituents
       found in each of the three types of wines. 
 
    -- I think that the initial data set had around 30 variables, but 
       for some reason I only have the 13 dimensional version. 
       I had a list of what the 30 or so variables were, but a.) 
       I lost it, and b.), I would not know which 13 variables
       are included in the set.
 
    -- The attributes are (dontated by Riccardo Leardi, 
 	riclea@anchem.unige.it )
  	1) Alcohol
  	2) Malic acid
  	3) Ash
 	4) Alcalinity of ash  
  	5) Magnesium
 	6) Total phenols
  	7) Flavanoids
  	8) Nonflavanoid phenols
  	9) Proanthocyanins
 	10)Color intensity
  	11)Hue
  	12)OD280/OD315 of diluted wines
  	13)Proline            
 
 5. Number of Instances
 
       	class 1 59
 	class 2 71
 	class 3 48
 
 6. Number of Attributes 
 	
 	13
 
 7. For Each Attribute:
 
 	All attributes are continuous
 	
 	No statistics available, but suggest to standardise
 	variables for certain uses (e.g. for us with classifiers
 	which are NOT scale invariant)
 
 	NOTE: 1st attribute is class identifier (1-3)
 
 8. Missing Attribute Values:
 
 	None
 
 9. Class Distribution: number of instances per class
 
       	class 1 59
 	class 2 71
 	class 3 48

 Information about the dataset
 CLASSTYPE: nominal
 CLASSINDEX: first";"Min: 10
Max: 30";"Minimum: 10 
Maximum: 30";"The range of values for the feature ""Alcalinity_of_ash"" is 10.6 - 30.0.";10.0;30.0;10.0;30.0;10.6;30.0;0.97;0.97;1.0
82;Magnesium;187;wine;numeric;70.0;162.0;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

1. Title of Database: Wine recognition data
 	Updated Sept 21, 1998 by C.Blake : Added attribute information
 
 2. Sources:
    (a) Forina, M. et al, PARVUS - An Extendible Package for Data
        Exploration, Classification and Correlation. Institute of Pharmaceutical
        and Food Analysis and Technologies, Via Brigata Salerno, 
        16147 Genoa, Italy.
 
    (b) Stefan Aeberhard, email: stefan@coral.cs.jcu.edu.au
    (c) July 1991
 3. Past Usage:
 
    (1)
    S. Aeberhard, D. Coomans and O. de Vel,
    Comparison of Classifiers in High Dimensional Settings,
    Tech. Rep. no. 92-02, (1992), Dept. of Computer Science and Dept. of
    Mathematics and Statistics, James Cook University of North Queensland.
    (Also submitted to Technometrics).
 
    The data was used with many others for comparing various 
    classifiers. The classes are separable, though only RDA 
    has achieved 100% correct classification.
    (RDA : 100%, QDA 99.4%, LDA 98.9%, 1NN 96.1% (z-transformed data))
    (All results using the leave-one-out technique)
 
    In a classification context, this is a well posed problem 
    with ""well behaved"" class structures. A good data set 
    for first testing of a new classifier, but not very 
    challenging.
 
    (2) 
    S. Aeberhard, D. Coomans and O. de Vel,
    ""THE CLASSIFICATION PERFORMANCE OF RDA""
    Tech. Rep. no. 92-01, (1992), Dept. of Computer Science and Dept. of
    Mathematics and Statistics, James Cook University of North Queensland.
    (Also submitted to Journal of Chemometrics).
 
    Here, the data was used to illustrate the superior performance of
    the use of a new appreciation function with RDA. 
 
 4. Relevant Information:
 
    -- These data are the results of a chemical analysis of
       wines grown in the same region in Italy but derived from three
       different cultivars.
       The analysis determined the quantities of 13 constituents
       found in each of the three types of wines. 
 
    -- I think that the initial data set had around 30 variables, but 
       for some reason I only have the 13 dimensional version. 
       I had a list of what the 30 or so variables were, but a.) 
       I lost it, and b.), I would not know which 13 variables
       are included in the set.
 
    -- The attributes are (dontated by Riccardo Leardi, 
 	riclea@anchem.unige.it )
  	1) Alcohol
  	2) Malic acid
  	3) Ash
 	4) Alcalinity of ash  
  	5) Magnesium
 	6) Total phenols
  	7) Flavanoids
  	8) Nonflavanoid phenols
  	9) Proanthocyanins
 	10)Color intensity
  	11)Hue
  	12)OD280/OD315 of diluted wines
  	13)Proline            
 
 5. Number of Instances
 
       	class 1 59
 	class 2 71
 	class 3 48
 
 6. Number of Attributes 
 	
 	13
 
 7. For Each Attribute:
 
 	All attributes are continuous
 	
 	No statistics available, but suggest to standardise
 	variables for certain uses (e.g. for us with classifiers
 	which are NOT scale invariant)
 
 	NOTE: 1st attribute is class identifier (1-3)
 
 8. Missing Attribute Values:
 
 	None
 
 9. Class Distribution: number of instances per class
 
       	class 1 59
 	class 2 71
 	class 3 48

 Information about the dataset
 CLASSTYPE: nominal
 CLASSINDEX: first";"Min: 0.5
Max: 10.0";"Minimum: 70
Maximum: 200";The range of values for the feature Magnesium is: min = 70 max = 162.;0.5;10.0;70.0;200.0;70.0;162.0;;0.7076923076923077;1.0
83;Total_phenols;187;wine;numeric;0.98;3.88;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

1. Title of Database: Wine recognition data
 	Updated Sept 21, 1998 by C.Blake : Added attribute information
 
 2. Sources:
    (a) Forina, M. et al, PARVUS - An Extendible Package for Data
        Exploration, Classification and Correlation. Institute of Pharmaceutical
        and Food Analysis and Technologies, Via Brigata Salerno, 
        16147 Genoa, Italy.
 
    (b) Stefan Aeberhard, email: stefan@coral.cs.jcu.edu.au
    (c) July 1991
 3. Past Usage:
 
    (1)
    S. Aeberhard, D. Coomans and O. de Vel,
    Comparison of Classifiers in High Dimensional Settings,
    Tech. Rep. no. 92-02, (1992), Dept. of Computer Science and Dept. of
    Mathematics and Statistics, James Cook University of North Queensland.
    (Also submitted to Technometrics).
 
    The data was used with many others for comparing various 
    classifiers. The classes are separable, though only RDA 
    has achieved 100% correct classification.
    (RDA : 100%, QDA 99.4%, LDA 98.9%, 1NN 96.1% (z-transformed data))
    (All results using the leave-one-out technique)
 
    In a classification context, this is a well posed problem 
    with ""well behaved"" class structures. A good data set 
    for first testing of a new classifier, but not very 
    challenging.
 
    (2) 
    S. Aeberhard, D. Coomans and O. de Vel,
    ""THE CLASSIFICATION PERFORMANCE OF RDA""
    Tech. Rep. no. 92-01, (1992), Dept. of Computer Science and Dept. of
    Mathematics and Statistics, James Cook University of North Queensland.
    (Also submitted to Journal of Chemometrics).
 
    Here, the data was used to illustrate the superior performance of
    the use of a new appreciation function with RDA. 
 
 4. Relevant Information:
 
    -- These data are the results of a chemical analysis of
       wines grown in the same region in Italy but derived from three
       different cultivars.
       The analysis determined the quantities of 13 constituents
       found in each of the three types of wines. 
 
    -- I think that the initial data set had around 30 variables, but 
       for some reason I only have the 13 dimensional version. 
       I had a list of what the 30 or so variables were, but a.) 
       I lost it, and b.), I would not know which 13 variables
       are included in the set.
 
    -- The attributes are (dontated by Riccardo Leardi, 
 	riclea@anchem.unige.it )
  	1) Alcohol
  	2) Malic acid
  	3) Ash
 	4) Alcalinity of ash  
  	5) Magnesium
 	6) Total phenols
  	7) Flavanoids
  	8) Nonflavanoid phenols
  	9) Proanthocyanins
 	10)Color intensity
  	11)Hue
  	12)OD280/OD315 of diluted wines
  	13)Proline            
 
 5. Number of Instances
 
       	class 1 59
 	class 2 71
 	class 3 48
 
 6. Number of Attributes 
 	
 	13
 
 7. For Each Attribute:
 
 	All attributes are continuous
 	
 	No statistics available, but suggest to standardise
 	variables for certain uses (e.g. for us with classifiers
 	which are NOT scale invariant)
 
 	NOTE: 1st attribute is class identifier (1-3)
 
 8. Missing Attribute Values:
 
 	None
 
 9. Class Distribution: number of instances per class
 
       	class 1 59
 	class 2 71
 	class 3 48

 Information about the dataset
 CLASSTYPE: nominal
 CLASSINDEX: first";"Minimum: 0.1
Maximum: 5.0";"Minimum: 0
Maximum: 3.5";"The range of values for the feature Total_phenols is as follows:
Min: 0
Max: Unknown";0.1;5.0;0.0;3.5;;;0.5918367346938775;0.6494845360824743;
84;Flavanoids;187;wine;numeric;0.34;5.08;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

1. Title of Database: Wine recognition data
 	Updated Sept 21, 1998 by C.Blake : Added attribute information
 
 2. Sources:
    (a) Forina, M. et al, PARVUS - An Extendible Package for Data
        Exploration, Classification and Correlation. Institute of Pharmaceutical
        and Food Analysis and Technologies, Via Brigata Salerno, 
        16147 Genoa, Italy.
 
    (b) Stefan Aeberhard, email: stefan@coral.cs.jcu.edu.au
    (c) July 1991
 3. Past Usage:
 
    (1)
    S. Aeberhard, D. Coomans and O. de Vel,
    Comparison of Classifiers in High Dimensional Settings,
    Tech. Rep. no. 92-02, (1992), Dept. of Computer Science and Dept. of
    Mathematics and Statistics, James Cook University of North Queensland.
    (Also submitted to Technometrics).
 
    The data was used with many others for comparing various 
    classifiers. The classes are separable, though only RDA 
    has achieved 100% correct classification.
    (RDA : 100%, QDA 99.4%, LDA 98.9%, 1NN 96.1% (z-transformed data))
    (All results using the leave-one-out technique)
 
    In a classification context, this is a well posed problem 
    with ""well behaved"" class structures. A good data set 
    for first testing of a new classifier, but not very 
    challenging.
 
    (2) 
    S. Aeberhard, D. Coomans and O. de Vel,
    ""THE CLASSIFICATION PERFORMANCE OF RDA""
    Tech. Rep. no. 92-01, (1992), Dept. of Computer Science and Dept. of
    Mathematics and Statistics, James Cook University of North Queensland.
    (Also submitted to Journal of Chemometrics).
 
    Here, the data was used to illustrate the superior performance of
    the use of a new appreciation function with RDA. 
 
 4. Relevant Information:
 
    -- These data are the results of a chemical analysis of
       wines grown in the same region in Italy but derived from three
       different cultivars.
       The analysis determined the quantities of 13 constituents
       found in each of the three types of wines. 
 
    -- I think that the initial data set had around 30 variables, but 
       for some reason I only have the 13 dimensional version. 
       I had a list of what the 30 or so variables were, but a.) 
       I lost it, and b.), I would not know which 13 variables
       are included in the set.
 
    -- The attributes are (dontated by Riccardo Leardi, 
 	riclea@anchem.unige.it )
  	1) Alcohol
  	2) Malic acid
  	3) Ash
 	4) Alcalinity of ash  
  	5) Magnesium
 	6) Total phenols
  	7) Flavanoids
  	8) Nonflavanoid phenols
  	9) Proanthocyanins
 	10)Color intensity
  	11)Hue
  	12)OD280/OD315 of diluted wines
  	13)Proline            
 
 5. Number of Instances
 
       	class 1 59
 	class 2 71
 	class 3 48
 
 6. Number of Attributes 
 	
 	13
 
 7. For Each Attribute:
 
 	All attributes are continuous
 	
 	No statistics available, but suggest to standardise
 	variables for certain uses (e.g. for us with classifiers
 	which are NOT scale invariant)
 
 	NOTE: 1st attribute is class identifier (1-3)
 
 8. Missing Attribute Values:
 
 	None
 
 9. Class Distribution: number of instances per class
 
       	class 1 59
 	class 2 71
 	class 3 48

 Information about the dataset
 CLASSTYPE: nominal
 CLASSINDEX: first";"Range of values for the feature ""Flavanoids"": 0.34 - 5.08";"Minimum: 0.34
Maximum: 5.08";"The range of values for the feature ""Flavanoids"" in this dataset is between 0.34 and 5.08.";0.34;5.08;0.34;5.08;0.34;5.08;1.0;1.0;1.0
85;Nonflavanoid_phenols;187;wine;numeric;0.13;0.66;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

1. Title of Database: Wine recognition data
 	Updated Sept 21, 1998 by C.Blake : Added attribute information
 
 2. Sources:
    (a) Forina, M. et al, PARVUS - An Extendible Package for Data
        Exploration, Classification and Correlation. Institute of Pharmaceutical
        and Food Analysis and Technologies, Via Brigata Salerno, 
        16147 Genoa, Italy.
 
    (b) Stefan Aeberhard, email: stefan@coral.cs.jcu.edu.au
    (c) July 1991
 3. Past Usage:
 
    (1)
    S. Aeberhard, D. Coomans and O. de Vel,
    Comparison of Classifiers in High Dimensional Settings,
    Tech. Rep. no. 92-02, (1992), Dept. of Computer Science and Dept. of
    Mathematics and Statistics, James Cook University of North Queensland.
    (Also submitted to Technometrics).
 
    The data was used with many others for comparing various 
    classifiers. The classes are separable, though only RDA 
    has achieved 100% correct classification.
    (RDA : 100%, QDA 99.4%, LDA 98.9%, 1NN 96.1% (z-transformed data))
    (All results using the leave-one-out technique)
 
    In a classification context, this is a well posed problem 
    with ""well behaved"" class structures. A good data set 
    for first testing of a new classifier, but not very 
    challenging.
 
    (2) 
    S. Aeberhard, D. Coomans and O. de Vel,
    ""THE CLASSIFICATION PERFORMANCE OF RDA""
    Tech. Rep. no. 92-01, (1992), Dept. of Computer Science and Dept. of
    Mathematics and Statistics, James Cook University of North Queensland.
    (Also submitted to Journal of Chemometrics).
 
    Here, the data was used to illustrate the superior performance of
    the use of a new appreciation function with RDA. 
 
 4. Relevant Information:
 
    -- These data are the results of a chemical analysis of
       wines grown in the same region in Italy but derived from three
       different cultivars.
       The analysis determined the quantities of 13 constituents
       found in each of the three types of wines. 
 
    -- I think that the initial data set had around 30 variables, but 
       for some reason I only have the 13 dimensional version. 
       I had a list of what the 30 or so variables were, but a.) 
       I lost it, and b.), I would not know which 13 variables
       are included in the set.
 
    -- The attributes are (dontated by Riccardo Leardi, 
 	riclea@anchem.unige.it )
  	1) Alcohol
  	2) Malic acid
  	3) Ash
 	4) Alcalinity of ash  
  	5) Magnesium
 	6) Total phenols
  	7) Flavanoids
  	8) Nonflavanoid phenols
  	9) Proanthocyanins
 	10)Color intensity
  	11)Hue
  	12)OD280/OD315 of diluted wines
  	13)Proline            
 
 5. Number of Instances
 
       	class 1 59
 	class 2 71
 	class 3 48
 
 6. Number of Attributes 
 	
 	13
 
 7. For Each Attribute:
 
 	All attributes are continuous
 	
 	No statistics available, but suggest to standardise
 	variables for certain uses (e.g. for us with classifiers
 	which are NOT scale invariant)
 
 	NOTE: 1st attribute is class identifier (1-3)
 
 8. Missing Attribute Values:
 
 	None
 
 9. Class Distribution: number of instances per class
 
       	class 1 59
 	class 2 71
 	class 3 48

 Information about the dataset
 CLASSTYPE: nominal
 CLASSINDEX: first";"Minimum: 0.1
Maximum: 0.66";"Minimum: 0.1
Maximum: 0.9";The range of values for the feature Nonflavanoid_phenols in the dataset is from 0.13 to 0.66.;0.1;0.66;0.1;0.9;0.13;0.66;0.9464285714285714;0.6625;1.0
86;Proanthocyanins;187;wine;numeric;0.41;3.58;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

1. Title of Database: Wine recognition data
 	Updated Sept 21, 1998 by C.Blake : Added attribute information
 
 2. Sources:
    (a) Forina, M. et al, PARVUS - An Extendible Package for Data
        Exploration, Classification and Correlation. Institute of Pharmaceutical
        and Food Analysis and Technologies, Via Brigata Salerno, 
        16147 Genoa, Italy.
 
    (b) Stefan Aeberhard, email: stefan@coral.cs.jcu.edu.au
    (c) July 1991
 3. Past Usage:
 
    (1)
    S. Aeberhard, D. Coomans and O. de Vel,
    Comparison of Classifiers in High Dimensional Settings,
    Tech. Rep. no. 92-02, (1992), Dept. of Computer Science and Dept. of
    Mathematics and Statistics, James Cook University of North Queensland.
    (Also submitted to Technometrics).
 
    The data was used with many others for comparing various 
    classifiers. The classes are separable, though only RDA 
    has achieved 100% correct classification.
    (RDA : 100%, QDA 99.4%, LDA 98.9%, 1NN 96.1% (z-transformed data))
    (All results using the leave-one-out technique)
 
    In a classification context, this is a well posed problem 
    with ""well behaved"" class structures. A good data set 
    for first testing of a new classifier, but not very 
    challenging.
 
    (2) 
    S. Aeberhard, D. Coomans and O. de Vel,
    ""THE CLASSIFICATION PERFORMANCE OF RDA""
    Tech. Rep. no. 92-01, (1992), Dept. of Computer Science and Dept. of
    Mathematics and Statistics, James Cook University of North Queensland.
    (Also submitted to Journal of Chemometrics).
 
    Here, the data was used to illustrate the superior performance of
    the use of a new appreciation function with RDA. 
 
 4. Relevant Information:
 
    -- These data are the results of a chemical analysis of
       wines grown in the same region in Italy but derived from three
       different cultivars.
       The analysis determined the quantities of 13 constituents
       found in each of the three types of wines. 
 
    -- I think that the initial data set had around 30 variables, but 
       for some reason I only have the 13 dimensional version. 
       I had a list of what the 30 or so variables were, but a.) 
       I lost it, and b.), I would not know which 13 variables
       are included in the set.
 
    -- The attributes are (dontated by Riccardo Leardi, 
 	riclea@anchem.unige.it )
  	1) Alcohol
  	2) Malic acid
  	3) Ash
 	4) Alcalinity of ash  
  	5) Magnesium
 	6) Total phenols
  	7) Flavanoids
  	8) Nonflavanoid phenols
  	9) Proanthocyanins
 	10)Color intensity
  	11)Hue
  	12)OD280/OD315 of diluted wines
  	13)Proline            
 
 5. Number of Instances
 
       	class 1 59
 	class 2 71
 	class 3 48
 
 6. Number of Attributes 
 	
 	13
 
 7. For Each Attribute:
 
 	All attributes are continuous
 	
 	No statistics available, but suggest to standardise
 	variables for certain uses (e.g. for us with classifiers
 	which are NOT scale invariant)
 
 	NOTE: 1st attribute is class identifier (1-3)
 
 8. Missing Attribute Values:
 
 	None
 
 9. Class Distribution: number of instances per class
 
       	class 1 59
 	class 2 71
 	class 3 48

 Information about the dataset
 CLASSTYPE: nominal
 CLASSINDEX: first";"Min: 0.42
Max: 3.58";"Minimum: 0.1
Maximum: 3.5";"The range of values for the feature ""Proanthocyanins"" in the dataset is: Min = 0.41 Max = 3.58.";0.42;3.58;0.1;3.5;0.41;3.58;0.9968454258675079;0.8879310344827586;1.0
87;Color_intensity;187;wine;numeric;1.28;13.0;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

1. Title of Database: Wine recognition data
 	Updated Sept 21, 1998 by C.Blake : Added attribute information
 
 2. Sources:
    (a) Forina, M. et al, PARVUS - An Extendible Package for Data
        Exploration, Classification and Correlation. Institute of Pharmaceutical
        and Food Analysis and Technologies, Via Brigata Salerno, 
        16147 Genoa, Italy.
 
    (b) Stefan Aeberhard, email: stefan@coral.cs.jcu.edu.au
    (c) July 1991
 3. Past Usage:
 
    (1)
    S. Aeberhard, D. Coomans and O. de Vel,
    Comparison of Classifiers in High Dimensional Settings,
    Tech. Rep. no. 92-02, (1992), Dept. of Computer Science and Dept. of
    Mathematics and Statistics, James Cook University of North Queensland.
    (Also submitted to Technometrics).
 
    The data was used with many others for comparing various 
    classifiers. The classes are separable, though only RDA 
    has achieved 100% correct classification.
    (RDA : 100%, QDA 99.4%, LDA 98.9%, 1NN 96.1% (z-transformed data))
    (All results using the leave-one-out technique)
 
    In a classification context, this is a well posed problem 
    with ""well behaved"" class structures. A good data set 
    for first testing of a new classifier, but not very 
    challenging.
 
    (2) 
    S. Aeberhard, D. Coomans and O. de Vel,
    ""THE CLASSIFICATION PERFORMANCE OF RDA""
    Tech. Rep. no. 92-01, (1992), Dept. of Computer Science and Dept. of
    Mathematics and Statistics, James Cook University of North Queensland.
    (Also submitted to Journal of Chemometrics).
 
    Here, the data was used to illustrate the superior performance of
    the use of a new appreciation function with RDA. 
 
 4. Relevant Information:
 
    -- These data are the results of a chemical analysis of
       wines grown in the same region in Italy but derived from three
       different cultivars.
       The analysis determined the quantities of 13 constituents
       found in each of the three types of wines. 
 
    -- I think that the initial data set had around 30 variables, but 
       for some reason I only have the 13 dimensional version. 
       I had a list of what the 30 or so variables were, but a.) 
       I lost it, and b.), I would not know which 13 variables
       are included in the set.
 
    -- The attributes are (dontated by Riccardo Leardi, 
 	riclea@anchem.unige.it )
  	1) Alcohol
  	2) Malic acid
  	3) Ash
 	4) Alcalinity of ash  
  	5) Magnesium
 	6) Total phenols
  	7) Flavanoids
  	8) Nonflavanoid phenols
  	9) Proanthocyanins
 	10)Color intensity
  	11)Hue
  	12)OD280/OD315 of diluted wines
  	13)Proline            
 
 5. Number of Instances
 
       	class 1 59
 	class 2 71
 	class 3 48
 
 6. Number of Attributes 
 	
 	13
 
 7. For Each Attribute:
 
 	All attributes are continuous
 	
 	No statistics available, but suggest to standardise
 	variables for certain uses (e.g. for us with classifiers
 	which are NOT scale invariant)
 
 	NOTE: 1st attribute is class identifier (1-3)
 
 8. Missing Attribute Values:
 
 	None
 
 9. Class Distribution: number of instances per class
 
       	class 1 59
 	class 2 71
 	class 3 48

 Information about the dataset
 CLASSTYPE: nominal
 CLASSINDEX: first";"Min: 1.0
Max: 14.8";"Minimum: 1.28
Maximum: 13.00";"The range of values for the feature ""Color_intensity"" in the dataset is from the minimum value to the maximum value.";1.0;14.8;1.28;13.0;;;0.8492753623188406;1.0;
88;Hue;187;wine;numeric;0.48;1.71;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

1. Title of Database: Wine recognition data
 	Updated Sept 21, 1998 by C.Blake : Added attribute information
 
 2. Sources:
    (a) Forina, M. et al, PARVUS - An Extendible Package for Data
        Exploration, Classification and Correlation. Institute of Pharmaceutical
        and Food Analysis and Technologies, Via Brigata Salerno, 
        16147 Genoa, Italy.
 
    (b) Stefan Aeberhard, email: stefan@coral.cs.jcu.edu.au
    (c) July 1991
 3. Past Usage:
 
    (1)
    S. Aeberhard, D. Coomans and O. de Vel,
    Comparison of Classifiers in High Dimensional Settings,
    Tech. Rep. no. 92-02, (1992), Dept. of Computer Science and Dept. of
    Mathematics and Statistics, James Cook University of North Queensland.
    (Also submitted to Technometrics).
 
    The data was used with many others for comparing various 
    classifiers. The classes are separable, though only RDA 
    has achieved 100% correct classification.
    (RDA : 100%, QDA 99.4%, LDA 98.9%, 1NN 96.1% (z-transformed data))
    (All results using the leave-one-out technique)
 
    In a classification context, this is a well posed problem 
    with ""well behaved"" class structures. A good data set 
    for first testing of a new classifier, but not very 
    challenging.
 
    (2) 
    S. Aeberhard, D. Coomans and O. de Vel,
    ""THE CLASSIFICATION PERFORMANCE OF RDA""
    Tech. Rep. no. 92-01, (1992), Dept. of Computer Science and Dept. of
    Mathematics and Statistics, James Cook University of North Queensland.
    (Also submitted to Journal of Chemometrics).
 
    Here, the data was used to illustrate the superior performance of
    the use of a new appreciation function with RDA. 
 
 4. Relevant Information:
 
    -- These data are the results of a chemical analysis of
       wines grown in the same region in Italy but derived from three
       different cultivars.
       The analysis determined the quantities of 13 constituents
       found in each of the three types of wines. 
 
    -- I think that the initial data set had around 30 variables, but 
       for some reason I only have the 13 dimensional version. 
       I had a list of what the 30 or so variables were, but a.) 
       I lost it, and b.), I would not know which 13 variables
       are included in the set.
 
    -- The attributes are (dontated by Riccardo Leardi, 
 	riclea@anchem.unige.it )
  	1) Alcohol
  	2) Malic acid
  	3) Ash
 	4) Alcalinity of ash  
  	5) Magnesium
 	6) Total phenols
  	7) Flavanoids
  	8) Nonflavanoid phenols
  	9) Proanthocyanins
 	10)Color intensity
  	11)Hue
  	12)OD280/OD315 of diluted wines
  	13)Proline            
 
 5. Number of Instances
 
       	class 1 59
 	class 2 71
 	class 3 48
 
 6. Number of Attributes 
 	
 	13
 
 7. For Each Attribute:
 
 	All attributes are continuous
 	
 	No statistics available, but suggest to standardise
 	variables for certain uses (e.g. for us with classifiers
 	which are NOT scale invariant)
 
 	NOTE: 1st attribute is class identifier (1-3)
 
 8. Missing Attribute Values:
 
 	None
 
 9. Class Distribution: number of instances per class
 
       	class 1 59
 	class 2 71
 	class 3 48

 Information about the dataset
 CLASSTYPE: nominal
 CLASSINDEX: first";"The minimum and maximum values for the feature ""Hue"" in the dataset are unknown.";"Minimum: 0.4
Maximum: 1.7";"The range of values for the feature ""Hue"" in the dataset is from 0.48 to 1.71.";;;0.4;1.7;0.48;1.71;;0.9312977099236641;1.0
89;OD280%2FOD315_of_diluted_wines;187;wine;numeric;1.27;4.0;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

1. Title of Database: Wine recognition data
 	Updated Sept 21, 1998 by C.Blake : Added attribute information
 
 2. Sources:
    (a) Forina, M. et al, PARVUS - An Extendible Package for Data
        Exploration, Classification and Correlation. Institute of Pharmaceutical
        and Food Analysis and Technologies, Via Brigata Salerno, 
        16147 Genoa, Italy.
 
    (b) Stefan Aeberhard, email: stefan@coral.cs.jcu.edu.au
    (c) July 1991
 3. Past Usage:
 
    (1)
    S. Aeberhard, D. Coomans and O. de Vel,
    Comparison of Classifiers in High Dimensional Settings,
    Tech. Rep. no. 92-02, (1992), Dept. of Computer Science and Dept. of
    Mathematics and Statistics, James Cook University of North Queensland.
    (Also submitted to Technometrics).
 
    The data was used with many others for comparing various 
    classifiers. The classes are separable, though only RDA 
    has achieved 100% correct classification.
    (RDA : 100%, QDA 99.4%, LDA 98.9%, 1NN 96.1% (z-transformed data))
    (All results using the leave-one-out technique)
 
    In a classification context, this is a well posed problem 
    with ""well behaved"" class structures. A good data set 
    for first testing of a new classifier, but not very 
    challenging.
 
    (2) 
    S. Aeberhard, D. Coomans and O. de Vel,
    ""THE CLASSIFICATION PERFORMANCE OF RDA""
    Tech. Rep. no. 92-01, (1992), Dept. of Computer Science and Dept. of
    Mathematics and Statistics, James Cook University of North Queensland.
    (Also submitted to Journal of Chemometrics).
 
    Here, the data was used to illustrate the superior performance of
    the use of a new appreciation function with RDA. 
 
 4. Relevant Information:
 
    -- These data are the results of a chemical analysis of
       wines grown in the same region in Italy but derived from three
       different cultivars.
       The analysis determined the quantities of 13 constituents
       found in each of the three types of wines. 
 
    -- I think that the initial data set had around 30 variables, but 
       for some reason I only have the 13 dimensional version. 
       I had a list of what the 30 or so variables were, but a.) 
       I lost it, and b.), I would not know which 13 variables
       are included in the set.
 
    -- The attributes are (dontated by Riccardo Leardi, 
 	riclea@anchem.unige.it )
  	1) Alcohol
  	2) Malic acid
  	3) Ash
 	4) Alcalinity of ash  
  	5) Magnesium
 	6) Total phenols
  	7) Flavanoids
  	8) Nonflavanoid phenols
  	9) Proanthocyanins
 	10)Color intensity
  	11)Hue
  	12)OD280/OD315 of diluted wines
  	13)Proline            
 
 5. Number of Instances
 
       	class 1 59
 	class 2 71
 	class 3 48
 
 6. Number of Attributes 
 	
 	13
 
 7. For Each Attribute:
 
 	All attributes are continuous
 	
 	No statistics available, but suggest to standardise
 	variables for certain uses (e.g. for us with classifiers
 	which are NOT scale invariant)
 
 	NOTE: 1st attribute is class identifier (1-3)
 
 8. Missing Attribute Values:
 
 	None
 
 9. Class Distribution: number of instances per class
 
       	class 1 59
 	class 2 71
 	class 3 48

 Information about the dataset
 CLASSTYPE: nominal
 CLASSINDEX: first";"Min: 1.0
Max: 4.0";"Minimum: 0.68
Maximum: 4.00";The range of values for the feature OD280%2FOD315_of_diluted_wines is from the minimum value to the maximum value.;1.0;4.0;0.68;4.0;;;0.91;0.822289156626506;
90;Proline;187;wine;numeric;278.0;1680.0;"**Author**:   
**Source**: Unknown -   
**Please cite**:   

1. Title of Database: Wine recognition data
 	Updated Sept 21, 1998 by C.Blake : Added attribute information
 
 2. Sources:
    (a) Forina, M. et al, PARVUS - An Extendible Package for Data
        Exploration, Classification and Correlation. Institute of Pharmaceutical
        and Food Analysis and Technologies, Via Brigata Salerno, 
        16147 Genoa, Italy.
 
    (b) Stefan Aeberhard, email: stefan@coral.cs.jcu.edu.au
    (c) July 1991
 3. Past Usage:
 
    (1)
    S. Aeberhard, D. Coomans and O. de Vel,
    Comparison of Classifiers in High Dimensional Settings,
    Tech. Rep. no. 92-02, (1992), Dept. of Computer Science and Dept. of
    Mathematics and Statistics, James Cook University of North Queensland.
    (Also submitted to Technometrics).
 
    The data was used with many others for comparing various 
    classifiers. The classes are separable, though only RDA 
    has achieved 100% correct classification.
    (RDA : 100%, QDA 99.4%, LDA 98.9%, 1NN 96.1% (z-transformed data))
    (All results using the leave-one-out technique)
 
    In a classification context, this is a well posed problem 
    with ""well behaved"" class structures. A good data set 
    for first testing of a new classifier, but not very 
    challenging.
 
    (2) 
    S. Aeberhard, D. Coomans and O. de Vel,
    ""THE CLASSIFICATION PERFORMANCE OF RDA""
    Tech. Rep. no. 92-01, (1992), Dept. of Computer Science and Dept. of
    Mathematics and Statistics, James Cook University of North Queensland.
    (Also submitted to Journal of Chemometrics).
 
    Here, the data was used to illustrate the superior performance of
    the use of a new appreciation function with RDA. 
 
 4. Relevant Information:
 
    -- These data are the results of a chemical analysis of
       wines grown in the same region in Italy but derived from three
       different cultivars.
       The analysis determined the quantities of 13 constituents
       found in each of the three types of wines. 
 
    -- I think that the initial data set had around 30 variables, but 
       for some reason I only have the 13 dimensional version. 
       I had a list of what the 30 or so variables were, but a.) 
       I lost it, and b.), I would not know which 13 variables
       are included in the set.
 
    -- The attributes are (dontated by Riccardo Leardi, 
 	riclea@anchem.unige.it )
  	1) Alcohol
  	2) Malic acid
  	3) Ash
 	4) Alcalinity of ash  
  	5) Magnesium
 	6) Total phenols
  	7) Flavanoids
  	8) Nonflavanoid phenols
  	9) Proanthocyanins
 	10)Color intensity
  	11)Hue
  	12)OD280/OD315 of diluted wines
  	13)Proline            
 
 5. Number of Instances
 
       	class 1 59
 	class 2 71
 	class 3 48
 
 6. Number of Attributes 
 	
 	13
 
 7. For Each Attribute:
 
 	All attributes are continuous
 	
 	No statistics available, but suggest to standardise
 	variables for certain uses (e.g. for us with classifiers
 	which are NOT scale invariant)
 
 	NOTE: 1st attribute is class identifier (1-3)
 
 8. Missing Attribute Values:
 
 	None
 
 9. Class Distribution: number of instances per class
 
       	class 1 59
 	class 2 71
 	class 3 48

 Information about the dataset
 CLASSTYPE: nominal
 CLASSINDEX: first";"Minimum: 0.17
Maximum: 3.23";"Minimum: 0.17
Maximum: 3.23";"Minimum value for feature Prolinethat: 278
Maximum value for feature Prolinethat: 1680";0.17;3.23;0.17;3.23;278.0;1680.0;;;1.0
91;fixed.acidity;287;wine_quality;numeric;3.8;15.9;"**Author**: Tobias Kuehn  
**Source**: Unknown - 2009  
**Please cite**:   

1. Title: Wine Quality 

2. Sources
Created by: Paulo Cortez (Univ. Minho), Antonio Cerdeira, Fernando Almeida, Telmo Matos and Jose Reis (CVRVV) @ 2009
    
3. Past Usage:
P. Cortez, A. Cerdeira, F. Almeida, T. Matos and J. Reis. 
Modeling wine preferences by data mining from physicochemical properties.
In Decision Support Systems, Elsevier, 47(4):547-553. ISSN: 0167-9236.

In the above reference, two datasets were created, using red and white wine samples.
The inputs include objective tests (e.g. PH values) and the output is based on sensory data (median of at least 3 evaluations made by wine experts). Each expert graded the wine quality between 0 (very bad) and 10 (very excellent). Several data mining methods were applied to model these datasets under a regression approach. The support vector machine model achieved the best results. Several metrics were computed: MAD, confusion matrix for a fixed error tolerance (T), etc. Also, we plot the relative importances of the input variables (as measured by a sensitivity analysis procedure).
 
4. Relevant Information:
The two datasets are related to red and white variants of the Portuguese ""Vinho Verde"" wine. For more details, consult: http://www.vinhoverde.pt/en/ or the reference [Cortez et al., 2009]. Due to privacy and logistic issues, only physicochemical (inputs) and sensory (the output) variables  are available (e.g. there is no data about grape types, wine brand, wine selling price, etc.).
These datasets can be viewed as classification or regression tasks.
The classes are ordered and not balanced (e.g. there are munch more normal wines than excellent or poor ones). Outlier detection algorithms could be used to detect the few excellent or poor wines. Also, we are not sure if all input variables are relevant. So it could be interesting to test feature selection methods. 

5. Number of Instances: red wine - first 1599 instances; white wine - instances 1600 to 6497. 
 
6. Number of Attributes: 11 + output attribute
Note: several of the attributes may be correlated, thus it makes sense to apply some sort of feature selection.

7. Attribute information:
For more information, read [Cortez et al., 2009].
Input variables (based on physicochemical tests):
1 - fixed acidity
2 - volatile acidity
3 - citric acid
4 - residual sugar
5 - chlorides
6 - free sulfur dioxide
7 - total sulfur dioxide
8 - density
9 - pH
10 - sulphates
11 - alcohol
Output variable (based on sensory data): 
12 - quality (score between 0 and 10)

8. Missing Attribute Values: None";"Minimum: 4.6
Maximum: 15.9";"The minimum value for the feature ""fixed.acidity"" is 4.6 and the maximum value is 15.9.";"The range of values for the feature ""fixed acidity"" in the dataset is 3.8 (min) to 15.9 (max).";4.6;15.9;4.6;15.9;3.8;15.9;0.9338842975206612;0.9338842975206612;1.0
92;volatile.acidity;287;wine_quality;numeric;0.08;1.58;"**Author**: Tobias Kuehn  
**Source**: Unknown - 2009  
**Please cite**:   

1. Title: Wine Quality 

2. Sources
Created by: Paulo Cortez (Univ. Minho), Antonio Cerdeira, Fernando Almeida, Telmo Matos and Jose Reis (CVRVV) @ 2009
    
3. Past Usage:
P. Cortez, A. Cerdeira, F. Almeida, T. Matos and J. Reis. 
Modeling wine preferences by data mining from physicochemical properties.
In Decision Support Systems, Elsevier, 47(4):547-553. ISSN: 0167-9236.

In the above reference, two datasets were created, using red and white wine samples.
The inputs include objective tests (e.g. PH values) and the output is based on sensory data (median of at least 3 evaluations made by wine experts). Each expert graded the wine quality between 0 (very bad) and 10 (very excellent). Several data mining methods were applied to model these datasets under a regression approach. The support vector machine model achieved the best results. Several metrics were computed: MAD, confusion matrix for a fixed error tolerance (T), etc. Also, we plot the relative importances of the input variables (as measured by a sensitivity analysis procedure).
 
4. Relevant Information:
The two datasets are related to red and white variants of the Portuguese ""Vinho Verde"" wine. For more details, consult: http://www.vinhoverde.pt/en/ or the reference [Cortez et al., 2009]. Due to privacy and logistic issues, only physicochemical (inputs) and sensory (the output) variables  are available (e.g. there is no data about grape types, wine brand, wine selling price, etc.).
These datasets can be viewed as classification or regression tasks.
The classes are ordered and not balanced (e.g. there are munch more normal wines than excellent or poor ones). Outlier detection algorithms could be used to detect the few excellent or poor wines. Also, we are not sure if all input variables are relevant. So it could be interesting to test feature selection methods. 

5. Number of Instances: red wine - first 1599 instances; white wine - instances 1600 to 6497. 
 
6. Number of Attributes: 11 + output attribute
Note: several of the attributes may be correlated, thus it makes sense to apply some sort of feature selection.

7. Attribute information:
For more information, read [Cortez et al., 2009].
Input variables (based on physicochemical tests):
1 - fixed acidity
2 - volatile acidity
3 - citric acid
4 - residual sugar
5 - chlorides
6 - free sulfur dioxide
7 - total sulfur dioxide
8 - density
9 - pH
10 - sulphates
11 - alcohol
Output variable (based on sensory data): 
12 - quality (score between 0 and 10)

8. Missing Attribute Values: None";"Minimum: 0.10
Maximum: 1.58";"Minimum: 0.1
Maximum: 1.0";"The range of values for the feature ""volatile.acidity"" is 0.12 - 1.58.";0.1;1.58;0.1;1.0;0.12;1.58;0.9866666666666667;0.6;0.9733333333333333
93;citric.acid;287;wine_quality;numeric;0.0;1.66;"**Author**: Tobias Kuehn  
**Source**: Unknown - 2009  
**Please cite**:   

1. Title: Wine Quality 

2. Sources
Created by: Paulo Cortez (Univ. Minho), Antonio Cerdeira, Fernando Almeida, Telmo Matos and Jose Reis (CVRVV) @ 2009
    
3. Past Usage:
P. Cortez, A. Cerdeira, F. Almeida, T. Matos and J. Reis. 
Modeling wine preferences by data mining from physicochemical properties.
In Decision Support Systems, Elsevier, 47(4):547-553. ISSN: 0167-9236.

In the above reference, two datasets were created, using red and white wine samples.
The inputs include objective tests (e.g. PH values) and the output is based on sensory data (median of at least 3 evaluations made by wine experts). Each expert graded the wine quality between 0 (very bad) and 10 (very excellent). Several data mining methods were applied to model these datasets under a regression approach. The support vector machine model achieved the best results. Several metrics were computed: MAD, confusion matrix for a fixed error tolerance (T), etc. Also, we plot the relative importances of the input variables (as measured by a sensitivity analysis procedure).
 
4. Relevant Information:
The two datasets are related to red and white variants of the Portuguese ""Vinho Verde"" wine. For more details, consult: http://www.vinhoverde.pt/en/ or the reference [Cortez et al., 2009]. Due to privacy and logistic issues, only physicochemical (inputs) and sensory (the output) variables  are available (e.g. there is no data about grape types, wine brand, wine selling price, etc.).
These datasets can be viewed as classification or regression tasks.
The classes are ordered and not balanced (e.g. there are munch more normal wines than excellent or poor ones). Outlier detection algorithms could be used to detect the few excellent or poor wines. Also, we are not sure if all input variables are relevant. So it could be interesting to test feature selection methods. 

5. Number of Instances: red wine - first 1599 instances; white wine - instances 1600 to 6497. 
 
6. Number of Attributes: 11 + output attribute
Note: several of the attributes may be correlated, thus it makes sense to apply some sort of feature selection.

7. Attribute information:
For more information, read [Cortez et al., 2009].
Input variables (based on physicochemical tests):
1 - fixed acidity
2 - volatile acidity
3 - citric acid
4 - residual sugar
5 - chlorides
6 - free sulfur dioxide
7 - total sulfur dioxide
8 - density
9 - pH
10 - sulphates
11 - alcohol
Output variable (based on sensory data): 
12 - quality (score between 0 and 10)

8. Missing Attribute Values: None";"Minimum: 0.00
Maximum: 1.00";"Minimum: 0.00
Maximum: 1.00";"The minimum and maximum values for the feature ""citric acid"" in the dataset are not provided.";0.0;1.0;0.0;1.0;;;0.6024096385542169;0.6024096385542169;
94;residual.sugar;287;wine_quality;numeric;0.6;65.8;"**Author**: Tobias Kuehn  
**Source**: Unknown - 2009  
**Please cite**:   

1. Title: Wine Quality 

2. Sources
Created by: Paulo Cortez (Univ. Minho), Antonio Cerdeira, Fernando Almeida, Telmo Matos and Jose Reis (CVRVV) @ 2009
    
3. Past Usage:
P. Cortez, A. Cerdeira, F. Almeida, T. Matos and J. Reis. 
Modeling wine preferences by data mining from physicochemical properties.
In Decision Support Systems, Elsevier, 47(4):547-553. ISSN: 0167-9236.

In the above reference, two datasets were created, using red and white wine samples.
The inputs include objective tests (e.g. PH values) and the output is based on sensory data (median of at least 3 evaluations made by wine experts). Each expert graded the wine quality between 0 (very bad) and 10 (very excellent). Several data mining methods were applied to model these datasets under a regression approach. The support vector machine model achieved the best results. Several metrics were computed: MAD, confusion matrix for a fixed error tolerance (T), etc. Also, we plot the relative importances of the input variables (as measured by a sensitivity analysis procedure).
 
4. Relevant Information:
The two datasets are related to red and white variants of the Portuguese ""Vinho Verde"" wine. For more details, consult: http://www.vinhoverde.pt/en/ or the reference [Cortez et al., 2009]. Due to privacy and logistic issues, only physicochemical (inputs) and sensory (the output) variables  are available (e.g. there is no data about grape types, wine brand, wine selling price, etc.).
These datasets can be viewed as classification or regression tasks.
The classes are ordered and not balanced (e.g. there are munch more normal wines than excellent or poor ones). Outlier detection algorithms could be used to detect the few excellent or poor wines. Also, we are not sure if all input variables are relevant. So it could be interesting to test feature selection methods. 

5. Number of Instances: red wine - first 1599 instances; white wine - instances 1600 to 6497. 
 
6. Number of Attributes: 11 + output attribute
Note: several of the attributes may be correlated, thus it makes sense to apply some sort of feature selection.

7. Attribute information:
For more information, read [Cortez et al., 2009].
Input variables (based on physicochemical tests):
1 - fixed acidity
2 - volatile acidity
3 - citric acid
4 - residual sugar
5 - chlorides
6 - free sulfur dioxide
7 - total sulfur dioxide
8 - density
9 - pH
10 - sulphates
11 - alcohol
Output variable (based on sensory data): 
12 - quality (score between 0 and 10)

8. Missing Attribute Values: None";"Minimum: 0.5

Maximum: 20.0";"Minimum: 0.5
Maximum: 20.5";"The minimum and maximum values for the feature ""residual sugar"" in the dataset are not provided.";0.5;20.0;0.5;20.5;;;0.29709035222052066;0.3047473200612557;
95;chlorides;287;wine_quality;numeric;0.009000000000000001;0.611;"**Author**: Tobias Kuehn  
**Source**: Unknown - 2009  
**Please cite**:   

1. Title: Wine Quality 

2. Sources
Created by: Paulo Cortez (Univ. Minho), Antonio Cerdeira, Fernando Almeida, Telmo Matos and Jose Reis (CVRVV) @ 2009
    
3. Past Usage:
P. Cortez, A. Cerdeira, F. Almeida, T. Matos and J. Reis. 
Modeling wine preferences by data mining from physicochemical properties.
In Decision Support Systems, Elsevier, 47(4):547-553. ISSN: 0167-9236.

In the above reference, two datasets were created, using red and white wine samples.
The inputs include objective tests (e.g. PH values) and the output is based on sensory data (median of at least 3 evaluations made by wine experts). Each expert graded the wine quality between 0 (very bad) and 10 (very excellent). Several data mining methods were applied to model these datasets under a regression approach. The support vector machine model achieved the best results. Several metrics were computed: MAD, confusion matrix for a fixed error tolerance (T), etc. Also, we plot the relative importances of the input variables (as measured by a sensitivity analysis procedure).
 
4. Relevant Information:
The two datasets are related to red and white variants of the Portuguese ""Vinho Verde"" wine. For more details, consult: http://www.vinhoverde.pt/en/ or the reference [Cortez et al., 2009]. Due to privacy and logistic issues, only physicochemical (inputs) and sensory (the output) variables  are available (e.g. there is no data about grape types, wine brand, wine selling price, etc.).
These datasets can be viewed as classification or regression tasks.
The classes are ordered and not balanced (e.g. there are munch more normal wines than excellent or poor ones). Outlier detection algorithms could be used to detect the few excellent or poor wines. Also, we are not sure if all input variables are relevant. So it could be interesting to test feature selection methods. 

5. Number of Instances: red wine - first 1599 instances; white wine - instances 1600 to 6497. 
 
6. Number of Attributes: 11 + output attribute
Note: several of the attributes may be correlated, thus it makes sense to apply some sort of feature selection.

7. Attribute information:
For more information, read [Cortez et al., 2009].
Input variables (based on physicochemical tests):
1 - fixed acidity
2 - volatile acidity
3 - citric acid
4 - residual sugar
5 - chlorides
6 - free sulfur dioxide
7 - total sulfur dioxide
8 - density
9 - pH
10 - sulphates
11 - alcohol
Output variable (based on sensory data): 
12 - quality (score between 0 and 10)

8. Missing Attribute Values: None";"Minimum: 50
Maximum: 100";"Min: 0.009 g/dm^3 
Max: 0.346 g/dm^3";"The range of values for the feature ""chlorides"" in the dataset is from the minimum value of 0.009 to the maximum value of 0.611.";50.0;100.0;;;0.009000000000000001;0.611;;;1.0
96;free.sulfur.dioxide;287;wine_quality;numeric;1.0;289.0;"**Author**: Tobias Kuehn  
**Source**: Unknown - 2009  
**Please cite**:   

1. Title: Wine Quality 

2. Sources
Created by: Paulo Cortez (Univ. Minho), Antonio Cerdeira, Fernando Almeida, Telmo Matos and Jose Reis (CVRVV) @ 2009
    
3. Past Usage:
P. Cortez, A. Cerdeira, F. Almeida, T. Matos and J. Reis. 
Modeling wine preferences by data mining from physicochemical properties.
In Decision Support Systems, Elsevier, 47(4):547-553. ISSN: 0167-9236.

In the above reference, two datasets were created, using red and white wine samples.
The inputs include objective tests (e.g. PH values) and the output is based on sensory data (median of at least 3 evaluations made by wine experts). Each expert graded the wine quality between 0 (very bad) and 10 (very excellent). Several data mining methods were applied to model these datasets under a regression approach. The support vector machine model achieved the best results. Several metrics were computed: MAD, confusion matrix for a fixed error tolerance (T), etc. Also, we plot the relative importances of the input variables (as measured by a sensitivity analysis procedure).
 
4. Relevant Information:
The two datasets are related to red and white variants of the Portuguese ""Vinho Verde"" wine. For more details, consult: http://www.vinhoverde.pt/en/ or the reference [Cortez et al., 2009]. Due to privacy and logistic issues, only physicochemical (inputs) and sensory (the output) variables  are available (e.g. there is no data about grape types, wine brand, wine selling price, etc.).
These datasets can be viewed as classification or regression tasks.
The classes are ordered and not balanced (e.g. there are munch more normal wines than excellent or poor ones). Outlier detection algorithms could be used to detect the few excellent or poor wines. Also, we are not sure if all input variables are relevant. So it could be interesting to test feature selection methods. 

5. Number of Instances: red wine - first 1599 instances; white wine - instances 1600 to 6497. 
 
6. Number of Attributes: 11 + output attribute
Note: several of the attributes may be correlated, thus it makes sense to apply some sort of feature selection.

7. Attribute information:
For more information, read [Cortez et al., 2009].
Input variables (based on physicochemical tests):
1 - fixed acidity
2 - volatile acidity
3 - citric acid
4 - residual sugar
5 - chlorides
6 - free sulfur dioxide
7 - total sulfur dioxide
8 - density
9 - pH
10 - sulphates
11 - alcohol
Output variable (based on sensory data): 
12 - quality (score between 0 and 10)

8. Missing Attribute Values: None";"Minimum: 1
Maximum: 45";"Minimum: 1
Maximum: 300";"The range of values for the feature ""free sulfur dioxide"" in the dataset is 1 to 289.";1.0;45.0;1.0;300.0;1.0;289.0;0.1527777777777778;0.9632107023411371;1.0
97;total.sulfur.dioxide;287;wine_quality;numeric;6.0;440.0;"**Author**: Tobias Kuehn  
**Source**: Unknown - 2009  
**Please cite**:   

1. Title: Wine Quality 

2. Sources
Created by: Paulo Cortez (Univ. Minho), Antonio Cerdeira, Fernando Almeida, Telmo Matos and Jose Reis (CVRVV) @ 2009
    
3. Past Usage:
P. Cortez, A. Cerdeira, F. Almeida, T. Matos and J. Reis. 
Modeling wine preferences by data mining from physicochemical properties.
In Decision Support Systems, Elsevier, 47(4):547-553. ISSN: 0167-9236.

In the above reference, two datasets were created, using red and white wine samples.
The inputs include objective tests (e.g. PH values) and the output is based on sensory data (median of at least 3 evaluations made by wine experts). Each expert graded the wine quality between 0 (very bad) and 10 (very excellent). Several data mining methods were applied to model these datasets under a regression approach. The support vector machine model achieved the best results. Several metrics were computed: MAD, confusion matrix for a fixed error tolerance (T), etc. Also, we plot the relative importances of the input variables (as measured by a sensitivity analysis procedure).
 
4. Relevant Information:
The two datasets are related to red and white variants of the Portuguese ""Vinho Verde"" wine. For more details, consult: http://www.vinhoverde.pt/en/ or the reference [Cortez et al., 2009]. Due to privacy and logistic issues, only physicochemical (inputs) and sensory (the output) variables  are available (e.g. there is no data about grape types, wine brand, wine selling price, etc.).
These datasets can be viewed as classification or regression tasks.
The classes are ordered and not balanced (e.g. there are munch more normal wines than excellent or poor ones). Outlier detection algorithms could be used to detect the few excellent or poor wines. Also, we are not sure if all input variables are relevant. So it could be interesting to test feature selection methods. 

5. Number of Instances: red wine - first 1599 instances; white wine - instances 1600 to 6497. 
 
6. Number of Attributes: 11 + output attribute
Note: several of the attributes may be correlated, thus it makes sense to apply some sort of feature selection.

7. Attribute information:
For more information, read [Cortez et al., 2009].
Input variables (based on physicochemical tests):
1 - fixed acidity
2 - volatile acidity
3 - citric acid
4 - residual sugar
5 - chlorides
6 - free sulfur dioxide
7 - total sulfur dioxide
8 - density
9 - pH
10 - sulphates
11 - alcohol
Output variable (based on sensory data): 
12 - quality (score between 0 and 10)

8. Missing Attribute Values: None";"Min: 1
Max: 366";"Minimum: 6
Maximum: 300";"The range of values for the feature ""total sulfur dioxide"" in the dataset is: Min: 6; Max: 289";1.0;366.0;6.0;300.0;6.0;289.0;0.8200455580865603;0.6774193548387096;0.652073732718894
98;density;287;wine_quality;numeric;0.98711;1.03898;"**Author**: Tobias Kuehn  
**Source**: Unknown - 2009  
**Please cite**:   

1. Title: Wine Quality 

2. Sources
Created by: Paulo Cortez (Univ. Minho), Antonio Cerdeira, Fernando Almeida, Telmo Matos and Jose Reis (CVRVV) @ 2009
    
3. Past Usage:
P. Cortez, A. Cerdeira, F. Almeida, T. Matos and J. Reis. 
Modeling wine preferences by data mining from physicochemical properties.
In Decision Support Systems, Elsevier, 47(4):547-553. ISSN: 0167-9236.

In the above reference, two datasets were created, using red and white wine samples.
The inputs include objective tests (e.g. PH values) and the output is based on sensory data (median of at least 3 evaluations made by wine experts). Each expert graded the wine quality between 0 (very bad) and 10 (very excellent). Several data mining methods were applied to model these datasets under a regression approach. The support vector machine model achieved the best results. Several metrics were computed: MAD, confusion matrix for a fixed error tolerance (T), etc. Also, we plot the relative importances of the input variables (as measured by a sensitivity analysis procedure).
 
4. Relevant Information:
The two datasets are related to red and white variants of the Portuguese ""Vinho Verde"" wine. For more details, consult: http://www.vinhoverde.pt/en/ or the reference [Cortez et al., 2009]. Due to privacy and logistic issues, only physicochemical (inputs) and sensory (the output) variables  are available (e.g. there is no data about grape types, wine brand, wine selling price, etc.).
These datasets can be viewed as classification or regression tasks.
The classes are ordered and not balanced (e.g. there are munch more normal wines than excellent or poor ones). Outlier detection algorithms could be used to detect the few excellent or poor wines. Also, we are not sure if all input variables are relevant. So it could be interesting to test feature selection methods. 

5. Number of Instances: red wine - first 1599 instances; white wine - instances 1600 to 6497. 
 
6. Number of Attributes: 11 + output attribute
Note: several of the attributes may be correlated, thus it makes sense to apply some sort of feature selection.

7. Attribute information:
For more information, read [Cortez et al., 2009].
Input variables (based on physicochemical tests):
1 - fixed acidity
2 - volatile acidity
3 - citric acid
4 - residual sugar
5 - chlorides
6 - free sulfur dioxide
7 - total sulfur dioxide
8 - density
9 - pH
10 - sulphates
11 - alcohol
Output variable (based on sensory data): 
12 - quality (score between 0 and 10)

8. Missing Attribute Values: None";"Sorry, but without any information about the dataset or the feature ""density,"" I am unable to provide a range of values.";"Minimum: 0.99007
Maximum: 1.00369";"Based on the dataset description the feature ""density"" ranges from the minimum value of 0.98711 to the maximum value of 1.03898.";;;0.9900700000000001;1.00369;0.98711;1.03898;;0.26257952573741783;1.0
99;pH;287;wine_quality;numeric;2.72;4.01;"**Author**: Tobias Kuehn  
**Source**: Unknown - 2009  
**Please cite**:   

1. Title: Wine Quality 

2. Sources
Created by: Paulo Cortez (Univ. Minho), Antonio Cerdeira, Fernando Almeida, Telmo Matos and Jose Reis (CVRVV) @ 2009
    
3. Past Usage:
P. Cortez, A. Cerdeira, F. Almeida, T. Matos and J. Reis. 
Modeling wine preferences by data mining from physicochemical properties.
In Decision Support Systems, Elsevier, 47(4):547-553. ISSN: 0167-9236.

In the above reference, two datasets were created, using red and white wine samples.
The inputs include objective tests (e.g. PH values) and the output is based on sensory data (median of at least 3 evaluations made by wine experts). Each expert graded the wine quality between 0 (very bad) and 10 (very excellent). Several data mining methods were applied to model these datasets under a regression approach. The support vector machine model achieved the best results. Several metrics were computed: MAD, confusion matrix for a fixed error tolerance (T), etc. Also, we plot the relative importances of the input variables (as measured by a sensitivity analysis procedure).
 
4. Relevant Information:
The two datasets are related to red and white variants of the Portuguese ""Vinho Verde"" wine. For more details, consult: http://www.vinhoverde.pt/en/ or the reference [Cortez et al., 2009]. Due to privacy and logistic issues, only physicochemical (inputs) and sensory (the output) variables  are available (e.g. there is no data about grape types, wine brand, wine selling price, etc.).
These datasets can be viewed as classification or regression tasks.
The classes are ordered and not balanced (e.g. there are munch more normal wines than excellent or poor ones). Outlier detection algorithms could be used to detect the few excellent or poor wines. Also, we are not sure if all input variables are relevant. So it could be interesting to test feature selection methods. 

5. Number of Instances: red wine - first 1599 instances; white wine - instances 1600 to 6497. 
 
6. Number of Attributes: 11 + output attribute
Note: several of the attributes may be correlated, thus it makes sense to apply some sort of feature selection.

7. Attribute information:
For more information, read [Cortez et al., 2009].
Input variables (based on physicochemical tests):
1 - fixed acidity
2 - volatile acidity
3 - citric acid
4 - residual sugar
5 - chlorides
6 - free sulfur dioxide
7 - total sulfur dioxide
8 - density
9 - pH
10 - sulphates
11 - alcohol
Output variable (based on sensory data): 
12 - quality (score between 0 and 10)

8. Missing Attribute Values: None";"Minimum pH: 2.0
Maximum pH: 9.0";"Minimum pH: 2.72 
Maximum pH: 4.01";Based on the given dataset, the minimum and maximum values for the feature pH are not provided.;2.0;9.0;2.72;4.01;;;0.18428571428571422;1.0;
100;sulphates;287;wine_quality;numeric;0.22;2.0;"**Author**: Tobias Kuehn  
**Source**: Unknown - 2009  
**Please cite**:   

1. Title: Wine Quality 

2. Sources
Created by: Paulo Cortez (Univ. Minho), Antonio Cerdeira, Fernando Almeida, Telmo Matos and Jose Reis (CVRVV) @ 2009
    
3. Past Usage:
P. Cortez, A. Cerdeira, F. Almeida, T. Matos and J. Reis. 
Modeling wine preferences by data mining from physicochemical properties.
In Decision Support Systems, Elsevier, 47(4):547-553. ISSN: 0167-9236.

In the above reference, two datasets were created, using red and white wine samples.
The inputs include objective tests (e.g. PH values) and the output is based on sensory data (median of at least 3 evaluations made by wine experts). Each expert graded the wine quality between 0 (very bad) and 10 (very excellent). Several data mining methods were applied to model these datasets under a regression approach. The support vector machine model achieved the best results. Several metrics were computed: MAD, confusion matrix for a fixed error tolerance (T), etc. Also, we plot the relative importances of the input variables (as measured by a sensitivity analysis procedure).
 
4. Relevant Information:
The two datasets are related to red and white variants of the Portuguese ""Vinho Verde"" wine. For more details, consult: http://www.vinhoverde.pt/en/ or the reference [Cortez et al., 2009]. Due to privacy and logistic issues, only physicochemical (inputs) and sensory (the output) variables  are available (e.g. there is no data about grape types, wine brand, wine selling price, etc.).
These datasets can be viewed as classification or regression tasks.
The classes are ordered and not balanced (e.g. there are munch more normal wines than excellent or poor ones). Outlier detection algorithms could be used to detect the few excellent or poor wines. Also, we are not sure if all input variables are relevant. So it could be interesting to test feature selection methods. 

5. Number of Instances: red wine - first 1599 instances; white wine - instances 1600 to 6497. 
 
6. Number of Attributes: 11 + output attribute
Note: several of the attributes may be correlated, thus it makes sense to apply some sort of feature selection.

7. Attribute information:
For more information, read [Cortez et al., 2009].
Input variables (based on physicochemical tests):
1 - fixed acidity
2 - volatile acidity
3 - citric acid
4 - residual sugar
5 - chlorides
6 - free sulfur dioxide
7 - total sulfur dioxide
8 - density
9 - pH
10 - sulphates
11 - alcohol
Output variable (based on sensory data): 
12 - quality (score between 0 and 10)

8. Missing Attribute Values: None";"Minimum: 0.01
Maximum: 0.8";"Minimum: 0.1
Maximum: 2.0";"The range of values for the feature ""sulphates"" in the dataset is from 0.33 to 2.00.";0.01;0.8;0.1;2.0;0.33;2.0;0.29145728643216084;0.9368421052631579;0.9382022471910112
101;alcohol;287;wine_quality;numeric;8.0;14.9;"**Author**: Tobias Kuehn  
**Source**: Unknown - 2009  
**Please cite**:   

1. Title: Wine Quality 

2. Sources
Created by: Paulo Cortez (Univ. Minho), Antonio Cerdeira, Fernando Almeida, Telmo Matos and Jose Reis (CVRVV) @ 2009
    
3. Past Usage:
P. Cortez, A. Cerdeira, F. Almeida, T. Matos and J. Reis. 
Modeling wine preferences by data mining from physicochemical properties.
In Decision Support Systems, Elsevier, 47(4):547-553. ISSN: 0167-9236.

In the above reference, two datasets were created, using red and white wine samples.
The inputs include objective tests (e.g. PH values) and the output is based on sensory data (median of at least 3 evaluations made by wine experts). Each expert graded the wine quality between 0 (very bad) and 10 (very excellent). Several data mining methods were applied to model these datasets under a regression approach. The support vector machine model achieved the best results. Several metrics were computed: MAD, confusion matrix for a fixed error tolerance (T), etc. Also, we plot the relative importances of the input variables (as measured by a sensitivity analysis procedure).
 
4. Relevant Information:
The two datasets are related to red and white variants of the Portuguese ""Vinho Verde"" wine. For more details, consult: http://www.vinhoverde.pt/en/ or the reference [Cortez et al., 2009]. Due to privacy and logistic issues, only physicochemical (inputs) and sensory (the output) variables  are available (e.g. there is no data about grape types, wine brand, wine selling price, etc.).
These datasets can be viewed as classification or regression tasks.
The classes are ordered and not balanced (e.g. there are munch more normal wines than excellent or poor ones). Outlier detection algorithms could be used to detect the few excellent or poor wines. Also, we are not sure if all input variables are relevant. So it could be interesting to test feature selection methods. 

5. Number of Instances: red wine - first 1599 instances; white wine - instances 1600 to 6497. 
 
6. Number of Attributes: 11 + output attribute
Note: several of the attributes may be correlated, thus it makes sense to apply some sort of feature selection.

7. Attribute information:
For more information, read [Cortez et al., 2009].
Input variables (based on physicochemical tests):
1 - fixed acidity
2 - volatile acidity
3 - citric acid
4 - residual sugar
5 - chlorides
6 - free sulfur dioxide
7 - total sulfur dioxide
8 - density
9 - pH
10 - sulphates
11 - alcohol
Output variable (based on sensory data): 
12 - quality (score between 0 and 10)

8. Missing Attribute Values: None";"Min: 0.5
Max: 20.0";"Min: 0.5
Max: 20.0";"The range of values for the feature ""alcohol"" in the dataset is approximately 8.0 to 14.9.";0.5;20.0;0.5;20.0;8.0;14.9;0.35384615384615387;0.35384615384615387;1.0
102;quality;287;wine_quality;numeric;3.0;9.0;"**Author**: Tobias Kuehn  
**Source**: Unknown - 2009  
**Please cite**:   

1. Title: Wine Quality 

2. Sources
Created by: Paulo Cortez (Univ. Minho), Antonio Cerdeira, Fernando Almeida, Telmo Matos and Jose Reis (CVRVV) @ 2009
    
3. Past Usage:
P. Cortez, A. Cerdeira, F. Almeida, T. Matos and J. Reis. 
Modeling wine preferences by data mining from physicochemical properties.
In Decision Support Systems, Elsevier, 47(4):547-553. ISSN: 0167-9236.

In the above reference, two datasets were created, using red and white wine samples.
The inputs include objective tests (e.g. PH values) and the output is based on sensory data (median of at least 3 evaluations made by wine experts). Each expert graded the wine quality between 0 (very bad) and 10 (very excellent). Several data mining methods were applied to model these datasets under a regression approach. The support vector machine model achieved the best results. Several metrics were computed: MAD, confusion matrix for a fixed error tolerance (T), etc. Also, we plot the relative importances of the input variables (as measured by a sensitivity analysis procedure).
 
4. Relevant Information:
The two datasets are related to red and white variants of the Portuguese ""Vinho Verde"" wine. For more details, consult: http://www.vinhoverde.pt/en/ or the reference [Cortez et al., 2009]. Due to privacy and logistic issues, only physicochemical (inputs) and sensory (the output) variables  are available (e.g. there is no data about grape types, wine brand, wine selling price, etc.).
These datasets can be viewed as classification or regression tasks.
The classes are ordered and not balanced (e.g. there are munch more normal wines than excellent or poor ones). Outlier detection algorithms could be used to detect the few excellent or poor wines. Also, we are not sure if all input variables are relevant. So it could be interesting to test feature selection methods. 

5. Number of Instances: red wine - first 1599 instances; white wine - instances 1600 to 6497. 
 
6. Number of Attributes: 11 + output attribute
Note: several of the attributes may be correlated, thus it makes sense to apply some sort of feature selection.

7. Attribute information:
For more information, read [Cortez et al., 2009].
Input variables (based on physicochemical tests):
1 - fixed acidity
2 - volatile acidity
3 - citric acid
4 - residual sugar
5 - chlorides
6 - free sulfur dioxide
7 - total sulfur dioxide
8 - density
9 - pH
10 - sulphates
11 - alcohol
Output variable (based on sensory data): 
12 - quality (score between 0 and 10)

8. Missing Attribute Values: None";"Minimum: 1
Maximum: 10";"Minimum: 1
Maximum: 10";"The range of values for the feature ""quality"" is from 0 to 10.";1.0;10.0;1.0;10.0;0.0;10.0;0.6666666666666666;0.6666666666666666;0.6
103;utterance;375;JapaneseVowels;numeric;1.0;88.0;"**Author**: Mineichi Kudo, Jun Toyama, Masaru Shimbo    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Japanese+Vowels)    
**Please cite**:   

**Japanese vowels**  
This dataset records 640 time series of 12 LPC cepstrum coefficients taken from nine male speakers.

The data was collected for examining our newly developed classifier for multidimensional curves (multidimensional time series). Nine male speakers uttered two Japanese vowels /ae/ successively. For each utterance, with the analysis parameters described below, we applied 12-degree linear prediction analysis to it to obtain a discrete-time series with 12 LPC cepstrum coefficients. This means that one utterance by a speaker forms a time series whose length is in the range 7-29 and each point of a time series is of 12 features (12 coefficients).

Similar data are available for different utterances /ei/, /iu/, /uo/, /oa/ in addition to /ae/. Please contact the donor if you are interested in using this data.

The number of the time series is 640 in total. We used one set of 270 time series for training and the other set of 370 time series for testing.

Analysis parameters:  
* Sampling rate : 10kHz
* Frame length : 25.6 ms
* Shift length : 6.4ms
* Degree of LPC coefficients : 12

Each line represents 12 LPC coefficients in the increasing order separated by spaces. This corresponds to one analysis
frame. Lines are organized into blocks, which are a set of 7-29 lines separated by blank lines and corresponds to a single speech utterance of /ae/ with 7-29 frames.

Each speaker is a set of consecutive blocks. In ae.train there are 30 blocks for each speaker. Blocks 1-30 represent speaker 1, blocks 31-60 represent speaker 2, and so on up to speaker 9. In ae.test, speakers 1 to 9 have the corresponding number of blocks: 31 35 88 44 29 24 40 50 29. Thus, blocks 1-31 represent speaker 1 (31 utterances of /ae/), blocks 32-66 represent speaker 2 (35 utterances of /ae/), and so on.

**Past Usage**

M. Kudo, J. Toyama and M. Shimbo. (1999). ""Multidimensional Curve Classification Using Passing-Through Regions"". Pattern Recognition Letters, Vol. 20, No. 11--13, pages 1103--1111.

If you publish any work using the dataset, please inform the donor. Use for commercial purposes requires donor permission.

References  

1. http://ips9.main.eng.hokudai.ac.jp/index_e.html
2. mailto:mine@main.eng.hokudai.ac.jp
3. mailto:jun@main.eng.hokudai.ac.jp
4. mailto:shimbo@main.eng.hokudai.ac.jp
5. http://kdd.ics.uci.edu/
6. http://www.ics.uci.edu/
7. http://www.uci.edu/";min: 1 max: 500;"Minimum: ""utterance"" - no specific range can be determined for this feature as it represents textual data. 
Maximum: ""utterance"" - no specific range can be determined for this feature as it represents textual data.";"The range of values for the feature ""utterance"" is not provided in the dataset description.";1.0;500.0;;;;;0.1743486973947896;;
104;frame;375;JapaneseVowels;numeric;1.0;29.0;"**Author**: Mineichi Kudo, Jun Toyama, Masaru Shimbo    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Japanese+Vowels)    
**Please cite**:   

**Japanese vowels**  
This dataset records 640 time series of 12 LPC cepstrum coefficients taken from nine male speakers.

The data was collected for examining our newly developed classifier for multidimensional curves (multidimensional time series). Nine male speakers uttered two Japanese vowels /ae/ successively. For each utterance, with the analysis parameters described below, we applied 12-degree linear prediction analysis to it to obtain a discrete-time series with 12 LPC cepstrum coefficients. This means that one utterance by a speaker forms a time series whose length is in the range 7-29 and each point of a time series is of 12 features (12 coefficients).

Similar data are available for different utterances /ei/, /iu/, /uo/, /oa/ in addition to /ae/. Please contact the donor if you are interested in using this data.

The number of the time series is 640 in total. We used one set of 270 time series for training and the other set of 370 time series for testing.

Analysis parameters:  
* Sampling rate : 10kHz
* Frame length : 25.6 ms
* Shift length : 6.4ms
* Degree of LPC coefficients : 12

Each line represents 12 LPC coefficients in the increasing order separated by spaces. This corresponds to one analysis
frame. Lines are organized into blocks, which are a set of 7-29 lines separated by blank lines and corresponds to a single speech utterance of /ae/ with 7-29 frames.

Each speaker is a set of consecutive blocks. In ae.train there are 30 blocks for each speaker. Blocks 1-30 represent speaker 1, blocks 31-60 represent speaker 2, and so on up to speaker 9. In ae.test, speakers 1 to 9 have the corresponding number of blocks: 31 35 88 44 29 24 40 50 29. Thus, blocks 1-31 represent speaker 1 (31 utterances of /ae/), blocks 32-66 represent speaker 2 (35 utterances of /ae/), and so on.

**Past Usage**

M. Kudo, J. Toyama and M. Shimbo. (1999). ""Multidimensional Curve Classification Using Passing-Through Regions"". Pattern Recognition Letters, Vol. 20, No. 11--13, pages 1103--1111.

If you publish any work using the dataset, please inform the donor. Use for commercial purposes requires donor permission.

References  

1. http://ips9.main.eng.hokudai.ac.jp/index_e.html
2. mailto:mine@main.eng.hokudai.ac.jp
3. mailto:jun@main.eng.hokudai.ac.jp
4. mailto:shimbo@main.eng.hokudai.ac.jp
5. http://kdd.ics.uci.edu/
6. http://www.ics.uci.edu/
7. http://www.uci.edu/";"Minimum: 0
Maximum: 1000";"min(frame): 0
max(frame): 100";The range of values for the feature 'frame' in this dataset is from the minimum value of 7 to the maximum value of 29.;0.0;1000.0;0.0;100.0;7.0;29.0;0.028;0.28;0.7857142857142857
105;coefficient1;375;JapaneseVowels;numeric;-0.783783;2.203141;"**Author**: Mineichi Kudo, Jun Toyama, Masaru Shimbo    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Japanese+Vowels)    
**Please cite**:   

**Japanese vowels**  
This dataset records 640 time series of 12 LPC cepstrum coefficients taken from nine male speakers.

The data was collected for examining our newly developed classifier for multidimensional curves (multidimensional time series). Nine male speakers uttered two Japanese vowels /ae/ successively. For each utterance, with the analysis parameters described below, we applied 12-degree linear prediction analysis to it to obtain a discrete-time series with 12 LPC cepstrum coefficients. This means that one utterance by a speaker forms a time series whose length is in the range 7-29 and each point of a time series is of 12 features (12 coefficients).

Similar data are available for different utterances /ei/, /iu/, /uo/, /oa/ in addition to /ae/. Please contact the donor if you are interested in using this data.

The number of the time series is 640 in total. We used one set of 270 time series for training and the other set of 370 time series for testing.

Analysis parameters:  
* Sampling rate : 10kHz
* Frame length : 25.6 ms
* Shift length : 6.4ms
* Degree of LPC coefficients : 12

Each line represents 12 LPC coefficients in the increasing order separated by spaces. This corresponds to one analysis
frame. Lines are organized into blocks, which are a set of 7-29 lines separated by blank lines and corresponds to a single speech utterance of /ae/ with 7-29 frames.

Each speaker is a set of consecutive blocks. In ae.train there are 30 blocks for each speaker. Blocks 1-30 represent speaker 1, blocks 31-60 represent speaker 2, and so on up to speaker 9. In ae.test, speakers 1 to 9 have the corresponding number of blocks: 31 35 88 44 29 24 40 50 29. Thus, blocks 1-31 represent speaker 1 (31 utterances of /ae/), blocks 32-66 represent speaker 2 (35 utterances of /ae/), and so on.

**Past Usage**

M. Kudo, J. Toyama and M. Shimbo. (1999). ""Multidimensional Curve Classification Using Passing-Through Regions"". Pattern Recognition Letters, Vol. 20, No. 11--13, pages 1103--1111.

If you publish any work using the dataset, please inform the donor. Use for commercial purposes requires donor permission.

References  

1. http://ips9.main.eng.hokudai.ac.jp/index_e.html
2. mailto:mine@main.eng.hokudai.ac.jp
3. mailto:jun@main.eng.hokudai.ac.jp
4. mailto:shimbo@main.eng.hokudai.ac.jp
5. http://kdd.ics.uci.edu/
6. http://www.ics.uci.edu/
7. http://www.uci.edu/";"min: -10 
max: 10";"Minimum: -10
Maximum: 10";"Based on the description provided we don't have enough information to determine the range of values for the feature ""coefficient1"". The dataset description mentions that each line represents 12 LPC coefficients in increasing order separated by spaces but it doesn't provide any specific information about the range of values for coefficient1. To determine the range we would need additional information or access to the dataset itself.";-10.0;10.0;-10.0;10.0;;;0.1493462;0.1493462;
106;coefficient2;375;JapaneseVowels;numeric;-1.8527650000000002;0.655478;"**Author**: Mineichi Kudo, Jun Toyama, Masaru Shimbo    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Japanese+Vowels)    
**Please cite**:   

**Japanese vowels**  
This dataset records 640 time series of 12 LPC cepstrum coefficients taken from nine male speakers.

The data was collected for examining our newly developed classifier for multidimensional curves (multidimensional time series). Nine male speakers uttered two Japanese vowels /ae/ successively. For each utterance, with the analysis parameters described below, we applied 12-degree linear prediction analysis to it to obtain a discrete-time series with 12 LPC cepstrum coefficients. This means that one utterance by a speaker forms a time series whose length is in the range 7-29 and each point of a time series is of 12 features (12 coefficients).

Similar data are available for different utterances /ei/, /iu/, /uo/, /oa/ in addition to /ae/. Please contact the donor if you are interested in using this data.

The number of the time series is 640 in total. We used one set of 270 time series for training and the other set of 370 time series for testing.

Analysis parameters:  
* Sampling rate : 10kHz
* Frame length : 25.6 ms
* Shift length : 6.4ms
* Degree of LPC coefficients : 12

Each line represents 12 LPC coefficients in the increasing order separated by spaces. This corresponds to one analysis
frame. Lines are organized into blocks, which are a set of 7-29 lines separated by blank lines and corresponds to a single speech utterance of /ae/ with 7-29 frames.

Each speaker is a set of consecutive blocks. In ae.train there are 30 blocks for each speaker. Blocks 1-30 represent speaker 1, blocks 31-60 represent speaker 2, and so on up to speaker 9. In ae.test, speakers 1 to 9 have the corresponding number of blocks: 31 35 88 44 29 24 40 50 29. Thus, blocks 1-31 represent speaker 1 (31 utterances of /ae/), blocks 32-66 represent speaker 2 (35 utterances of /ae/), and so on.

**Past Usage**

M. Kudo, J. Toyama and M. Shimbo. (1999). ""Multidimensional Curve Classification Using Passing-Through Regions"". Pattern Recognition Letters, Vol. 20, No. 11--13, pages 1103--1111.

If you publish any work using the dataset, please inform the donor. Use for commercial purposes requires donor permission.

References  

1. http://ips9.main.eng.hokudai.ac.jp/index_e.html
2. mailto:mine@main.eng.hokudai.ac.jp
3. mailto:jun@main.eng.hokudai.ac.jp
4. mailto:shimbo@main.eng.hokudai.ac.jp
5. http://kdd.ics.uci.edu/
6. http://www.ics.uci.edu/
7. http://www.uci.edu/";"Minimum: -10
Maximum: 10";"The range for the feature ""coefficient2"" in the dataset could be between some minimum and maximum values. It is not possible to provide a specific range without more information about the dataset's characteristics or domain.";"From the given dataset description the range of values for the feature ""coefficient2"" is not provided.";-10.0;10.0;;;;;0.12541215;;
107;coefficient3;375;JapaneseVowels;numeric;-0.7643449999999999;1.328993;"**Author**: Mineichi Kudo, Jun Toyama, Masaru Shimbo    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Japanese+Vowels)    
**Please cite**:   

**Japanese vowels**  
This dataset records 640 time series of 12 LPC cepstrum coefficients taken from nine male speakers.

The data was collected for examining our newly developed classifier for multidimensional curves (multidimensional time series). Nine male speakers uttered two Japanese vowels /ae/ successively. For each utterance, with the analysis parameters described below, we applied 12-degree linear prediction analysis to it to obtain a discrete-time series with 12 LPC cepstrum coefficients. This means that one utterance by a speaker forms a time series whose length is in the range 7-29 and each point of a time series is of 12 features (12 coefficients).

Similar data are available for different utterances /ei/, /iu/, /uo/, /oa/ in addition to /ae/. Please contact the donor if you are interested in using this data.

The number of the time series is 640 in total. We used one set of 270 time series for training and the other set of 370 time series for testing.

Analysis parameters:  
* Sampling rate : 10kHz
* Frame length : 25.6 ms
* Shift length : 6.4ms
* Degree of LPC coefficients : 12

Each line represents 12 LPC coefficients in the increasing order separated by spaces. This corresponds to one analysis
frame. Lines are organized into blocks, which are a set of 7-29 lines separated by blank lines and corresponds to a single speech utterance of /ae/ with 7-29 frames.

Each speaker is a set of consecutive blocks. In ae.train there are 30 blocks for each speaker. Blocks 1-30 represent speaker 1, blocks 31-60 represent speaker 2, and so on up to speaker 9. In ae.test, speakers 1 to 9 have the corresponding number of blocks: 31 35 88 44 29 24 40 50 29. Thus, blocks 1-31 represent speaker 1 (31 utterances of /ae/), blocks 32-66 represent speaker 2 (35 utterances of /ae/), and so on.

**Past Usage**

M. Kudo, J. Toyama and M. Shimbo. (1999). ""Multidimensional Curve Classification Using Passing-Through Regions"". Pattern Recognition Letters, Vol. 20, No. 11--13, pages 1103--1111.

If you publish any work using the dataset, please inform the donor. Use for commercial purposes requires donor permission.

References  

1. http://ips9.main.eng.hokudai.ac.jp/index_e.html
2. mailto:mine@main.eng.hokudai.ac.jp
3. mailto:jun@main.eng.hokudai.ac.jp
4. mailto:shimbo@main.eng.hokudai.ac.jp
5. http://kdd.ics.uci.edu/
6. http://www.ics.uci.edu/
7. http://www.uci.edu/";"Min: -10
Max: 10";"Min: -10
Max: 10";"Based on the given dataset description the range of values for the feature ""coefficient3"" cannot be determined without access to the actual dataset. The minimum and maximum values of ""coefficient3"" can only be obtained by analyzing the dataset itself.";-10.0;10.0;-10.0;10.0;3.0;3.0;0.10466690000000001;0.10466690000000001;
108;coefficient4;375;JapaneseVowels;numeric;-0.977701;0.6461720000000001;"**Author**: Mineichi Kudo, Jun Toyama, Masaru Shimbo    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Japanese+Vowels)    
**Please cite**:   

**Japanese vowels**  
This dataset records 640 time series of 12 LPC cepstrum coefficients taken from nine male speakers.

The data was collected for examining our newly developed classifier for multidimensional curves (multidimensional time series). Nine male speakers uttered two Japanese vowels /ae/ successively. For each utterance, with the analysis parameters described below, we applied 12-degree linear prediction analysis to it to obtain a discrete-time series with 12 LPC cepstrum coefficients. This means that one utterance by a speaker forms a time series whose length is in the range 7-29 and each point of a time series is of 12 features (12 coefficients).

Similar data are available for different utterances /ei/, /iu/, /uo/, /oa/ in addition to /ae/. Please contact the donor if you are interested in using this data.

The number of the time series is 640 in total. We used one set of 270 time series for training and the other set of 370 time series for testing.

Analysis parameters:  
* Sampling rate : 10kHz
* Frame length : 25.6 ms
* Shift length : 6.4ms
* Degree of LPC coefficients : 12

Each line represents 12 LPC coefficients in the increasing order separated by spaces. This corresponds to one analysis
frame. Lines are organized into blocks, which are a set of 7-29 lines separated by blank lines and corresponds to a single speech utterance of /ae/ with 7-29 frames.

Each speaker is a set of consecutive blocks. In ae.train there are 30 blocks for each speaker. Blocks 1-30 represent speaker 1, blocks 31-60 represent speaker 2, and so on up to speaker 9. In ae.test, speakers 1 to 9 have the corresponding number of blocks: 31 35 88 44 29 24 40 50 29. Thus, blocks 1-31 represent speaker 1 (31 utterances of /ae/), blocks 32-66 represent speaker 2 (35 utterances of /ae/), and so on.

**Past Usage**

M. Kudo, J. Toyama and M. Shimbo. (1999). ""Multidimensional Curve Classification Using Passing-Through Regions"". Pattern Recognition Letters, Vol. 20, No. 11--13, pages 1103--1111.

If you publish any work using the dataset, please inform the donor. Use for commercial purposes requires donor permission.

References  

1. http://ips9.main.eng.hokudai.ac.jp/index_e.html
2. mailto:mine@main.eng.hokudai.ac.jp
3. mailto:jun@main.eng.hokudai.ac.jp
4. mailto:shimbo@main.eng.hokudai.ac.jp
5. http://kdd.ics.uci.edu/
6. http://www.ics.uci.edu/
7. http://www.uci.edu/";"Minimum: -10
Maximum: 10";"Minimum: Unknown
Maximum: Unknown";Based on the given information we do not have the specific values for the feature coefficient4. Therefore it is not possible to determine the minimum and maximum values for this feature.;-10.0;10.0;;;;;0.08119365;;
109;coefficient5;375;JapaneseVowels;numeric;-0.691587;0.9146569999999999;"**Author**: Mineichi Kudo, Jun Toyama, Masaru Shimbo    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Japanese+Vowels)    
**Please cite**:   

**Japanese vowels**  
This dataset records 640 time series of 12 LPC cepstrum coefficients taken from nine male speakers.

The data was collected for examining our newly developed classifier for multidimensional curves (multidimensional time series). Nine male speakers uttered two Japanese vowels /ae/ successively. For each utterance, with the analysis parameters described below, we applied 12-degree linear prediction analysis to it to obtain a discrete-time series with 12 LPC cepstrum coefficients. This means that one utterance by a speaker forms a time series whose length is in the range 7-29 and each point of a time series is of 12 features (12 coefficients).

Similar data are available for different utterances /ei/, /iu/, /uo/, /oa/ in addition to /ae/. Please contact the donor if you are interested in using this data.

The number of the time series is 640 in total. We used one set of 270 time series for training and the other set of 370 time series for testing.

Analysis parameters:  
* Sampling rate : 10kHz
* Frame length : 25.6 ms
* Shift length : 6.4ms
* Degree of LPC coefficients : 12

Each line represents 12 LPC coefficients in the increasing order separated by spaces. This corresponds to one analysis
frame. Lines are organized into blocks, which are a set of 7-29 lines separated by blank lines and corresponds to a single speech utterance of /ae/ with 7-29 frames.

Each speaker is a set of consecutive blocks. In ae.train there are 30 blocks for each speaker. Blocks 1-30 represent speaker 1, blocks 31-60 represent speaker 2, and so on up to speaker 9. In ae.test, speakers 1 to 9 have the corresponding number of blocks: 31 35 88 44 29 24 40 50 29. Thus, blocks 1-31 represent speaker 1 (31 utterances of /ae/), blocks 32-66 represent speaker 2 (35 utterances of /ae/), and so on.

**Past Usage**

M. Kudo, J. Toyama and M. Shimbo. (1999). ""Multidimensional Curve Classification Using Passing-Through Regions"". Pattern Recognition Letters, Vol. 20, No. 11--13, pages 1103--1111.

If you publish any work using the dataset, please inform the donor. Use for commercial purposes requires donor permission.

References  

1. http://ips9.main.eng.hokudai.ac.jp/index_e.html
2. mailto:mine@main.eng.hokudai.ac.jp
3. mailto:jun@main.eng.hokudai.ac.jp
4. mailto:shimbo@main.eng.hokudai.ac.jp
5. http://kdd.ics.uci.edu/
6. http://www.ics.uci.edu/
7. http://www.uci.edu/";"min: -3
max: 3";The minimum value for the feature coefficient5 is unknown, and the maximum value is unknown as well.;Based on the dataset description we don't have access to the actual range of values for the feature coefficient5. To determine the minimum and maximum values for coefficient5 we would need access to the dataset itself or additional information about the range of values within the dataset.;-3.0;3.0;;;5.0;5.0;0.2677073333333333;;
110;coefficient6;375;JapaneseVowels;numeric;-0.895842;0.335503;"**Author**: Mineichi Kudo, Jun Toyama, Masaru Shimbo    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Japanese+Vowels)    
**Please cite**:   

**Japanese vowels**  
This dataset records 640 time series of 12 LPC cepstrum coefficients taken from nine male speakers.

The data was collected for examining our newly developed classifier for multidimensional curves (multidimensional time series). Nine male speakers uttered two Japanese vowels /ae/ successively. For each utterance, with the analysis parameters described below, we applied 12-degree linear prediction analysis to it to obtain a discrete-time series with 12 LPC cepstrum coefficients. This means that one utterance by a speaker forms a time series whose length is in the range 7-29 and each point of a time series is of 12 features (12 coefficients).

Similar data are available for different utterances /ei/, /iu/, /uo/, /oa/ in addition to /ae/. Please contact the donor if you are interested in using this data.

The number of the time series is 640 in total. We used one set of 270 time series for training and the other set of 370 time series for testing.

Analysis parameters:  
* Sampling rate : 10kHz
* Frame length : 25.6 ms
* Shift length : 6.4ms
* Degree of LPC coefficients : 12

Each line represents 12 LPC coefficients in the increasing order separated by spaces. This corresponds to one analysis
frame. Lines are organized into blocks, which are a set of 7-29 lines separated by blank lines and corresponds to a single speech utterance of /ae/ with 7-29 frames.

Each speaker is a set of consecutive blocks. In ae.train there are 30 blocks for each speaker. Blocks 1-30 represent speaker 1, blocks 31-60 represent speaker 2, and so on up to speaker 9. In ae.test, speakers 1 to 9 have the corresponding number of blocks: 31 35 88 44 29 24 40 50 29. Thus, blocks 1-31 represent speaker 1 (31 utterances of /ae/), blocks 32-66 represent speaker 2 (35 utterances of /ae/), and so on.

**Past Usage**

M. Kudo, J. Toyama and M. Shimbo. (1999). ""Multidimensional Curve Classification Using Passing-Through Regions"". Pattern Recognition Letters, Vol. 20, No. 11--13, pages 1103--1111.

If you publish any work using the dataset, please inform the donor. Use for commercial purposes requires donor permission.

References  

1. http://ips9.main.eng.hokudai.ac.jp/index_e.html
2. mailto:mine@main.eng.hokudai.ac.jp
3. mailto:jun@main.eng.hokudai.ac.jp
4. mailto:shimbo@main.eng.hokudai.ac.jp
5. http://kdd.ics.uci.edu/
6. http://www.ics.uci.edu/
7. http://www.uci.edu/";"Minimum: -10
Maximum: 10";"Minimum: Unknown
Maximum: Unknown";"Based on the provided dataset description it is not possible to determine the range of values for the feature ""coefficient6"".";-10.0;10.0;;;;;0.061567250000000004;;
111;coefficient7;375;JapaneseVowels;numeric;-0.618975;0.42411000000000004;"**Author**: Mineichi Kudo, Jun Toyama, Masaru Shimbo    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Japanese+Vowels)    
**Please cite**:   

**Japanese vowels**  
This dataset records 640 time series of 12 LPC cepstrum coefficients taken from nine male speakers.

The data was collected for examining our newly developed classifier for multidimensional curves (multidimensional time series). Nine male speakers uttered two Japanese vowels /ae/ successively. For each utterance, with the analysis parameters described below, we applied 12-degree linear prediction analysis to it to obtain a discrete-time series with 12 LPC cepstrum coefficients. This means that one utterance by a speaker forms a time series whose length is in the range 7-29 and each point of a time series is of 12 features (12 coefficients).

Similar data are available for different utterances /ei/, /iu/, /uo/, /oa/ in addition to /ae/. Please contact the donor if you are interested in using this data.

The number of the time series is 640 in total. We used one set of 270 time series for training and the other set of 370 time series for testing.

Analysis parameters:  
* Sampling rate : 10kHz
* Frame length : 25.6 ms
* Shift length : 6.4ms
* Degree of LPC coefficients : 12

Each line represents 12 LPC coefficients in the increasing order separated by spaces. This corresponds to one analysis
frame. Lines are organized into blocks, which are a set of 7-29 lines separated by blank lines and corresponds to a single speech utterance of /ae/ with 7-29 frames.

Each speaker is a set of consecutive blocks. In ae.train there are 30 blocks for each speaker. Blocks 1-30 represent speaker 1, blocks 31-60 represent speaker 2, and so on up to speaker 9. In ae.test, speakers 1 to 9 have the corresponding number of blocks: 31 35 88 44 29 24 40 50 29. Thus, blocks 1-31 represent speaker 1 (31 utterances of /ae/), blocks 32-66 represent speaker 2 (35 utterances of /ae/), and so on.

**Past Usage**

M. Kudo, J. Toyama and M. Shimbo. (1999). ""Multidimensional Curve Classification Using Passing-Through Regions"". Pattern Recognition Letters, Vol. 20, No. 11--13, pages 1103--1111.

If you publish any work using the dataset, please inform the donor. Use for commercial purposes requires donor permission.

References  

1. http://ips9.main.eng.hokudai.ac.jp/index_e.html
2. mailto:mine@main.eng.hokudai.ac.jp
3. mailto:jun@main.eng.hokudai.ac.jp
4. mailto:shimbo@main.eng.hokudai.ac.jp
5. http://kdd.ics.uci.edu/
6. http://www.ics.uci.edu/
7. http://www.uci.edu/";Minimum: -10    Maximum: 10;"Minimum: Unknown
Maximum: Unknown";"Based on the given dataset description we don't have the specific range for the feature ""coefficient7"".";-10.0;10.0;;;;;0.05215425;;
112;coefficient8;375;JapaneseVowels;numeric;-0.5758270000000001;0.5223300000000001;"**Author**: Mineichi Kudo, Jun Toyama, Masaru Shimbo    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Japanese+Vowels)    
**Please cite**:   

**Japanese vowels**  
This dataset records 640 time series of 12 LPC cepstrum coefficients taken from nine male speakers.

The data was collected for examining our newly developed classifier for multidimensional curves (multidimensional time series). Nine male speakers uttered two Japanese vowels /ae/ successively. For each utterance, with the analysis parameters described below, we applied 12-degree linear prediction analysis to it to obtain a discrete-time series with 12 LPC cepstrum coefficients. This means that one utterance by a speaker forms a time series whose length is in the range 7-29 and each point of a time series is of 12 features (12 coefficients).

Similar data are available for different utterances /ei/, /iu/, /uo/, /oa/ in addition to /ae/. Please contact the donor if you are interested in using this data.

The number of the time series is 640 in total. We used one set of 270 time series for training and the other set of 370 time series for testing.

Analysis parameters:  
* Sampling rate : 10kHz
* Frame length : 25.6 ms
* Shift length : 6.4ms
* Degree of LPC coefficients : 12

Each line represents 12 LPC coefficients in the increasing order separated by spaces. This corresponds to one analysis
frame. Lines are organized into blocks, which are a set of 7-29 lines separated by blank lines and corresponds to a single speech utterance of /ae/ with 7-29 frames.

Each speaker is a set of consecutive blocks. In ae.train there are 30 blocks for each speaker. Blocks 1-30 represent speaker 1, blocks 31-60 represent speaker 2, and so on up to speaker 9. In ae.test, speakers 1 to 9 have the corresponding number of blocks: 31 35 88 44 29 24 40 50 29. Thus, blocks 1-31 represent speaker 1 (31 utterances of /ae/), blocks 32-66 represent speaker 2 (35 utterances of /ae/), and so on.

**Past Usage**

M. Kudo, J. Toyama and M. Shimbo. (1999). ""Multidimensional Curve Classification Using Passing-Through Regions"". Pattern Recognition Letters, Vol. 20, No. 11--13, pages 1103--1111.

If you publish any work using the dataset, please inform the donor. Use for commercial purposes requires donor permission.

References  

1. http://ips9.main.eng.hokudai.ac.jp/index_e.html
2. mailto:mine@main.eng.hokudai.ac.jp
3. mailto:jun@main.eng.hokudai.ac.jp
4. mailto:shimbo@main.eng.hokudai.ac.jp
5. http://kdd.ics.uci.edu/
6. http://www.ics.uci.edu/
7. http://www.uci.edu/";Sorry but without any information about the dataset or the specific feature coefficient8 it is not possible for me to give a meaningful range.;"Minimum: -
Maximum: -";Based on the dataset description the range of values for the feature coefficient8 is not provided. Therefore without further information we cannot determine the minimum and maximum values for coefficient8.;;;;;8.0;8.0;;;
113;coefficient9;375;JapaneseVowels;numeric;-0.623201;0.393086;"**Author**: Mineichi Kudo, Jun Toyama, Masaru Shimbo    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Japanese+Vowels)    
**Please cite**:   

**Japanese vowels**  
This dataset records 640 time series of 12 LPC cepstrum coefficients taken from nine male speakers.

The data was collected for examining our newly developed classifier for multidimensional curves (multidimensional time series). Nine male speakers uttered two Japanese vowels /ae/ successively. For each utterance, with the analysis parameters described below, we applied 12-degree linear prediction analysis to it to obtain a discrete-time series with 12 LPC cepstrum coefficients. This means that one utterance by a speaker forms a time series whose length is in the range 7-29 and each point of a time series is of 12 features (12 coefficients).

Similar data are available for different utterances /ei/, /iu/, /uo/, /oa/ in addition to /ae/. Please contact the donor if you are interested in using this data.

The number of the time series is 640 in total. We used one set of 270 time series for training and the other set of 370 time series for testing.

Analysis parameters:  
* Sampling rate : 10kHz
* Frame length : 25.6 ms
* Shift length : 6.4ms
* Degree of LPC coefficients : 12

Each line represents 12 LPC coefficients in the increasing order separated by spaces. This corresponds to one analysis
frame. Lines are organized into blocks, which are a set of 7-29 lines separated by blank lines and corresponds to a single speech utterance of /ae/ with 7-29 frames.

Each speaker is a set of consecutive blocks. In ae.train there are 30 blocks for each speaker. Blocks 1-30 represent speaker 1, blocks 31-60 represent speaker 2, and so on up to speaker 9. In ae.test, speakers 1 to 9 have the corresponding number of blocks: 31 35 88 44 29 24 40 50 29. Thus, blocks 1-31 represent speaker 1 (31 utterances of /ae/), blocks 32-66 represent speaker 2 (35 utterances of /ae/), and so on.

**Past Usage**

M. Kudo, J. Toyama and M. Shimbo. (1999). ""Multidimensional Curve Classification Using Passing-Through Regions"". Pattern Recognition Letters, Vol. 20, No. 11--13, pages 1103--1111.

If you publish any work using the dataset, please inform the donor. Use for commercial purposes requires donor permission.

References  

1. http://ips9.main.eng.hokudai.ac.jp/index_e.html
2. mailto:mine@main.eng.hokudai.ac.jp
3. mailto:jun@main.eng.hokudai.ac.jp
4. mailto:shimbo@main.eng.hokudai.ac.jp
5. http://kdd.ics.uci.edu/
6. http://www.ics.uci.edu/
7. http://www.uci.edu/";"Minimum: -10
Maximum: 10";"Minimum: Unknown
Maximum: Unknown";The range of values for the feature coefficient9 is not specified in the given dataset description.;-10.0;10.0;;;;;0.050814349999999994;;
114;coefficient10;375;JapaneseVowels;numeric;-0.503843;0.27783;"**Author**: Mineichi Kudo, Jun Toyama, Masaru Shimbo    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Japanese+Vowels)    
**Please cite**:   

**Japanese vowels**  
This dataset records 640 time series of 12 LPC cepstrum coefficients taken from nine male speakers.

The data was collected for examining our newly developed classifier for multidimensional curves (multidimensional time series). Nine male speakers uttered two Japanese vowels /ae/ successively. For each utterance, with the analysis parameters described below, we applied 12-degree linear prediction analysis to it to obtain a discrete-time series with 12 LPC cepstrum coefficients. This means that one utterance by a speaker forms a time series whose length is in the range 7-29 and each point of a time series is of 12 features (12 coefficients).

Similar data are available for different utterances /ei/, /iu/, /uo/, /oa/ in addition to /ae/. Please contact the donor if you are interested in using this data.

The number of the time series is 640 in total. We used one set of 270 time series for training and the other set of 370 time series for testing.

Analysis parameters:  
* Sampling rate : 10kHz
* Frame length : 25.6 ms
* Shift length : 6.4ms
* Degree of LPC coefficients : 12

Each line represents 12 LPC coefficients in the increasing order separated by spaces. This corresponds to one analysis
frame. Lines are organized into blocks, which are a set of 7-29 lines separated by blank lines and corresponds to a single speech utterance of /ae/ with 7-29 frames.

Each speaker is a set of consecutive blocks. In ae.train there are 30 blocks for each speaker. Blocks 1-30 represent speaker 1, blocks 31-60 represent speaker 2, and so on up to speaker 9. In ae.test, speakers 1 to 9 have the corresponding number of blocks: 31 35 88 44 29 24 40 50 29. Thus, blocks 1-31 represent speaker 1 (31 utterances of /ae/), blocks 32-66 represent speaker 2 (35 utterances of /ae/), and so on.

**Past Usage**

M. Kudo, J. Toyama and M. Shimbo. (1999). ""Multidimensional Curve Classification Using Passing-Through Regions"". Pattern Recognition Letters, Vol. 20, No. 11--13, pages 1103--1111.

If you publish any work using the dataset, please inform the donor. Use for commercial purposes requires donor permission.

References  

1. http://ips9.main.eng.hokudai.ac.jp/index_e.html
2. mailto:mine@main.eng.hokudai.ac.jp
3. mailto:jun@main.eng.hokudai.ac.jp
4. mailto:shimbo@main.eng.hokudai.ac.jp
5. http://kdd.ics.uci.edu/
6. http://www.ics.uci.edu/
7. http://www.uci.edu/";Min: -5.0 Max: 5.0;"Minimum: -inf 
Maximum: +inf";Unfortunately the range of values for the feature coefficient10 is not provided in the dataset description.;-5.0;5.0;;;;;0.07816730000000001;;
115;coefficient11;375;JapaneseVowels;numeric;-0.426728;0.289177;"**Author**: Mineichi Kudo, Jun Toyama, Masaru Shimbo    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Japanese+Vowels)    
**Please cite**:   

**Japanese vowels**  
This dataset records 640 time series of 12 LPC cepstrum coefficients taken from nine male speakers.

The data was collected for examining our newly developed classifier for multidimensional curves (multidimensional time series). Nine male speakers uttered two Japanese vowels /ae/ successively. For each utterance, with the analysis parameters described below, we applied 12-degree linear prediction analysis to it to obtain a discrete-time series with 12 LPC cepstrum coefficients. This means that one utterance by a speaker forms a time series whose length is in the range 7-29 and each point of a time series is of 12 features (12 coefficients).

Similar data are available for different utterances /ei/, /iu/, /uo/, /oa/ in addition to /ae/. Please contact the donor if you are interested in using this data.

The number of the time series is 640 in total. We used one set of 270 time series for training and the other set of 370 time series for testing.

Analysis parameters:  
* Sampling rate : 10kHz
* Frame length : 25.6 ms
* Shift length : 6.4ms
* Degree of LPC coefficients : 12

Each line represents 12 LPC coefficients in the increasing order separated by spaces. This corresponds to one analysis
frame. Lines are organized into blocks, which are a set of 7-29 lines separated by blank lines and corresponds to a single speech utterance of /ae/ with 7-29 frames.

Each speaker is a set of consecutive blocks. In ae.train there are 30 blocks for each speaker. Blocks 1-30 represent speaker 1, blocks 31-60 represent speaker 2, and so on up to speaker 9. In ae.test, speakers 1 to 9 have the corresponding number of blocks: 31 35 88 44 29 24 40 50 29. Thus, blocks 1-31 represent speaker 1 (31 utterances of /ae/), blocks 32-66 represent speaker 2 (35 utterances of /ae/), and so on.

**Past Usage**

M. Kudo, J. Toyama and M. Shimbo. (1999). ""Multidimensional Curve Classification Using Passing-Through Regions"". Pattern Recognition Letters, Vol. 20, No. 11--13, pages 1103--1111.

If you publish any work using the dataset, please inform the donor. Use for commercial purposes requires donor permission.

References  

1. http://ips9.main.eng.hokudai.ac.jp/index_e.html
2. mailto:mine@main.eng.hokudai.ac.jp
3. mailto:jun@main.eng.hokudai.ac.jp
4. mailto:shimbo@main.eng.hokudai.ac.jp
5. http://kdd.ics.uci.edu/
6. http://www.ics.uci.edu/
7. http://www.uci.edu/";"Minimum: -10
Maximum: 15";"The range of values for the feature ""coefficient11"" in the dataset is unknown.";"Based on the information provided the range of values for the feature ""coefficient11"" is not given. Therefore we cannot determine the minimum and maximum values for this feature.";-10.0;15.0;;;;;0.0286362;;
116;coefficient12;375;JapaneseVowels;numeric;-0.336968;0.425088;"**Author**: Mineichi Kudo, Jun Toyama, Masaru Shimbo    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Japanese+Vowels)    
**Please cite**:   

**Japanese vowels**  
This dataset records 640 time series of 12 LPC cepstrum coefficients taken from nine male speakers.

The data was collected for examining our newly developed classifier for multidimensional curves (multidimensional time series). Nine male speakers uttered two Japanese vowels /ae/ successively. For each utterance, with the analysis parameters described below, we applied 12-degree linear prediction analysis to it to obtain a discrete-time series with 12 LPC cepstrum coefficients. This means that one utterance by a speaker forms a time series whose length is in the range 7-29 and each point of a time series is of 12 features (12 coefficients).

Similar data are available for different utterances /ei/, /iu/, /uo/, /oa/ in addition to /ae/. Please contact the donor if you are interested in using this data.

The number of the time series is 640 in total. We used one set of 270 time series for training and the other set of 370 time series for testing.

Analysis parameters:  
* Sampling rate : 10kHz
* Frame length : 25.6 ms
* Shift length : 6.4ms
* Degree of LPC coefficients : 12

Each line represents 12 LPC coefficients in the increasing order separated by spaces. This corresponds to one analysis
frame. Lines are organized into blocks, which are a set of 7-29 lines separated by blank lines and corresponds to a single speech utterance of /ae/ with 7-29 frames.

Each speaker is a set of consecutive blocks. In ae.train there are 30 blocks for each speaker. Blocks 1-30 represent speaker 1, blocks 31-60 represent speaker 2, and so on up to speaker 9. In ae.test, speakers 1 to 9 have the corresponding number of blocks: 31 35 88 44 29 24 40 50 29. Thus, blocks 1-31 represent speaker 1 (31 utterances of /ae/), blocks 32-66 represent speaker 2 (35 utterances of /ae/), and so on.

**Past Usage**

M. Kudo, J. Toyama and M. Shimbo. (1999). ""Multidimensional Curve Classification Using Passing-Through Regions"". Pattern Recognition Letters, Vol. 20, No. 11--13, pages 1103--1111.

If you publish any work using the dataset, please inform the donor. Use for commercial purposes requires donor permission.

References  

1. http://ips9.main.eng.hokudai.ac.jp/index_e.html
2. mailto:mine@main.eng.hokudai.ac.jp
3. mailto:jun@main.eng.hokudai.ac.jp
4. mailto:shimbo@main.eng.hokudai.ac.jp
5. http://kdd.ics.uci.edu/
6. http://www.ics.uci.edu/
7. http://www.uci.edu/";"There is insufficient information provided to determine the range of values for the feature ""coefficient12"" from the dataset.";"There is insufficient information provided to determine the range of values for the feature ""coefficient12"" from the dataset.";Based on the dataset description the minimum and maximum values for the feature coefficient12 are not provided.;;;;;;;;;
117;climbRate;198;delta_elevators;numeric;-15.0;15.1;"**Author**: Rui Camacho (rcamacho@garfield.fe.up.pt)  
**Source**: [Regression datasets collection Luis Torgo](http://www.dcc.fc.up.pt/~ltorgo/Regression/DataSets.html)  
**Please cite**:   

This data set is also obtained from the task of controlling the ailerons of a F16 aircraft, although the target variable and attributes are different from the ailerons domain. The target variable here is a variation instead of an absolute value, and there was some pre-selection of the attributes.";"Minimum: 0
Maximum: 10";"Minimum: -inf
Maximum: inf";"The range of values for the feature ""climbRate"" in this dataset is as follows:

Minimum: -12.32
Maximum: 18.49";0.0;10.0;;;-12.32;18.49;0.33222591362126247;;0.8187518662287252
118;Altitude;198;delta_elevators;numeric;-100.0;90.0;"**Author**: Rui Camacho (rcamacho@garfield.fe.up.pt)  
**Source**: [Regression datasets collection Luis Torgo](http://www.dcc.fc.up.pt/~ltorgo/Regression/DataSets.html)  
**Please cite**:   

This data set is also obtained from the task of controlling the ailerons of a F16 aircraft, although the target variable and attributes are different from the ailerons domain. The target variable here is a variation instead of an absolute value, and there was some pre-selection of the attributes.";"Minimum: 0 meters 
Maximum: 10000 meters";"Minimum: -10000
Maximum: 30000";The range of values for the feature Altitude in the dataset is from the minimum value to the maximum value.;0.0;10000.0;-10000.0;30000.0;;;0.00891089108910891;0.00475;
119;RollRate;198;delta_elevators;numeric;-0.0237;0.0184;"**Author**: Rui Camacho (rcamacho@garfield.fe.up.pt)  
**Source**: [Regression datasets collection Luis Torgo](http://www.dcc.fc.up.pt/~ltorgo/Regression/DataSets.html)  
**Please cite**:   

This data set is also obtained from the task of controlling the ailerons of a F16 aircraft, although the target variable and attributes are different from the ailerons domain. The target variable here is a variation instead of an absolute value, and there was some pre-selection of the attributes.";"Minimum: 0
Maximum: 1";RollRate: Minimum value: -10 Maximum value: 10;"The min and max values for the feature ""RollRate"" in the dataset are not mentioned.";0.0;1.0;-10.0;10.0;;;0.017974015824948713;0.002105;
120;curRoll;198;delta_elevators;numeric;-0.051;0.049;"**Author**: Rui Camacho (rcamacho@garfield.fe.up.pt)  
**Source**: [Regression datasets collection Luis Torgo](http://www.dcc.fc.up.pt/~ltorgo/Regression/DataSets.html)  
**Please cite**:   

This data set is also obtained from the task of controlling the ailerons of a F16 aircraft, although the target variable and attributes are different from the ailerons domain. The target variable here is a variation instead of an absolute value, and there was some pre-selection of the attributes.";"Minimum: -20
Maximum: 100";"Minimum: -180 degrees
Maximum: 180 degrees";"The range of values for the feature ""curRoll"" in the dataset is between the minimum and maximum values.";-20.0;100.0;-180.0;180.0;;;0.0008333333333333334;0.0002777777777777778;
121;diffClb;198;delta_elevators;numeric;-0.8;0.7;"**Author**: Rui Camacho (rcamacho@garfield.fe.up.pt)  
**Source**: [Regression datasets collection Luis Torgo](http://www.dcc.fc.up.pt/~ltorgo/Regression/DataSets.html)  
**Please cite**:   

This data set is also obtained from the task of controlling the ailerons of a F16 aircraft, although the target variable and attributes are different from the ailerons domain. The target variable here is a variation instead of an absolute value, and there was some pre-selection of the attributes.";"min: -10
max: 10";"Minimum: -1000
Maximum: 1000";"The range of values for the feature ""diffClb"" in the dataset is as follows:

Minimum: -0.009
Maximum: 0.019";-10.0;10.0;-1000.0;1000.0;-0.009000000000000001;0.019;0.075;0.00075;0.018666666666666668
122;diffDiffClb;198;delta_elevators;numeric;-0.03;0.02;"**Author**: Rui Camacho (rcamacho@garfield.fe.up.pt)  
**Source**: [Regression datasets collection Luis Torgo](http://www.dcc.fc.up.pt/~ltorgo/Regression/DataSets.html)  
**Please cite**:   

This data set is also obtained from the task of controlling the ailerons of a F16 aircraft, although the target variable and attributes are different from the ailerons domain. The target variable here is a variation instead of an absolute value, and there was some pre-selection of the attributes.";"Min: -10
Max: 10";"Minimum: -10
Maximum: 10";"The range of values for the feature ""diffDiffClb"" is from the minimum value to the maximum value found in the dataset.";-10.0;10.0;-10.0;10.0;;;0.0025;0.0025;
123;Se;198;delta_elevators;numeric;-0.013999999999999999;0.013000000000000001;"**Author**: Rui Camacho (rcamacho@garfield.fe.up.pt)  
**Source**: [Regression datasets collection Luis Torgo](http://www.dcc.fc.up.pt/~ltorgo/Regression/DataSets.html)  
**Please cite**:   

This data set is also obtained from the task of controlling the ailerons of a F16 aircraft, although the target variable and attributes are different from the ailerons domain. The target variable here is a variation instead of an absolute value, and there was some pre-selection of the attributes.";"Minimum: 0
Maximum: 100";Min: 0 Max: 100;"The range of values for the feature ""Se"" in the dataset is from the minimum value to the maximum value. Unfortunately, the actual minimum and maximum values are not provided in the dataset description.";0.0;100.0;0.0;100.0;;;0.00012998180254764335;0.00012998180254764335;
124;year;503;wind;numeric;61.0;78.0;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

wind   daily average wind speeds for 1961-1978 at 12 synoptic meteorological
stations in the Republic of Ireland (Haslett and raftery 1989).

These data were analyzed in detail in the following article:
Haslett, J. and Raftery, A. E. (1989). Space-time Modelling with
Long-memory Dependence: Assessing Ireland's Wind Power Resource
(with Discussion). Applied Statistics 38, 1-50.

Each line corresponds to one day of data in the following format:
year, month, day, average wind speed at each of the stations in the order given
in Fig.4 of Haslett and Raftery :
RPT, VAL, ROS, KIL, SHA, BIR, DUB, CLA, MUL, CLO, BEL, MAL

Fortan format : ( i2, 2i3, 12f6.2)

The data are in knots, not in m/s.

Permission granted for unlimited distribution.

Please report all anomalies to fraley@stat.washington.edu

Be aware that the dataset is 532494 bytes long (thats over half a
Megabyte).  Please be sure you want the data before you request it.


Information about the dataset
CLASSTYPE: numeric
CLASSINDEX: none specific";"min year: 1960 
max year: 2021";"Minimum: 1900
Maximum: 2018";"From the given dataset the range of values for the feature ""year"" is 1961 to 1978.";1960.0;2021.0;1900.0;2018.0;1961.0;1978.0;;;
125;month;503;wind;numeric;1.0;12.0;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

wind   daily average wind speeds for 1961-1978 at 12 synoptic meteorological
stations in the Republic of Ireland (Haslett and raftery 1989).

These data were analyzed in detail in the following article:
Haslett, J. and Raftery, A. E. (1989). Space-time Modelling with
Long-memory Dependence: Assessing Ireland's Wind Power Resource
(with Discussion). Applied Statistics 38, 1-50.

Each line corresponds to one day of data in the following format:
year, month, day, average wind speed at each of the stations in the order given
in Fig.4 of Haslett and Raftery :
RPT, VAL, ROS, KIL, SHA, BIR, DUB, CLA, MUL, CLO, BEL, MAL

Fortan format : ( i2, 2i3, 12f6.2)

The data are in knots, not in m/s.

Permission granted for unlimited distribution.

Please report all anomalies to fraley@stat.washington.edu

Be aware that the dataset is 532494 bytes long (thats over half a
Megabyte).  Please be sure you want the data before you request it.


Information about the dataset
CLASSTYPE: numeric
CLASSINDEX: none specific";"Minimum: 1
Maximum: 12";"Minimum: 1
Maximum: 12";"The range of values for the feature ""month"" in the given dataset is from 1 (January) to 12 (December).";1.0;12.0;1.0;12.0;1.0;12.0;1.0;1.0;1.0
126;day;503;wind;numeric;1.0;31.0;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

wind   daily average wind speeds for 1961-1978 at 12 synoptic meteorological
stations in the Republic of Ireland (Haslett and raftery 1989).

These data were analyzed in detail in the following article:
Haslett, J. and Raftery, A. E. (1989). Space-time Modelling with
Long-memory Dependence: Assessing Ireland's Wind Power Resource
(with Discussion). Applied Statistics 38, 1-50.

Each line corresponds to one day of data in the following format:
year, month, day, average wind speed at each of the stations in the order given
in Fig.4 of Haslett and Raftery :
RPT, VAL, ROS, KIL, SHA, BIR, DUB, CLA, MUL, CLO, BEL, MAL

Fortan format : ( i2, 2i3, 12f6.2)

The data are in knots, not in m/s.

Permission granted for unlimited distribution.

Please report all anomalies to fraley@stat.washington.edu

Be aware that the dataset is 532494 bytes long (thats over half a
Megabyte).  Please be sure you want the data before you request it.


Information about the dataset
CLASSTYPE: numeric
CLASSINDEX: none specific";min: 1 max: 31;"Minimum: 1
Maximum: 31";"Based on the dataset description, the range of values for the feature ""day"" can be determined by finding the minimum and maximum values in the dataset. However, since the specific values are not mentioned in the description, we are unable to provide the actual range for the ""day"" feature.";1.0;31.0;1.0;31.0;;;1.0;1.0;
127;RPT;503;wind;numeric;0.67;35.8;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

wind   daily average wind speeds for 1961-1978 at 12 synoptic meteorological
stations in the Republic of Ireland (Haslett and raftery 1989).

These data were analyzed in detail in the following article:
Haslett, J. and Raftery, A. E. (1989). Space-time Modelling with
Long-memory Dependence: Assessing Ireland's Wind Power Resource
(with Discussion). Applied Statistics 38, 1-50.

Each line corresponds to one day of data in the following format:
year, month, day, average wind speed at each of the stations in the order given
in Fig.4 of Haslett and Raftery :
RPT, VAL, ROS, KIL, SHA, BIR, DUB, CLA, MUL, CLO, BEL, MAL

Fortan format : ( i2, 2i3, 12f6.2)

The data are in knots, not in m/s.

Permission granted for unlimited distribution.

Please report all anomalies to fraley@stat.washington.edu

Be aware that the dataset is 532494 bytes long (thats over half a
Megabyte).  Please be sure you want the data before you request it.


Information about the dataset
CLASSTYPE: numeric
CLASSINDEX: none specific";"Minimum: 0.0
Maximum: 35.8";"Minimum: 0
Maximum: 35";The minimum and maximum values for the feature RPT are not provided in the dataset description.;0.0;35.8;0.0;35.0;;;0.9812849162011172;0.9589385474860336;
128;VAL;503;wind;numeric;0.21;33.37;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

wind   daily average wind speeds for 1961-1978 at 12 synoptic meteorological
stations in the Republic of Ireland (Haslett and raftery 1989).

These data were analyzed in detail in the following article:
Haslett, J. and Raftery, A. E. (1989). Space-time Modelling with
Long-memory Dependence: Assessing Ireland's Wind Power Resource
(with Discussion). Applied Statistics 38, 1-50.

Each line corresponds to one day of data in the following format:
year, month, day, average wind speed at each of the stations in the order given
in Fig.4 of Haslett and Raftery :
RPT, VAL, ROS, KIL, SHA, BIR, DUB, CLA, MUL, CLO, BEL, MAL

Fortan format : ( i2, 2i3, 12f6.2)

The data are in knots, not in m/s.

Permission granted for unlimited distribution.

Please report all anomalies to fraley@stat.washington.edu

Be aware that the dataset is 532494 bytes long (thats over half a
Megabyte).  Please be sure you want the data before you request it.


Information about the dataset
CLASSTYPE: numeric
CLASSINDEX: none specific";"I'm sorry, but without any information about the dataset or the feature, I cannot provide a meaningful minimum and maximum range for the feature ""VAL"". Can you please provide more details or any relevant information?";"min(VAL) = 0.0
max(VAL) = 35.8";"The range of values for the feature ""VAL"" in the dataset is as follows:

Min: 0.13
Max: 35.80";;;0.0;35.8;0.13;35.8;;0.9262569832402234;0.9296327446033081
129;ROS;503;wind;numeric;1.5;33.84;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

wind   daily average wind speeds for 1961-1978 at 12 synoptic meteorological
stations in the Republic of Ireland (Haslett and raftery 1989).

These data were analyzed in detail in the following article:
Haslett, J. and Raftery, A. E. (1989). Space-time Modelling with
Long-memory Dependence: Assessing Ireland's Wind Power Resource
(with Discussion). Applied Statistics 38, 1-50.

Each line corresponds to one day of data in the following format:
year, month, day, average wind speed at each of the stations in the order given
in Fig.4 of Haslett and Raftery :
RPT, VAL, ROS, KIL, SHA, BIR, DUB, CLA, MUL, CLO, BEL, MAL

Fortan format : ( i2, 2i3, 12f6.2)

The data are in knots, not in m/s.

Permission granted for unlimited distribution.

Please report all anomalies to fraley@stat.washington.edu

Be aware that the dataset is 532494 bytes long (thats over half a
Megabyte).  Please be sure you want the data before you request it.


Information about the dataset
CLASSTYPE: numeric
CLASSINDEX: none specific";"Sorry, but as an AI language model, I cannot access or analyze specific datasets. Therefore, I cannot provide the minimum and maximum values for the feature ""ROS"" without knowing the dataset in question.";"Minimum: 0
Maximum: 1000";The range of values for the feature ROS in the dataset is from the minimum value to the maximum value. Since we don't have access to the dataset, we cannot provide the exact range values.;;;0.0;1000.0;;;;0.03234;
130;KIL;503;wind;numeric;0.0;28.46;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

wind   daily average wind speeds for 1961-1978 at 12 synoptic meteorological
stations in the Republic of Ireland (Haslett and raftery 1989).

These data were analyzed in detail in the following article:
Haslett, J. and Raftery, A. E. (1989). Space-time Modelling with
Long-memory Dependence: Assessing Ireland's Wind Power Resource
(with Discussion). Applied Statistics 38, 1-50.

Each line corresponds to one day of data in the following format:
year, month, day, average wind speed at each of the stations in the order given
in Fig.4 of Haslett and Raftery :
RPT, VAL, ROS, KIL, SHA, BIR, DUB, CLA, MUL, CLO, BEL, MAL

Fortan format : ( i2, 2i3, 12f6.2)

The data are in knots, not in m/s.

Permission granted for unlimited distribution.

Please report all anomalies to fraley@stat.washington.edu

Be aware that the dataset is 532494 bytes long (thats over half a
Megabyte).  Please be sure you want the data before you request it.


Information about the dataset
CLASSTYPE: numeric
CLASSINDEX: none specific";"The minimum value for the feature ""KIL"" is 0 and the maximum value is 1000.";"Sorry, I cannot provide a range of values for the feature ""KIL"" without any information or context about the dataset.";The minimum and maximum values for the feature KIL in the dataset are not provided in the given information. To find the range of values for the KIL feature, you would need to access the actual dataset.;0.0;1000.0;;;;;0.02846;;
131;SHA;503;wind;numeric;0.13;37.54;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

wind   daily average wind speeds for 1961-1978 at 12 synoptic meteorological
stations in the Republic of Ireland (Haslett and raftery 1989).

These data were analyzed in detail in the following article:
Haslett, J. and Raftery, A. E. (1989). Space-time Modelling with
Long-memory Dependence: Assessing Ireland's Wind Power Resource
(with Discussion). Applied Statistics 38, 1-50.

Each line corresponds to one day of data in the following format:
year, month, day, average wind speed at each of the stations in the order given
in Fig.4 of Haslett and Raftery :
RPT, VAL, ROS, KIL, SHA, BIR, DUB, CLA, MUL, CLO, BEL, MAL

Fortan format : ( i2, 2i3, 12f6.2)

The data are in knots, not in m/s.

Permission granted for unlimited distribution.

Please report all anomalies to fraley@stat.washington.edu

Be aware that the dataset is 532494 bytes long (thats over half a
Megabyte).  Please be sure you want the data before you request it.


Information about the dataset
CLASSTYPE: numeric
CLASSINDEX: none specific";"Minimum: 32
Maximum: 256";"Minimum: 0
Maximum: 45";"The minimum and maximum values for the feature ""SHA"" are not provided in the dataset description.";32.0;256.0;0.0;45.0;;;0.02165161996326259;0.8313333333333333;
132;BIR;503;wind;numeric;0.0;26.16;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

wind   daily average wind speeds for 1961-1978 at 12 synoptic meteorological
stations in the Republic of Ireland (Haslett and raftery 1989).

These data were analyzed in detail in the following article:
Haslett, J. and Raftery, A. E. (1989). Space-time Modelling with
Long-memory Dependence: Assessing Ireland's Wind Power Resource
(with Discussion). Applied Statistics 38, 1-50.

Each line corresponds to one day of data in the following format:
year, month, day, average wind speed at each of the stations in the order given
in Fig.4 of Haslett and Raftery :
RPT, VAL, ROS, KIL, SHA, BIR, DUB, CLA, MUL, CLO, BEL, MAL

Fortan format : ( i2, 2i3, 12f6.2)

The data are in knots, not in m/s.

Permission granted for unlimited distribution.

Please report all anomalies to fraley@stat.washington.edu

Be aware that the dataset is 532494 bytes long (thats over half a
Megabyte).  Please be sure you want the data before you request it.


Information about the dataset
CLASSTYPE: numeric
CLASSINDEX: none specific";"Minimum: 1
Maximum: 100";"Minimum: 0.0
Maximum: 86.0";The range of values for the feature BIR is from 0.13 to 20.79.;1.0;100.0;0.0;86.0;0.13;20.79;0.2516;0.3041860465116279;0.7897553516819572
133;DUB;503;wind;numeric;0.0;30.37;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

wind   daily average wind speeds for 1961-1978 at 12 synoptic meteorological
stations in the Republic of Ireland (Haslett and raftery 1989).

These data were analyzed in detail in the following article:
Haslett, J. and Raftery, A. E. (1989). Space-time Modelling with
Long-memory Dependence: Assessing Ireland's Wind Power Resource
(with Discussion). Applied Statistics 38, 1-50.

Each line corresponds to one day of data in the following format:
year, month, day, average wind speed at each of the stations in the order given
in Fig.4 of Haslett and Raftery :
RPT, VAL, ROS, KIL, SHA, BIR, DUB, CLA, MUL, CLO, BEL, MAL

Fortan format : ( i2, 2i3, 12f6.2)

The data are in knots, not in m/s.

Permission granted for unlimited distribution.

Please report all anomalies to fraley@stat.washington.edu

Be aware that the dataset is 532494 bytes long (thats over half a
Megabyte).  Please be sure you want the data before you request it.


Information about the dataset
CLASSTYPE: numeric
CLASSINDEX: none specific";"Minimum: 6
Maximum: 38";"Minimum: 0.17
Maximum: 31.08";The minimum and maximum values for the feature DUB are not provided in the dataset description.;6.0;38.0;0.17;31.08;;;0.6413157894736843;0.9716859716859717;
134;CLA;503;wind;numeric;0.0;31.08;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

wind   daily average wind speeds for 1961-1978 at 12 synoptic meteorological
stations in the Republic of Ireland (Haslett and raftery 1989).

These data were analyzed in detail in the following article:
Haslett, J. and Raftery, A. E. (1989). Space-time Modelling with
Long-memory Dependence: Assessing Ireland's Wind Power Resource
(with Discussion). Applied Statistics 38, 1-50.

Each line corresponds to one day of data in the following format:
year, month, day, average wind speed at each of the stations in the order given
in Fig.4 of Haslett and Raftery :
RPT, VAL, ROS, KIL, SHA, BIR, DUB, CLA, MUL, CLO, BEL, MAL

Fortan format : ( i2, 2i3, 12f6.2)

The data are in knots, not in m/s.

Permission granted for unlimited distribution.

Please report all anomalies to fraley@stat.washington.edu

Be aware that the dataset is 532494 bytes long (thats over half a
Megabyte).  Please be sure you want the data before you request it.


Information about the dataset
CLASSTYPE: numeric
CLASSINDEX: none specific";Minimum: 0.1 Maximum: 5.0;Minimum: 0.1 Maximum: 5.0;"Min value for feature CLA: 0.13
Max value for feature CLA: 3.38";0.1;5.0;0.1;5.0;0.13;3.38;0.15765765765765768;0.15765765765765768;0.10456885456885458
135;MUL;503;wind;numeric;0.0;25.88;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

wind   daily average wind speeds for 1961-1978 at 12 synoptic meteorological
stations in the Republic of Ireland (Haslett and raftery 1989).

These data were analyzed in detail in the following article:
Haslett, J. and Raftery, A. E. (1989). Space-time Modelling with
Long-memory Dependence: Assessing Ireland's Wind Power Resource
(with Discussion). Applied Statistics 38, 1-50.

Each line corresponds to one day of data in the following format:
year, month, day, average wind speed at each of the stations in the order given
in Fig.4 of Haslett and Raftery :
RPT, VAL, ROS, KIL, SHA, BIR, DUB, CLA, MUL, CLO, BEL, MAL

Fortan format : ( i2, 2i3, 12f6.2)

The data are in knots, not in m/s.

Permission granted for unlimited distribution.

Please report all anomalies to fraley@stat.washington.edu

Be aware that the dataset is 532494 bytes long (thats over half a
Megabyte).  Please be sure you want the data before you request it.


Information about the dataset
CLASSTYPE: numeric
CLASSINDEX: none specific";"Minimum: 0 
Maximum: 100";"Minimum: 0
Maximum: 35";"For the feature MUL, the range of values in the dataset is as follows:

Minimum: Unknown
Maximum: Unknown";0.0;100.0;0.0;35.0;;;0.2588;0.7394285714285714;
136;CLO;503;wind;numeric;0.04;28.21;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

wind   daily average wind speeds for 1961-1978 at 12 synoptic meteorological
stations in the Republic of Ireland (Haslett and raftery 1989).

These data were analyzed in detail in the following article:
Haslett, J. and Raftery, A. E. (1989). Space-time Modelling with
Long-memory Dependence: Assessing Ireland's Wind Power Resource
(with Discussion). Applied Statistics 38, 1-50.

Each line corresponds to one day of data in the following format:
year, month, day, average wind speed at each of the stations in the order given
in Fig.4 of Haslett and Raftery :
RPT, VAL, ROS, KIL, SHA, BIR, DUB, CLA, MUL, CLO, BEL, MAL

Fortan format : ( i2, 2i3, 12f6.2)

The data are in knots, not in m/s.

Permission granted for unlimited distribution.

Please report all anomalies to fraley@stat.washington.edu

Be aware that the dataset is 532494 bytes long (thats over half a
Megabyte).  Please be sure you want the data before you request it.


Information about the dataset
CLASSTYPE: numeric
CLASSINDEX: none specific";"Minimum: 0.0
Maximum: 10.0";"Minimum: 0. Double-check with dataset for accurate information.
Maximum: 100. Double-check with dataset for accurate information.";The range of values for the feature CLO is 0.13 (min) to 14.88 (max).;0.0;10.0;0.0;100.0;0.13;14.88;0.35306628855015953;0.2817;0.5236066737664181
137;BEL;503;wind;numeric;0.13;42.38;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

wind   daily average wind speeds for 1961-1978 at 12 synoptic meteorological
stations in the Republic of Ireland (Haslett and raftery 1989).

These data were analyzed in detail in the following article:
Haslett, J. and Raftery, A. E. (1989). Space-time Modelling with
Long-memory Dependence: Assessing Ireland's Wind Power Resource
(with Discussion). Applied Statistics 38, 1-50.

Each line corresponds to one day of data in the following format:
year, month, day, average wind speed at each of the stations in the order given
in Fig.4 of Haslett and Raftery :
RPT, VAL, ROS, KIL, SHA, BIR, DUB, CLA, MUL, CLO, BEL, MAL

Fortan format : ( i2, 2i3, 12f6.2)

The data are in knots, not in m/s.

Permission granted for unlimited distribution.

Please report all anomalies to fraley@stat.washington.edu

Be aware that the dataset is 532494 bytes long (thats over half a
Megabyte).  Please be sure you want the data before you request it.


Information about the dataset
CLASSTYPE: numeric
CLASSINDEX: none specific";"Minimum: Unknown
Maximum: Unknown";"Minimum: 0.0
Maximum: 30.4";The range of values for the feature BEL is the minimum and maximum values found in the dataset. Unfortunately, the dataset is not provided, so I cannot determine the actual range for the feature BEL.;;;0.0;30.4;;;;0.7142520056630486;
138;MAL;503;wind;numeric;0.67;42.54;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

wind   daily average wind speeds for 1961-1978 at 12 synoptic meteorological
stations in the Republic of Ireland (Haslett and raftery 1989).

These data were analyzed in detail in the following article:
Haslett, J. and Raftery, A. E. (1989). Space-time Modelling with
Long-memory Dependence: Assessing Ireland's Wind Power Resource
(with Discussion). Applied Statistics 38, 1-50.

Each line corresponds to one day of data in the following format:
year, month, day, average wind speed at each of the stations in the order given
in Fig.4 of Haslett and Raftery :
RPT, VAL, ROS, KIL, SHA, BIR, DUB, CLA, MUL, CLO, BEL, MAL

Fortan format : ( i2, 2i3, 12f6.2)

The data are in knots, not in m/s.

Permission granted for unlimited distribution.

Please report all anomalies to fraley@stat.washington.edu

Be aware that the dataset is 532494 bytes long (thats over half a
Megabyte).  Please be sure you want the data before you request it.


Information about the dataset
CLASSTYPE: numeric
CLASSINDEX: none specific";"Sorry, but I cannot provide a range of values for the feature ""MAL"" without any information or context about the dataset. Can you provide more details or specify the type of data in the dataset?";min: 0.0 max: 35.8;min: 0.67000 max: 42.38000;;;0.0;35.8;0.67;42.38;;0.8258110014104372;0.9961786481967997
139;error;675;visualizing_slope;numeric;3.104167;19.4375;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

This S dump contains 22 data sets from the
book Visualizing Data published by
Hobart Press (books@hobart.com).
The dump was created by data.dump()
and can be read back into S by data.restore().
The name of each S data set is the name of
the data set used in the book. To find the
description of the data set in the book look
under the entry - data, name - in the index.
For example, one data set is barley.
To find the description of barley, look
in the index under the entry - data, barley.

File: ../data/visualizing/slope.csv


Information about the dataset
CLASSTYPE: numeric
CLASSINDEX: none specific";"Min: 0
Max: 100";"Min: 0
Max: 100";"Based on the given information, the minimum and maximum values for the feature ""error"" are not specified. Therefore, it is not possible to set a range of values for the feature ""error"" without further information.";0.0;100.0;0.0;100.0;;;0.16333333;0.16333333;
140;percent;675;visualizing_slope;numeric;50.0;100.0;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

This S dump contains 22 data sets from the
book Visualizing Data published by
Hobart Press (books@hobart.com).
The dump was created by data.dump()
and can be read back into S by data.restore().
The name of each S data set is the name of
the data set used in the book. To find the
description of the data set in the book look
under the entry - data, name - in the index.
For example, one data set is barley.
To find the description of barley, look
in the index under the entry - data, barley.

File: ../data/visualizing/slope.csv


Information about the dataset
CLASSTYPE: numeric
CLASSINDEX: none specific";"Minimum: 0
Maximum: 100";"Minimum: 0
Maximum: 100";"The range of values for the feature ""percent"" in the dataset is not provided.";0.0;100.0;0.0;100.0;;;0.5;0.5;
141;distance;675;visualizing_slope;numeric;0.264824;37.405229999999996;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

This S dump contains 22 data sets from the
book Visualizing Data published by
Hobart Press (books@hobart.com).
The dump was created by data.dump()
and can be read back into S by data.restore().
The name of each S data set is the name of
the data set used in the book. To find the
description of the data set in the book look
under the entry - data, name - in the index.
For example, one data set is barley.
To find the description of barley, look
in the index under the entry - data, barley.

File: ../data/visualizing/slope.csv


Information about the dataset
CLASSTYPE: numeric
CLASSINDEX: none specific";"Minimum: 0
Maximum: 10000";"Minimum: 0
Maximum: Infinity";"Based on the limited information provided, it is not possible to determine the range of values for the feature ""distance.""";0.0;10000.0;0.5;;;;0.0037140406;;
142;resolution;675;visualizing_slope;numeric;0.0;19.47035;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

This S dump contains 22 data sets from the
book Visualizing Data published by
Hobart Press (books@hobart.com).
The dump was created by data.dump()
and can be read back into S by data.restore().
The name of each S data set is the name of
the data set used in the book. To find the
description of the data set in the book look
under the entry - data, name - in the index.
For example, one data set is barley.
To find the description of barley, look
in the index under the entry - data, barley.

File: ../data/visualizing/slope.csv


Information about the dataset
CLASSTYPE: numeric
CLASSINDEX: none specific";"Minimum: 320x240
Maximum: 4096x2160";Resolution: [minimum, maximum];"Based on the given dataset description, it is not possible to determine the range of values for the feature ""resolution"" as there is no relevant information provided about it.";;;;;;;;;
143;id;1046;mozilla4;numeric;1.0;4089.0;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
This is a PROMISE Software Engineering Repository data set made publicly
available in order to encourage repeatable, verifiable, refutable, and/or
improvable predictive models of software engineering.

If you publish material based on PROMISE data sets then, please
follow the acknowledgment guidelines posted on the PROMISE repository
web page http://promisedata.org/repository .
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
(c) 2007  A. Gunes Koru
Contact: gkoru AT umbc DOT edu Phone: +1 (410) 455 8843
This data set is distributed under the
Creative Commons Attribution-Share Alike 3.0 License
http://creativecommons.org/licenses/by-sa/3.0/

You are free:

* to Share -- copy, distribute and transmit the work
* to Remix -- to adapt the work

Under the following conditions:

Attribution. You must attribute the work in the manner specified by
the author or licensor (but not in any way that suggests that they endorse
you or your use of the work).

Share Alike. If you alter, transform, or build upon this work, you
may distribute the resulting work only under the same, similar or a
compatible license.

* For any reuse or distribution, you must make clear to others the
license terms of this work.
* Any of the above conditions can be waived if you get permission from
the copyright holder.
* Apart from the remix rights granted under this license, nothing in
this license impairs or restricts the author's moral rights.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


1. Title: Recurrent event (defect fix) and size data for Mozilla Classes
This one includes a binary attribute (event) to show defect fix.
The data is at the ""observation"" level. Each modification made to
a C++ class was entered as an observation. A newly added class
created an observation. The observation period was between
May 29, 2002 and Feb 22, 2006.

2. Sources
(a) Creator: A. Gunes Koru
(b) Date: February 23, 2007
(c) Contact: gkoru AT umbc DOT edu Phone: +1 (410) 455 8843

3. Donor: A. Gunes Koru

4. Past Usage: This data set was used for:

A. Gunes Koru, Dongsong Zhang, and Hongfang Liu, ""Modeling the
Effect of Size on Defect Proneness for Open-Source Software"",
Predictive Models in Software Engineering Workshop, PROMISE 2007,
May 20th 2007, Minneapolis, Minnesota, US.

Abstract:
Quality is becoming increasingly important with the continuous
adoption of open-source software.  Previous research has found that
there is generally a positive relationship between module size and
defect proneness. Therefore, in open-source software development, it
is important to monitor module size and understand its impact on
defect proneness. However, traditional approaches to quality
modeling, which measure specific system snapshots and obtain future
defect counts, are not well suited because open-source modules
usually evolve and their size changes over time. In this study, we
used Cox proportional hazards modeling with recurrent events to
study the effect of class size on defect-proneness in the Mozilla
product. We found that the effect of size was significant, and we
quantified this effect on defect proneness.

The full paper can be downloaded from A. Gunes Koru's Website
http://umbc.edu/~gkoru
by following the Publications link or from the Web site of PROMISE 2007.

5. Features:

This data set is used to create a conditional Cox Proportional
Hazards Model

id: A numeric identification assigned to each separate C++ class
(Note that the id's do not increment from the first to the last
data row)

start: A time infinitesimally greater than the time of the modification
that created this observation (practically, modification time). When a
class is introduced to a system, a new observation is entered with start=0

end: Either the time of the next modification, or the end of the
observation period, or the time of deletion, whichever comes first.

event: event is set to 1 if a defect fix takes place
at the time represented by 'end', or 0 otherwise.  A class deletion
is handled easily by entering a final observation whose event is set
to 1 if the class is deleted for corrective maintenance, or 0 otherwise.

size: It is a time-dependent covariate and its column carries the
number of source Lines of Code of the C++ classes
at time 'start'. Blank and comment lines are not counted.

state: Initially set to 0, and it becomes 1 after the class
experiences an event, and remains at 1 thereafter.";"Minimum: 0.1
Maximum: 10.0";"min(id): 1
max(id): 1000";"The range of values for the feature ""id"" in this dataset can be obtained by finding the minimum and maximum values. However, without the actual dataset provided, it is not possible to determine the specific values.";0.1;10.0;1.0;1000.0;;;0.0022010809753234364;0.24437377690802348;
144;start;1046;mozilla4;numeric;0.0;1952359.0;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
This is a PROMISE Software Engineering Repository data set made publicly
available in order to encourage repeatable, verifiable, refutable, and/or
improvable predictive models of software engineering.

If you publish material based on PROMISE data sets then, please
follow the acknowledgment guidelines posted on the PROMISE repository
web page http://promisedata.org/repository .
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
(c) 2007  A. Gunes Koru
Contact: gkoru AT umbc DOT edu Phone: +1 (410) 455 8843
This data set is distributed under the
Creative Commons Attribution-Share Alike 3.0 License
http://creativecommons.org/licenses/by-sa/3.0/

You are free:

* to Share -- copy, distribute and transmit the work
* to Remix -- to adapt the work

Under the following conditions:

Attribution. You must attribute the work in the manner specified by
the author or licensor (but not in any way that suggests that they endorse
you or your use of the work).

Share Alike. If you alter, transform, or build upon this work, you
may distribute the resulting work only under the same, similar or a
compatible license.

* For any reuse or distribution, you must make clear to others the
license terms of this work.
* Any of the above conditions can be waived if you get permission from
the copyright holder.
* Apart from the remix rights granted under this license, nothing in
this license impairs or restricts the author's moral rights.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


1. Title: Recurrent event (defect fix) and size data for Mozilla Classes
This one includes a binary attribute (event) to show defect fix.
The data is at the ""observation"" level. Each modification made to
a C++ class was entered as an observation. A newly added class
created an observation. The observation period was between
May 29, 2002 and Feb 22, 2006.

2. Sources
(a) Creator: A. Gunes Koru
(b) Date: February 23, 2007
(c) Contact: gkoru AT umbc DOT edu Phone: +1 (410) 455 8843

3. Donor: A. Gunes Koru

4. Past Usage: This data set was used for:

A. Gunes Koru, Dongsong Zhang, and Hongfang Liu, ""Modeling the
Effect of Size on Defect Proneness for Open-Source Software"",
Predictive Models in Software Engineering Workshop, PROMISE 2007,
May 20th 2007, Minneapolis, Minnesota, US.

Abstract:
Quality is becoming increasingly important with the continuous
adoption of open-source software.  Previous research has found that
there is generally a positive relationship between module size and
defect proneness. Therefore, in open-source software development, it
is important to monitor module size and understand its impact on
defect proneness. However, traditional approaches to quality
modeling, which measure specific system snapshots and obtain future
defect counts, are not well suited because open-source modules
usually evolve and their size changes over time. In this study, we
used Cox proportional hazards modeling with recurrent events to
study the effect of class size on defect-proneness in the Mozilla
product. We found that the effect of size was significant, and we
quantified this effect on defect proneness.

The full paper can be downloaded from A. Gunes Koru's Website
http://umbc.edu/~gkoru
by following the Publications link or from the Web site of PROMISE 2007.

5. Features:

This data set is used to create a conditional Cox Proportional
Hazards Model

id: A numeric identification assigned to each separate C++ class
(Note that the id's do not increment from the first to the last
data row)

start: A time infinitesimally greater than the time of the modification
that created this observation (practically, modification time). When a
class is introduced to a system, a new observation is entered with start=0

end: Either the time of the next modification, or the end of the
observation period, or the time of deletion, whichever comes first.

event: event is set to 1 if a defect fix takes place
at the time represented by 'end', or 0 otherwise.  A class deletion
is handled easily by entering a final observation whose event is set
to 1 if the class is deleted for corrective maintenance, or 0 otherwise.

size: It is a time-dependent covariate and its column carries the
number of source Lines of Code of the C++ classes
at time 'start'. Blank and comment lines are not counted.

state: Initially set to 0, and it becomes 1 after the class
experiences an event, and remains at 1 thereafter.";"Minimum and maximum values for the feature ""start"" cannot be determined without specific data context.";"Minimum: 0
Maximum: 1000";"The range of values for the feature ""start"" is not provided in the dataset description.";;;0.0;1000.0;;;;0.0005122008810879556;
145;end;1046;mozilla4;numeric;1.0;1965873.0;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
This is a PROMISE Software Engineering Repository data set made publicly
available in order to encourage repeatable, verifiable, refutable, and/or
improvable predictive models of software engineering.

If you publish material based on PROMISE data sets then, please
follow the acknowledgment guidelines posted on the PROMISE repository
web page http://promisedata.org/repository .
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
(c) 2007  A. Gunes Koru
Contact: gkoru AT umbc DOT edu Phone: +1 (410) 455 8843
This data set is distributed under the
Creative Commons Attribution-Share Alike 3.0 License
http://creativecommons.org/licenses/by-sa/3.0/

You are free:

* to Share -- copy, distribute and transmit the work
* to Remix -- to adapt the work

Under the following conditions:

Attribution. You must attribute the work in the manner specified by
the author or licensor (but not in any way that suggests that they endorse
you or your use of the work).

Share Alike. If you alter, transform, or build upon this work, you
may distribute the resulting work only under the same, similar or a
compatible license.

* For any reuse or distribution, you must make clear to others the
license terms of this work.
* Any of the above conditions can be waived if you get permission from
the copyright holder.
* Apart from the remix rights granted under this license, nothing in
this license impairs or restricts the author's moral rights.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


1. Title: Recurrent event (defect fix) and size data for Mozilla Classes
This one includes a binary attribute (event) to show defect fix.
The data is at the ""observation"" level. Each modification made to
a C++ class was entered as an observation. A newly added class
created an observation. The observation period was between
May 29, 2002 and Feb 22, 2006.

2. Sources
(a) Creator: A. Gunes Koru
(b) Date: February 23, 2007
(c) Contact: gkoru AT umbc DOT edu Phone: +1 (410) 455 8843

3. Donor: A. Gunes Koru

4. Past Usage: This data set was used for:

A. Gunes Koru, Dongsong Zhang, and Hongfang Liu, ""Modeling the
Effect of Size on Defect Proneness for Open-Source Software"",
Predictive Models in Software Engineering Workshop, PROMISE 2007,
May 20th 2007, Minneapolis, Minnesota, US.

Abstract:
Quality is becoming increasingly important with the continuous
adoption of open-source software.  Previous research has found that
there is generally a positive relationship between module size and
defect proneness. Therefore, in open-source software development, it
is important to monitor module size and understand its impact on
defect proneness. However, traditional approaches to quality
modeling, which measure specific system snapshots and obtain future
defect counts, are not well suited because open-source modules
usually evolve and their size changes over time. In this study, we
used Cox proportional hazards modeling with recurrent events to
study the effect of class size on defect-proneness in the Mozilla
product. We found that the effect of size was significant, and we
quantified this effect on defect proneness.

The full paper can be downloaded from A. Gunes Koru's Website
http://umbc.edu/~gkoru
by following the Publications link or from the Web site of PROMISE 2007.

5. Features:

This data set is used to create a conditional Cox Proportional
Hazards Model

id: A numeric identification assigned to each separate C++ class
(Note that the id's do not increment from the first to the last
data row)

start: A time infinitesimally greater than the time of the modification
that created this observation (practically, modification time). When a
class is introduced to a system, a new observation is entered with start=0

end: Either the time of the next modification, or the end of the
observation period, or the time of deletion, whichever comes first.

event: event is set to 1 if a defect fix takes place
at the time represented by 'end', or 0 otherwise.  A class deletion
is handled easily by entering a final observation whose event is set
to 1 if the class is deleted for corrective maintenance, or 0 otherwise.

size: It is a time-dependent covariate and its column carries the
number of source Lines of Code of the C++ classes
at time 'start'. Blank and comment lines are not counted.

state: Initially set to 0, and it becomes 1 after the class
experiences an event, and remains at 1 thereafter.";"Minimum: 0
Maximum: 100";"minimum: 0
maximum: infinity";end: min = 0 max = unspecified;0.0;100.0;0.5;;;;5.035930601824228e-05;;
146;event;1046;mozilla4;numeric;0.0;1.0;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
This is a PROMISE Software Engineering Repository data set made publicly
available in order to encourage repeatable, verifiable, refutable, and/or
improvable predictive models of software engineering.

If you publish material based on PROMISE data sets then, please
follow the acknowledgment guidelines posted on the PROMISE repository
web page http://promisedata.org/repository .
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
(c) 2007  A. Gunes Koru
Contact: gkoru AT umbc DOT edu Phone: +1 (410) 455 8843
This data set is distributed under the
Creative Commons Attribution-Share Alike 3.0 License
http://creativecommons.org/licenses/by-sa/3.0/

You are free:

* to Share -- copy, distribute and transmit the work
* to Remix -- to adapt the work

Under the following conditions:

Attribution. You must attribute the work in the manner specified by
the author or licensor (but not in any way that suggests that they endorse
you or your use of the work).

Share Alike. If you alter, transform, or build upon this work, you
may distribute the resulting work only under the same, similar or a
compatible license.

* For any reuse or distribution, you must make clear to others the
license terms of this work.
* Any of the above conditions can be waived if you get permission from
the copyright holder.
* Apart from the remix rights granted under this license, nothing in
this license impairs or restricts the author's moral rights.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


1. Title: Recurrent event (defect fix) and size data for Mozilla Classes
This one includes a binary attribute (event) to show defect fix.
The data is at the ""observation"" level. Each modification made to
a C++ class was entered as an observation. A newly added class
created an observation. The observation period was between
May 29, 2002 and Feb 22, 2006.

2. Sources
(a) Creator: A. Gunes Koru
(b) Date: February 23, 2007
(c) Contact: gkoru AT umbc DOT edu Phone: +1 (410) 455 8843

3. Donor: A. Gunes Koru

4. Past Usage: This data set was used for:

A. Gunes Koru, Dongsong Zhang, and Hongfang Liu, ""Modeling the
Effect of Size on Defect Proneness for Open-Source Software"",
Predictive Models in Software Engineering Workshop, PROMISE 2007,
May 20th 2007, Minneapolis, Minnesota, US.

Abstract:
Quality is becoming increasingly important with the continuous
adoption of open-source software.  Previous research has found that
there is generally a positive relationship between module size and
defect proneness. Therefore, in open-source software development, it
is important to monitor module size and understand its impact on
defect proneness. However, traditional approaches to quality
modeling, which measure specific system snapshots and obtain future
defect counts, are not well suited because open-source modules
usually evolve and their size changes over time. In this study, we
used Cox proportional hazards modeling with recurrent events to
study the effect of class size on defect-proneness in the Mozilla
product. We found that the effect of size was significant, and we
quantified this effect on defect proneness.

The full paper can be downloaded from A. Gunes Koru's Website
http://umbc.edu/~gkoru
by following the Publications link or from the Web site of PROMISE 2007.

5. Features:

This data set is used to create a conditional Cox Proportional
Hazards Model

id: A numeric identification assigned to each separate C++ class
(Note that the id's do not increment from the first to the last
data row)

start: A time infinitesimally greater than the time of the modification
that created this observation (practically, modification time). When a
class is introduced to a system, a new observation is entered with start=0

end: Either the time of the next modification, or the end of the
observation period, or the time of deletion, whichever comes first.

event: event is set to 1 if a defect fix takes place
at the time represented by 'end', or 0 otherwise.  A class deletion
is handled easily by entering a final observation whose event is set
to 1 if the class is deleted for corrective maintenance, or 0 otherwise.

size: It is a time-dependent covariate and its column carries the
number of source Lines of Code of the C++ classes
at time 'start'. Blank and comment lines are not counted.

state: Initially set to 0, and it becomes 1 after the class
experiences an event, and remains at 1 thereafter.";"The minimum value for the feature ""event"" is unknown. The maximum value for the feature ""event"" is also unknown.";"Minimum: 0
Maximum: 1";"id: (min max)

start: (min max)

end: (min max)

event: (0 1)

size: (min max)";;;0.0;1.0;0.0;1.0;;1.0;1.0
147;size;1046;mozilla4;numeric;1.0;12363.0;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
This is a PROMISE Software Engineering Repository data set made publicly
available in order to encourage repeatable, verifiable, refutable, and/or
improvable predictive models of software engineering.

If you publish material based on PROMISE data sets then, please
follow the acknowledgment guidelines posted on the PROMISE repository
web page http://promisedata.org/repository .
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
(c) 2007  A. Gunes Koru
Contact: gkoru AT umbc DOT edu Phone: +1 (410) 455 8843
This data set is distributed under the
Creative Commons Attribution-Share Alike 3.0 License
http://creativecommons.org/licenses/by-sa/3.0/

You are free:

* to Share -- copy, distribute and transmit the work
* to Remix -- to adapt the work

Under the following conditions:

Attribution. You must attribute the work in the manner specified by
the author or licensor (but not in any way that suggests that they endorse
you or your use of the work).

Share Alike. If you alter, transform, or build upon this work, you
may distribute the resulting work only under the same, similar or a
compatible license.

* For any reuse or distribution, you must make clear to others the
license terms of this work.
* Any of the above conditions can be waived if you get permission from
the copyright holder.
* Apart from the remix rights granted under this license, nothing in
this license impairs or restricts the author's moral rights.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


1. Title: Recurrent event (defect fix) and size data for Mozilla Classes
This one includes a binary attribute (event) to show defect fix.
The data is at the ""observation"" level. Each modification made to
a C++ class was entered as an observation. A newly added class
created an observation. The observation period was between
May 29, 2002 and Feb 22, 2006.

2. Sources
(a) Creator: A. Gunes Koru
(b) Date: February 23, 2007
(c) Contact: gkoru AT umbc DOT edu Phone: +1 (410) 455 8843

3. Donor: A. Gunes Koru

4. Past Usage: This data set was used for:

A. Gunes Koru, Dongsong Zhang, and Hongfang Liu, ""Modeling the
Effect of Size on Defect Proneness for Open-Source Software"",
Predictive Models in Software Engineering Workshop, PROMISE 2007,
May 20th 2007, Minneapolis, Minnesota, US.

Abstract:
Quality is becoming increasingly important with the continuous
adoption of open-source software.  Previous research has found that
there is generally a positive relationship between module size and
defect proneness. Therefore, in open-source software development, it
is important to monitor module size and understand its impact on
defect proneness. However, traditional approaches to quality
modeling, which measure specific system snapshots and obtain future
defect counts, are not well suited because open-source modules
usually evolve and their size changes over time. In this study, we
used Cox proportional hazards modeling with recurrent events to
study the effect of class size on defect-proneness in the Mozilla
product. We found that the effect of size was significant, and we
quantified this effect on defect proneness.

The full paper can be downloaded from A. Gunes Koru's Website
http://umbc.edu/~gkoru
by following the Publications link or from the Web site of PROMISE 2007.

5. Features:

This data set is used to create a conditional Cox Proportional
Hazards Model

id: A numeric identification assigned to each separate C++ class
(Note that the id's do not increment from the first to the last
data row)

start: A time infinitesimally greater than the time of the modification
that created this observation (practically, modification time). When a
class is introduced to a system, a new observation is entered with start=0

end: Either the time of the next modification, or the end of the
observation period, or the time of deletion, whichever comes first.

event: event is set to 1 if a defect fix takes place
at the time represented by 'end', or 0 otherwise.  A class deletion
is handled easily by entering a final observation whose event is set
to 1 if the class is deleted for corrective maintenance, or 0 otherwise.

size: It is a time-dependent covariate and its column carries the
number of source Lines of Code of the C++ classes
at time 'start'. Blank and comment lines are not counted.

state: Initially set to 0, and it becomes 1 after the class
experiences an event, and remains at 1 thereafter.";"Minimum: 10
Maximum: 1000";"Minimum: 0

Maximum: None";"Based on the dataset description, the range of values for the feature ""size"" is not provided.";10.0;1000.0;;;;;0.08008412878175053;;
148;AGE;1193;BNG(lowbwt);numeric;11.982418;42.793125;;Minimum: 18 Maximum: 100;"Minimum: Unknown
Maximum: Unknown";;18.0;100.0;;;;;0.28168377767978225;;
149;LWT;1193;BNG(lowbwt);numeric;68.76301;275.915383;;"Sorry, but as an AI language model, I don't have access to specific datasets or the ability to retrieve real-time information. Therefore, I cannot provide you with the minimum and maximum values for the feature ""LWT"" from any particular dataset.";"Minimum: 0
Maximum: Unknown";;;;;;;;;;
150;class;1193;BNG(lowbwt);numeric;446.09813099999997;4859.445711;;"Minimum: 0 
Maximum: 1";"Since there is no specific dataset provided, it is not possible to determine the range of values for the feature ""class"".";;0.0;1.0;;;;;;;
151;age;1199;BNG(echoMonths);numeric;38.165172999999996;92.000218;;Min: 1 Max: 100;Minimum: 0 Maximum: 100;;1.0;100.0;0.0;100.0;;;0.5437883333333334;0.53835045;
152;fractional;1199;BNG(echoMonths);numeric;-0.048257;0.725295;;"Minimum: 0
Maximum: 1";"Minimum: 0
Maximum: 1";;0.0;1.0;0.0;1.0;;;0.6919057063296501;0.6919057063296501;
153;epss;1199;BNG(echoMonths);numeric;-4.862782;42.492714;;"min: 0.001
max: 0.1";"Minimum: 0
Maximum: 100";;0.001;0.1;0.0;100.0;;;0.0020905704376953417;0.40522207392895604;
154;lvdd;1199;BNG(echoMonths);numeric;2.238167;7.648427000000001;;"Minimum: 1.0
Maximum: 7.1";"Minimum: 0.1
Maximum: 5.0";;1.0;7.1;0.1;5.0;;;0.7312756837068376;0.365881924803671;
155;wall_score;1199;BNG(echoMonths);numeric;1.194854;37.189358;;"Minimum: 0
Maximum: 10";"Min: 0.0
Max: 1.0";;0.0;10.0;0.0;1.0;;;0.236765205788172;;
156;wall_index;1199;BNG(echoMonths);numeric;0.928276;3.4389230000000004;;"Minimum value: 0
Maximum value: 1";"Minimum: 0
Maximum: Unknown";;0.0;1.0;;;;;0.02085652979144924;;
157;class;1199;BNG(echoMonths);numeric;-4.399572;74.55543;;"Minimum: 1
Maximum: 10";"Minimum: 0
Maximum: 1";;1.0;10.0;0.0;1.0;;;0.11398897817772202;0.012665442019746892;
158;impression;1218;Click_prediction_small;numeric;1.0;80881.0;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

Balanced version of click prediction data";"Minimum: 0
Maximum: 1000000";"Minimum: 1
Maximum: 1000000";"The range of values for the feature ""impression"" is unknown.";0.0;1000000.0;1.0;1000000.0;;;0.08088;0.08088008088008088;
159;url_hash;1218;Click_prediction_small;numeric;482437000000000.0;1.84e+19;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

Balanced version of click prediction data";"Minimum: 0
Maximum: 999999";"Minimum: 0
Maximum: 18446744073709551615";"The range of values for the feature ""url_hash"" is not provided in the dataset description.";0.0;999999.0;0.0;1.8446744073709552e+19;;;;0.9974398457244897;
160;ad_id;1218;Click_prediction_small;numeric;1000465.0;22237307.0;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

Balanced version of click prediction data";"Minimum: 1000
Maximum: 5000";Minimum: 1000 Maximum: 9999;"Range for the feature ""ad_id"" in the dataset: min = unknown, max = unknown";1000.0;5000.0;1000.0;9999.0;;;;;
161;advertiser_id;1218;Click_prediction_small;numeric;81.0;39164.0;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

Balanced version of click prediction data";"Minimum: 1

Maximum: 1000";"Minimum: 1
Maximum: 1000";"The range of values for the feature ""advertiser_id"" in this dataset is unknown.";1.0;1000.0;1.0;1000.0;;;0.023466026606746165;0.023466026606746165;
162;depth;1218;Click_prediction_small;numeric;1.0;3.0;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

Balanced version of click prediction data";"Minimum: 0 
Maximum: 100";"The range of values for the feature ""depth"" in the dataset is minimum=1 maximum=10.";"Min value for feature 'depth': Unknown
Max value for feature 'depth': Unknown";0.0;100.0;1.0;10.0;;;0.02;0.2222222222222222;
163;position;1218;Click_prediction_small;numeric;1.0;3.0;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

Balanced version of click prediction data";"Minimum: 0
Maximum: 100";"Minimum: 1
Maximum: 10";"Min: 1
Max: Unknown";0.0;100.0;1.0;10.0;;;0.02;0.2222222222222222;
164;query_id;1218;Click_prediction_small;numeric;0.0;26243462.0;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

Balanced version of click prediction data";"Minimum: 0
Maximum: 99999";"Minimum: 1
Maximum: 100000";"min(query_id) = unknown
max(query_id) = unknown";0.0;99999.0;1.0;100000.0;;;0.003810434766571575;0.003810434766571575;
165;keyword_id;1218;Click_prediction_small;numeric;0.0;1249692.0;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

Balanced version of click prediction data";"Minimum: 1
Maximum: 1000";"Minimum: 1
Maximum: 1000";"min(keyword_id): unknown
max(keyword_id): unknown";1.0;1000.0;1.0;1000.0;;;0.0007993969714137564;0.0007993969714137564;
166;title_id;1218;Click_prediction_small;numeric;0.0;4051310.0;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

Balanced version of click prediction data";"Minimum: 1
Maximum: 1000000";"Minimum: 1
Maximum: 1000";"min(title_id): unknown 
max(title_id): unknown";1.0;1000000.0;1.0;1000.0;;;0.2468334933638749;0.00024658690645741745;
167;description_id;1218;Click_prediction_small;numeric;0.0;3171740.0;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

Balanced version of click prediction data";"The minimum and maximum values for the feature ""description_id"" are not specified. Please provide more information or check the dataset for the desired range.";"Minimum: 1 
Maximum: 1000";"The range of values for the feature ""description_id"" is unknown as it is not provided in the given dataset.";;;1.0;1000.0;;;;0.00031496907060477844;
168;user_id;1218;Click_prediction_small;numeric;0.0;23907630.0;"**Author**:   
**Source**: Unknown - Date unknown  
**Please cite**:   

Balanced version of click prediction data";"Minimum: 1
Maximum: 100000";"Minimum: 1
Maximum: 999999";"min(user_id): 1
max(user_id): 100000";1.0;100000.0;1.0;999999.0;1.0;100000.0;0.0041827232561320385;0.04182756718252709;0.0041827232561320385
169;state;45076;churn;numeric;0.0;50.0;A dataset relating characteristics of telephony account features and usage and whether or not the customer churned. Originally used in Discovering Knowledge in Data: An Introduction to Data Mining.Source: https://www.secs.ac.in/wp-content/CSE_PORTAL/DataMining_Daniel.pdf;"Minimum: ""AL""
Maximum: ""WY""";"Minimum: A
Maximum: WY";state: min = 'AK', max = 'WY';;;;;;;;;
170;account_length;45076;churn;numeric;1.0;243.0;A dataset relating characteristics of telephony account features and usage and whether or not the customer churned. Originally used in Discovering Knowledge in Data: An Introduction to Data Mining.Source: https://www.secs.ac.in/wp-content/CSE_PORTAL/DataMining_Daniel.pdf;"Minimum: 1
Maximum: 243";"Minimum: 1
Maximum: 243";"The minimum and maximum values for the feature ""account_length"" in the given dataset are not provided. You would need to access the actual dataset or consult the source mentioned (https://www.secs.ac.in/wp-content/CSE_PORTAL/DataMining_Daniel.pdf) to obtain the range of values for this feature.";1.0;243.0;1.0;243.0;;;1.0;1.0;
171;phone_number;45076;churn;numeric;0.0;4999.0;A dataset relating characteristics of telephony account features and usage and whether or not the customer churned. Originally used in Discovering Knowledge in Data: An Introduction to Data Mining.Source: https://www.secs.ac.in/wp-content/CSE_PORTAL/DataMining_Daniel.pdf;"Minimum: 1000000000
Maximum: 9999999999";"Minimum: 1000000000
Maximum: 9999999999";"Based on the given dataset description, the feature ""phone_number"" is not relevant for setting a range of values. This feature is likely to contain unique identifiers for each customer and does not provide any meaningful numerical information.";1000000000.0;9999999999.0;1000000000.0;9999999999.0;;;;;
172;number_vmail_messages;45076;churn;numeric;0.0;52.0;A dataset relating characteristics of telephony account features and usage and whether or not the customer churned. Originally used in Discovering Knowledge in Data: An Introduction to Data Mining.Source: https://www.secs.ac.in/wp-content/CSE_PORTAL/DataMining_Daniel.pdf;"Minimum: 0
Maximum: 50";"Minimum: 0
Maximum: 50";"The range of values for the feature ""number_vmail_messages"" in the dataset is from 0 to 51.";0.0;50.0;0.0;50.0;0.0;51.0;0.9615384615384616;0.9615384615384616;0.9807692307692307
173;total_day_minutes;45076;churn;numeric;0.0;351.5;A dataset relating characteristics of telephony account features and usage and whether or not the customer churned. Originally used in Discovering Knowledge in Data: An Introduction to Data Mining.Source: https://www.secs.ac.in/wp-content/CSE_PORTAL/DataMining_Daniel.pdf;"Minimum: 0
Maximum: 4000";"Minimum: 0
Maximum: 1000";"The range of values for the feature ""total_day_minutes"" is 0 to 350.";0.0;4000.0;0.0;1000.0;0.0;350.0;0.087875;0.3515;0.9957325746799431
174;total_day_calls;45076;churn;numeric;0.0;165.0;A dataset relating characteristics of telephony account features and usage and whether or not the customer churned. Originally used in Discovering Knowledge in Data: An Introduction to Data Mining.Source: https://www.secs.ac.in/wp-content/CSE_PORTAL/DataMining_Daniel.pdf;"Minimum: 0
Maximum: 200";"Minimum: 0
Maximum: 100";"The range of values for the feature ""total_day_calls"" from the dataset is:

Minimum: 0
Maximum: 165";0.0;200.0;0.0;100.0;0.0;165.0;0.825;0.6060606060606061;1.0
175;total_day_charge;45076;churn;numeric;0.0;59.76;A dataset relating characteristics of telephony account features and usage and whether or not the customer churned. Originally used in Discovering Knowledge in Data: An Introduction to Data Mining.Source: https://www.secs.ac.in/wp-content/CSE_PORTAL/DataMining_Daniel.pdf;"Minimum: 0.00
Maximum: 59.64";"Minimum: 0.0
Maximum: 59.64";For the feature total_day_charge, the minimum value is not specified in the provided dataset description. The maximum value is also not explicitly mentioned. Therefore, without further information, it is not possible to provide a range of values for total_day_charge.;0.0;59.64;0.0;59.64;;;0.997991967871486;0.997991967871486;
176;total_eve_minutes;45076;churn;numeric;0.0;363.7;A dataset relating characteristics of telephony account features and usage and whether or not the customer churned. Originally used in Discovering Knowledge in Data: An Introduction to Data Mining.Source: https://www.secs.ac.in/wp-content/CSE_PORTAL/DataMining_Daniel.pdf;"Minimum: 0
Maximum: 1000";"Minimum: 0
Maximum: 1000";"Based on the dataset provided, the minimum and maximum values for the feature ""total_eve_minutes"" could be found by examining the dataset. Since the specific dataset is not provided, I cannot give you the exact values. You can refer to the dataset mentioned in the source link and compute the minimum and maximum values for the feature ""total_eve_minutes"" from the available data.";0.0;1000.0;0.0;1000.0;;;0.36369999999999997;0.36369999999999997;
177;total_eve_calls;45076;churn;numeric;0.0;170.0;A dataset relating characteristics of telephony account features and usage and whether or not the customer churned. Originally used in Discovering Knowledge in Data: An Introduction to Data Mining.Source: https://www.secs.ac.in/wp-content/CSE_PORTAL/DataMining_Daniel.pdf;min: 0 max: 500;minimum: 0 maximum: 100;"The range of values for the feature ""total_eve_calls"" in the dataset is from the minimum value of 0 to the maximum value of 170.";0.0;500.0;0.0;100.0;0.0;170.0;0.34;0.5882352941176471;1.0
178;total_eve_charge;45076;churn;numeric;0.0;30.91;A dataset relating characteristics of telephony account features and usage and whether or not the customer churned. Originally used in Discovering Knowledge in Data: An Introduction to Data Mining.Source: https://www.secs.ac.in/wp-content/CSE_PORTAL/DataMining_Daniel.pdf;"minimum: 0 
maximum: 100";Minimum = 0 Maximum = 100;"For the feature ""total_eve_charge"" in this dataset the minimum value is 0.00 and the maximum value is 30.91.";0.0;100.0;0.0;100.0;0.0;30.91;0.3091;0.3091;1.0
179;total_night_minutes;45076;churn;numeric;0.0;395.0;A dataset relating characteristics of telephony account features and usage and whether or not the customer churned. Originally used in Discovering Knowledge in Data: An Introduction to Data Mining.Source: https://www.secs.ac.in/wp-content/CSE_PORTAL/DataMining_Daniel.pdf;;"Minimum: 0.0
Maximum: 595.0";"The range of values for the feature ""total_night_minutes"" from the dataset can be represented as [0 395].";;;0.0;595.0;0.0;395.0;;0.6638655462184874;1.0
180;total_night_calls;45076;churn;numeric;0.0;175.0;A dataset relating characteristics of telephony account features and usage and whether or not the customer churned. Originally used in Discovering Knowledge in Data: An Introduction to Data Mining.Source: https://www.secs.ac.in/wp-content/CSE_PORTAL/DataMining_Daniel.pdf;"Minimum: 0  
Maximum: 100";"Minimum: 0
Maximum: 175";"The range of values for the feature ""total_night_calls"" in the dataset is between 0 and 160.";0.0;100.0;0.0;175.0;0.0;160.0;0.5714285714285714;1.0;0.9142857142857143
181;total_night_charge;45076;churn;numeric;0.0;17.77;A dataset relating characteristics of telephony account features and usage and whether or not the customer churned. Originally used in Discovering Knowledge in Data: An Introduction to Data Mining.Source: https://www.secs.ac.in/wp-content/CSE_PORTAL/DataMining_Daniel.pdf;"Minimum: 0.00
Maximum: 59.95";"Minimum: 0
Maximum: 50.";total_night_charge: Min: 0.00 Max: 17.77;0.0;59.95;0.0;50.0;0.0;17.77;0.2964136780650542;0.3554;1.0
182;total_intl_minutes;45076;churn;numeric;0.0;20.0;A dataset relating characteristics of telephony account features and usage and whether or not the customer churned. Originally used in Discovering Knowledge in Data: An Introduction to Data Mining.Source: https://www.secs.ac.in/wp-content/CSE_PORTAL/DataMining_Daniel.pdf;"Minimum: 0.5
Maximum: 20";"Minimum: 0.0
Maximum: 500.0";"According to the provided dataset the range of values for the feature ""total_intl_minutes"" is as follows:

Minimum Value: 0
Maximum Value: There is no information available to determine the maximum value.";0.5;20.0;0.0;500.0;;;0.975;0.04;
183;total_intl_calls;45076;churn;numeric;0.0;20.0;A dataset relating characteristics of telephony account features and usage and whether or not the customer churned. Originally used in Discovering Knowledge in Data: An Introduction to Data Mining.Source: https://www.secs.ac.in/wp-content/CSE_PORTAL/DataMining_Daniel.pdf;"Minimum: 0
Maximum: 1000";"Minimum: 0
Maximum: 20";"The minimum and maximum values for the feature ""total_intl_calls"" from the given dataset are not provided.";0.0;1000.0;0.0;20.0;;;0.02;1.0;
184;total_intl_charge;45076;churn;numeric;0.0;5.4;A dataset relating characteristics of telephony account features and usage and whether or not the customer churned. Originally used in Discovering Knowledge in Data: An Introduction to Data Mining.Source: https://www.secs.ac.in/wp-content/CSE_PORTAL/DataMining_Daniel.pdf;"Minimum: 0
Maximum: 999.99";"Minimum: 0.0
Maximum: 30.0";"The range of values for the feature ""total_intl_charge"" in the dataset is as follows:

Min: 0.0
Max: 10.0";0.0;999.99;0.0;30.0;0.0;10.0;0.005400054000540006;0.18000000000000002;0.54
185;class;45076;churn;numeric;0.0;1.0;A dataset relating characteristics of telephony account features and usage and whether or not the customer churned. Originally used in Discovering Knowledge in Data: An Introduction to Data Mining.Source: https://www.secs.ac.in/wp-content/CSE_PORTAL/DataMining_Daniel.pdf;"Minimum: 1
Maximum: 10";"Minimum value: 0
Maximum value: 1";"Based on the provided dataset the range of values for the feature ""class"" can be simply stated as follows:
Min: 0
Max: 1";1.0;10.0;0.0;1.0;0.0;1.0;0.0;1.0;1.0
186;acceleration_x;40922;Run_or_walk_information;numeric;-53.505;56.033;"**Author**: Viktor Malyi  
**Source**: [Kaggle](https://www.kaggle.com/vmalyi/run-or-walk)  
**Please cite**:   

**Run or walk**  
This dataset is gather to detect whether a person is running or walking based on deep neural networks and sensor data collected from iOS devices.

The dataset represents 88588 sensor data samples collected from the accelerometer and gyroscope from iPhone 5c in 10 seconds intervals and ~5.4/second frequency. 

### Attribute information  
This data is represented by following columns (each column contains sensor data for one of the sensor's axes):

acceleration_x
acceleration_y
acceleration_z
gyro_x
gyro_y
gyro_z

There is an activity type represented by ""activity"" column which acts as label and reflects following activities:

""0"": walking
""1"": running

The original data also contains a ""wrist"" column which represents the wrist where the device was placed, and ""date"", ""time"" and ""username"" columns which provide information about the exact date, time and user which collected these measurements.";"Min: -10.0
Max: 10.0";"Minimum: -10
Maximum: 10";"The range of values for the feature ""acceleration_x"" in the dataset is as follows:

Min: -19.61
Max: 19.57";-10.0;10.0;-10.0;10.0;-19.61;19.57;0.1825850389819058;0.1825850389819058;0.35768409136555346
187;acceleration_y;40922;Run_or_walk_information;numeric;-32.99;26.68;"**Author**: Viktor Malyi  
**Source**: [Kaggle](https://www.kaggle.com/vmalyi/run-or-walk)  
**Please cite**:   

**Run or walk**  
This dataset is gather to detect whether a person is running or walking based on deep neural networks and sensor data collected from iOS devices.

The dataset represents 88588 sensor data samples collected from the accelerometer and gyroscope from iPhone 5c in 10 seconds intervals and ~5.4/second frequency. 

### Attribute information  
This data is represented by following columns (each column contains sensor data for one of the sensor's axes):

acceleration_x
acceleration_y
acceleration_z
gyro_x
gyro_y
gyro_z

There is an activity type represented by ""activity"" column which acts as label and reflects following activities:

""0"": walking
""1"": running

The original data also contains a ""wrist"" column which represents the wrist where the device was placed, and ""date"", ""time"" and ""username"" columns which provide information about the exact date, time and user which collected these measurements.";"Minimum: -50
Maximum: 50";"The range of values for the feature ""acceleration_y"" in this dataset could be -10 to +10.";For the feature acceleration_y in the dataset, the minimum value is not provided, but the maximum value is not provided is also not provided.;-50.0;50.0;-10.0;10.0;;;0.5967;0.33517680576504105;
188;acceleration_z;40922;Run_or_walk_information;numeric;-37.538000000000004;16.403;"**Author**: Viktor Malyi  
**Source**: [Kaggle](https://www.kaggle.com/vmalyi/run-or-walk)  
**Please cite**:   

**Run or walk**  
This dataset is gather to detect whether a person is running or walking based on deep neural networks and sensor data collected from iOS devices.

The dataset represents 88588 sensor data samples collected from the accelerometer and gyroscope from iPhone 5c in 10 seconds intervals and ~5.4/second frequency. 

### Attribute information  
This data is represented by following columns (each column contains sensor data for one of the sensor's axes):

acceleration_x
acceleration_y
acceleration_z
gyro_x
gyro_y
gyro_z

There is an activity type represented by ""activity"" column which acts as label and reflects following activities:

""0"": walking
""1"": running

The original data also contains a ""wrist"" column which represents the wrist where the device was placed, and ""date"", ""time"" and ""username"" columns which provide information about the exact date, time and user which collected these measurements.";"min: -10
max: 10";"Minimum: -10.0
Maximum: 10.0";"The range of values for the feature acceleration_z in the dataset is:  
Min: -19.61  
Max: 19.61";-10.0;10.0;-10.0;10.0;-19.61;19.61;0.37077547690995716;0.37077547690995716;0.6301707846293833
189;gyro_x;40922;Run_or_walk_information;numeric;-44.306000000000004;48.742;"**Author**: Viktor Malyi  
**Source**: [Kaggle](https://www.kaggle.com/vmalyi/run-or-walk)  
**Please cite**:   

**Run or walk**  
This dataset is gather to detect whether a person is running or walking based on deep neural networks and sensor data collected from iOS devices.

The dataset represents 88588 sensor data samples collected from the accelerometer and gyroscope from iPhone 5c in 10 seconds intervals and ~5.4/second frequency. 

### Attribute information  
This data is represented by following columns (each column contains sensor data for one of the sensor's axes):

acceleration_x
acceleration_y
acceleration_z
gyro_x
gyro_y
gyro_z

There is an activity type represented by ""activity"" column which acts as label and reflects following activities:

""0"": walking
""1"": running

The original data also contains a ""wrist"" column which represents the wrist where the device was placed, and ""date"", ""time"" and ""username"" columns which provide information about the exact date, time and user which collected these measurements.";"Minimum: -1.0
Maximum: 1.0";"Minimum: -10
Maximum: 10";The range of values for the feature gyro_x in the dataset is approximately -3.2299 to 3.9319.;-1.0;1.0;-10.0;10.0;-3.2299;3.9319;0.021494282520849454;0.21494282520849453;0.07696887627890982
190;gyro_y;40922;Run_or_walk_information;numeric;-74.64699999999999;84.98;"**Author**: Viktor Malyi  
**Source**: [Kaggle](https://www.kaggle.com/vmalyi/run-or-walk)  
**Please cite**:   

**Run or walk**  
This dataset is gather to detect whether a person is running or walking based on deep neural networks and sensor data collected from iOS devices.

The dataset represents 88588 sensor data samples collected from the accelerometer and gyroscope from iPhone 5c in 10 seconds intervals and ~5.4/second frequency. 

### Attribute information  
This data is represented by following columns (each column contains sensor data for one of the sensor's axes):

acceleration_x
acceleration_y
acceleration_z
gyro_x
gyro_y
gyro_z

There is an activity type represented by ""activity"" column which acts as label and reflects following activities:

""0"": walking
""1"": running

The original data also contains a ""wrist"" column which represents the wrist where the device was placed, and ""date"", ""time"" and ""username"" columns which provide information about the exact date, time and user which collected these measurements.";"Minimum: -3.0
Maximum: 3.0";"Minimum: -500 rad/s
Maximum: 500 rad/s";"For the feature ""gyro_y"" in the dataset the minimum value is -58.927 and the maximum value is 85.776.";-3.0;3.0;-500.0;500.0;-58.927;85.77600000000001;0.03758762615347028;0.15962700000000002;0.8970471815138727
191;gyro_z;40922;Run_or_walk_information;numeric;-94.8;112.662;"**Author**: Viktor Malyi  
**Source**: [Kaggle](https://www.kaggle.com/vmalyi/run-or-walk)  
**Please cite**:   

**Run or walk**  
This dataset is gather to detect whether a person is running or walking based on deep neural networks and sensor data collected from iOS devices.

The dataset represents 88588 sensor data samples collected from the accelerometer and gyroscope from iPhone 5c in 10 seconds intervals and ~5.4/second frequency. 

### Attribute information  
This data is represented by following columns (each column contains sensor data for one of the sensor's axes):

acceleration_x
acceleration_y
acceleration_z
gyro_x
gyro_y
gyro_z

There is an activity type represented by ""activity"" column which acts as label and reflects following activities:

""0"": walking
""1"": running

The original data also contains a ""wrist"" column which represents the wrist where the device was placed, and ""date"", ""time"" and ""username"" columns which provide information about the exact date, time and user which collected these measurements.";"Minimum: -2.0
Maximum: 2.0";"Minimum: -32768
Maximum: 32767";"The range of values for the feature gyro_z is: 

Min: -4.7617 
Max: 5.0581";-2.0;2.0;-32768.0;32767.0;-4.7617;5.0581;0.019280639346000713;0.003165667200732433;0.047333005562464454
192;GLCM_Pan;40983;wilt;numeric;0.0;183.28125;"**Author**: Brian Johnson     
**Source**: [UCI] (https://archive.ics.uci.edu/ml/datasets/Wilt)  
**Please cite**: Johnson, B., Tateishi, R., Hoan, N., 2013. A hybrid pansharpening approach and multiscale object-based image analysis for mapping diseased pine and oak trees. International Journal of Remote Sensing, 34 (20), 6969-6982.   

__Changes w.r.t. version 1: renamed variables such that they match description.__


### Dataset:  
Wilt Data Set 

### Abstract:    
High-resolution Remote Sensing data set (Quickbird). Small number of training samples of diseased trees, large number for other land cover. Testing data set from stratified random sample of image.

### Source:
  
Brian Johnson; 
Institute for Global Environmental Strategies; 
2108-11 Kamiyamaguchi, Hayama, Kanagawa,240-0115 Japan; 
Email: Johnson '@' iges.or.jp 


### Data Set Information:  

This data set contains some training and testing data from a remote sensing study by Johnson et al. (2013) that involved detecting diseased trees in Quickbird imagery. There are few training samples for the 'diseased trees' class (74) and many for 'other land cover' class (4265). 

The data set consists of image segments, generated by segmenting the pansharpened image. The segments contain spectral information from the Quickbird multispectral image bands and texture information from the panchromatic (Pan) image band. The testing data set is for the row with Ã¢â‚¬Å“Segmentation scale 15Ã¢â‚¬Â segments and Ã¢â‚¬Å“original multi-spectral imageÃ¢â‚¬Â Spectral information in Table 2 of the reference (i.e. row 5). Please see the reference below for more information on the data set, and please cite the reference if you use this data set. Enjoy! 

### Attribute Information:

class: 'w' (diseased trees), 'n' (all other land cover)   
GLCM_Pan: GLCM mean texture (Pan band)   
Mean_G: Mean green value   
Mean_R: Mean red value   
Mean_NIR: Mean NIR value   
SD_Pan: Standard deviation (Pan band)   


### Relevant Papers:

Johnson, B., Tateishi, R., Hoan, N., 2013. A hybrid pansharpening approach and multiscale object-based image analysis for mapping diseased pine and oak trees. International Journal of Remote Sensing, 34 (20), 6969-6982.";GLCM_Pan: [0 100];"Minimum: unknown
Maximum: unknown";The range of values for the feature GLCM_Pan in this dataset is not given.;0.0;100.0;;;;;0.545609548167093;;
193;Mean_G;40983;wilt;numeric;117.210526;1848.9166670000002;"**Author**: Brian Johnson     
**Source**: [UCI] (https://archive.ics.uci.edu/ml/datasets/Wilt)  
**Please cite**: Johnson, B., Tateishi, R., Hoan, N., 2013. A hybrid pansharpening approach and multiscale object-based image analysis for mapping diseased pine and oak trees. International Journal of Remote Sensing, 34 (20), 6969-6982.   

__Changes w.r.t. version 1: renamed variables such that they match description.__


### Dataset:  
Wilt Data Set 

### Abstract:    
High-resolution Remote Sensing data set (Quickbird). Small number of training samples of diseased trees, large number for other land cover. Testing data set from stratified random sample of image.

### Source:
  
Brian Johnson; 
Institute for Global Environmental Strategies; 
2108-11 Kamiyamaguchi, Hayama, Kanagawa,240-0115 Japan; 
Email: Johnson '@' iges.or.jp 


### Data Set Information:  

This data set contains some training and testing data from a remote sensing study by Johnson et al. (2013) that involved detecting diseased trees in Quickbird imagery. There are few training samples for the 'diseased trees' class (74) and many for 'other land cover' class (4265). 

The data set consists of image segments, generated by segmenting the pansharpened image. The segments contain spectral information from the Quickbird multispectral image bands and texture information from the panchromatic (Pan) image band. The testing data set is for the row with Ã¢â‚¬Å“Segmentation scale 15Ã¢â‚¬Â segments and Ã¢â‚¬Å“original multi-spectral imageÃ¢â‚¬Â Spectral information in Table 2 of the reference (i.e. row 5). Please see the reference below for more information on the data set, and please cite the reference if you use this data set. Enjoy! 

### Attribute Information:

class: 'w' (diseased trees), 'n' (all other land cover)   
GLCM_Pan: GLCM mean texture (Pan band)   
Mean_G: Mean green value   
Mean_R: Mean red value   
Mean_NIR: Mean NIR value   
SD_Pan: Standard deviation (Pan band)   


### Relevant Papers:

Johnson, B., Tateishi, R., Hoan, N., 2013. A hybrid pansharpening approach and multiscale object-based image analysis for mapping diseased pine and oak trees. International Journal of Remote Sensing, 34 (20), 6969-6982.";"Min: 0
Max: 100";"Minimum: 0.0 
Maximum: 255.0";"The range of values for the feature ""Mean_G"" in the dataset is:

Min: Not specified
Max: Not specified";0.0;100.0;0.0;255.0;;;;0.07452443717951511;
194;Mean_R;40983;wilt;numeric;50.578947;1594.583333;"**Author**: Brian Johnson     
**Source**: [UCI] (https://archive.ics.uci.edu/ml/datasets/Wilt)  
**Please cite**: Johnson, B., Tateishi, R., Hoan, N., 2013. A hybrid pansharpening approach and multiscale object-based image analysis for mapping diseased pine and oak trees. International Journal of Remote Sensing, 34 (20), 6969-6982.   

__Changes w.r.t. version 1: renamed variables such that they match description.__


### Dataset:  
Wilt Data Set 

### Abstract:    
High-resolution Remote Sensing data set (Quickbird). Small number of training samples of diseased trees, large number for other land cover. Testing data set from stratified random sample of image.

### Source:
  
Brian Johnson; 
Institute for Global Environmental Strategies; 
2108-11 Kamiyamaguchi, Hayama, Kanagawa,240-0115 Japan; 
Email: Johnson '@' iges.or.jp 


### Data Set Information:  

This data set contains some training and testing data from a remote sensing study by Johnson et al. (2013) that involved detecting diseased trees in Quickbird imagery. There are few training samples for the 'diseased trees' class (74) and many for 'other land cover' class (4265). 

The data set consists of image segments, generated by segmenting the pansharpened image. The segments contain spectral information from the Quickbird multispectral image bands and texture information from the panchromatic (Pan) image band. The testing data set is for the row with Ã¢â‚¬Å“Segmentation scale 15Ã¢â‚¬Â segments and Ã¢â‚¬Å“original multi-spectral imageÃ¢â‚¬Â Spectral information in Table 2 of the reference (i.e. row 5). Please see the reference below for more information on the data set, and please cite the reference if you use this data set. Enjoy! 

### Attribute Information:

class: 'w' (diseased trees), 'n' (all other land cover)   
GLCM_Pan: GLCM mean texture (Pan band)   
Mean_G: Mean green value   
Mean_R: Mean red value   
Mean_NIR: Mean NIR value   
SD_Pan: Standard deviation (Pan band)   


### Relevant Papers:

Johnson, B., Tateishi, R., Hoan, N., 2013. A hybrid pansharpening approach and multiscale object-based image analysis for mapping diseased pine and oak trees. International Journal of Remote Sensing, 34 (20), 6969-6982.";"Minimum: 0
Maximum: 100";"Minimum: 0
Maximum: 255";"From the given dataset description, the range of values for the feature ""Mean_R"" is not provided. Therefore, without further information or access to the dataset, it is not possible to determine the minimum and maximum values for the ""Mean_R"" feature.";0.0;100.0;0.0;255.0;;;0.03099308262994368;0.1281971589502372;
195;Mean_NIR;40983;wilt;numeric;86.5;1597.333333;"**Author**: Brian Johnson     
**Source**: [UCI] (https://archive.ics.uci.edu/ml/datasets/Wilt)  
**Please cite**: Johnson, B., Tateishi, R., Hoan, N., 2013. A hybrid pansharpening approach and multiscale object-based image analysis for mapping diseased pine and oak trees. International Journal of Remote Sensing, 34 (20), 6969-6982.   

__Changes w.r.t. version 1: renamed variables such that they match description.__


### Dataset:  
Wilt Data Set 

### Abstract:    
High-resolution Remote Sensing data set (Quickbird). Small number of training samples of diseased trees, large number for other land cover. Testing data set from stratified random sample of image.

### Source:
  
Brian Johnson; 
Institute for Global Environmental Strategies; 
2108-11 Kamiyamaguchi, Hayama, Kanagawa,240-0115 Japan; 
Email: Johnson '@' iges.or.jp 


### Data Set Information:  

This data set contains some training and testing data from a remote sensing study by Johnson et al. (2013) that involved detecting diseased trees in Quickbird imagery. There are few training samples for the 'diseased trees' class (74) and many for 'other land cover' class (4265). 

The data set consists of image segments, generated by segmenting the pansharpened image. The segments contain spectral information from the Quickbird multispectral image bands and texture information from the panchromatic (Pan) image band. The testing data set is for the row with Ã¢â‚¬Å“Segmentation scale 15Ã¢â‚¬Â segments and Ã¢â‚¬Å“original multi-spectral imageÃ¢â‚¬Â Spectral information in Table 2 of the reference (i.e. row 5). Please see the reference below for more information on the data set, and please cite the reference if you use this data set. Enjoy! 

### Attribute Information:

class: 'w' (diseased trees), 'n' (all other land cover)   
GLCM_Pan: GLCM mean texture (Pan band)   
Mean_G: Mean green value   
Mean_R: Mean red value   
Mean_NIR: Mean NIR value   
SD_Pan: Standard deviation (Pan band)   


### Relevant Papers:

Johnson, B., Tateishi, R., Hoan, N., 2013. A hybrid pansharpening approach and multiscale object-based image analysis for mapping diseased pine and oak trees. International Journal of Remote Sensing, 34 (20), 6969-6982.";Minimum: 0   Maximum: 255;"Minimum: 0
Maximum: 255";The range of values for the feature Mean_NIR in the dataset is from the minimum value to the maximum value. Unfortunately, without access to the actual dataset, I cannot provide the specific range.;0.0;255.0;0.0;255.0;;;0.10548831387844079;0.10548831387844079;
196;SD_Plan;40983;wilt;numeric;0.0;156.508431;"**Author**: Brian Johnson     
**Source**: [UCI] (https://archive.ics.uci.edu/ml/datasets/Wilt)  
**Please cite**: Johnson, B., Tateishi, R., Hoan, N., 2013. A hybrid pansharpening approach and multiscale object-based image analysis for mapping diseased pine and oak trees. International Journal of Remote Sensing, 34 (20), 6969-6982.   

__Changes w.r.t. version 1: renamed variables such that they match description.__


### Dataset:  
Wilt Data Set 

### Abstract:    
High-resolution Remote Sensing data set (Quickbird). Small number of training samples of diseased trees, large number for other land cover. Testing data set from stratified random sample of image.

### Source:
  
Brian Johnson; 
Institute for Global Environmental Strategies; 
2108-11 Kamiyamaguchi, Hayama, Kanagawa,240-0115 Japan; 
Email: Johnson '@' iges.or.jp 


### Data Set Information:  

This data set contains some training and testing data from a remote sensing study by Johnson et al. (2013) that involved detecting diseased trees in Quickbird imagery. There are few training samples for the 'diseased trees' class (74) and many for 'other land cover' class (4265). 

The data set consists of image segments, generated by segmenting the pansharpened image. The segments contain spectral information from the Quickbird multispectral image bands and texture information from the panchromatic (Pan) image band. The testing data set is for the row with Ã¢â‚¬Å“Segmentation scale 15Ã¢â‚¬Â segments and Ã¢â‚¬Å“original multi-spectral imageÃ¢â‚¬Â Spectral information in Table 2 of the reference (i.e. row 5). Please see the reference below for more information on the data set, and please cite the reference if you use this data set. Enjoy! 

### Attribute Information:

class: 'w' (diseased trees), 'n' (all other land cover)   
GLCM_Pan: GLCM mean texture (Pan band)   
Mean_G: Mean green value   
Mean_R: Mean red value   
Mean_NIR: Mean NIR value   
SD_Pan: Standard deviation (Pan band)   


### Relevant Papers:

Johnson, B., Tateishi, R., Hoan, N., 2013. A hybrid pansharpening approach and multiscale object-based image analysis for mapping diseased pine and oak trees. International Journal of Remote Sensing, 34 (20), 6969-6982.";"Minimum: 0
Maximum: 10";Answer: The range of values for the feature SD_Plan cannot be determined without knowing the dataset or any additional information.;The range of values for the feature SD_Plan is not explicitly given.;0.0;10.0;;;;;0.06389432145032493;;
197;age;45039;compas-two-years;numeric;18.0;80.0;"Dataset used in the tabular data benchmark https://github.com/LeoGrin/tabular-benchmark, transformed in the same way. This dataset belongs to the ""classification on both numerical and categorical features"" benchmark. 
 
  Original link: https://openml.org/d/42192 
 
 Original description: 
 
nominal features and target for COMPAS";"Minimum: 18
Maximum: 99";"Minimum: 18

Maximum: 100";"min age: 18
max age: 96";18.0;99.0;18.0;100.0;18.0;96.0;0.7654320987654321;0.7560975609756098;0.7948717948717948
198;juv_misd_count;45039;compas-two-years;numeric;0.0;13.0;"Dataset used in the tabular data benchmark https://github.com/LeoGrin/tabular-benchmark, transformed in the same way. This dataset belongs to the ""classification on both numerical and categorical features"" benchmark. 
 
  Original link: https://openml.org/d/42192 
 
 Original description: 
 
nominal features and target for COMPAS";"Minimum: 0
Maximum: 10";"Minimum: 0
Maximum: 10";"The range of values for the feature ""juv_misd_count"" in the given dataset is: min = 0 max = 20.";0.0;10.0;0.0;10.0;0.0;20.0;0.7692307692307693;0.7692307692307693;0.65
199;priors_count;45039;compas-two-years;numeric;0.0;38.0;"Dataset used in the tabular data benchmark https://github.com/LeoGrin/tabular-benchmark, transformed in the same way. This dataset belongs to the ""classification on both numerical and categorical features"" benchmark. 
 
  Original link: https://openml.org/d/42192 
 
 Original description: 
 
nominal features and target for COMPAS";"Minimum: 0
Maximum: 100";"Minimum: 0
Maximum: Unknown";"The range of values for the feature ""priors_count"" in the dataset is from the minimum value to the maximum value. Unfortunately, since I don't have access to the actual dataset, I am unable to provide the specific minimum and maximum values.";0.0;100.0;;;;;0.38;;
200;carat;42225;diamonds;numeric;0.2;5.01;"This classic dataset contains the prices and other attributes of almost 54,000 diamonds. It's a great dataset for beginners learning to work with data analysis and visualization.

Content
price price in US dollars (\$326--\$18,823)

carat weight of the diamond (0.2--5.01)

cut quality of the cut (Fair, Good, Very Good, Premium, Ideal)

color diamond colour, from J (worst) to D (best)

clarity a measurement of how clear the diamond is (I1 (worst), SI2, SI1, VS2, VS1, VVS2, VVS1, IF (best))

x length in mm (0--10.74)

y width in mm (0--58.9)

z depth in mm (0--31.8)

depth total depth percentage = z / mean(x, y) = 2 * z / (x + y) (43--79)

table width of top of diamond relative to widest point (43--95)";"Min: 0.2 
Max: 5.01";"Minimum: 0.2
Maximum: 5.01";"The range of values for the feature ""carat"" in the dataset is 0.2 to 5.01.";0.2;5.01;0.2;5.01;0.2;5.01;1.0;1.0;1.0
201;depth;42225;diamonds;numeric;43.0;79.0;"This classic dataset contains the prices and other attributes of almost 54,000 diamonds. It's a great dataset for beginners learning to work with data analysis and visualization.

Content
price price in US dollars (\$326--\$18,823)

carat weight of the diamond (0.2--5.01)

cut quality of the cut (Fair, Good, Very Good, Premium, Ideal)

color diamond colour, from J (worst) to D (best)

clarity a measurement of how clear the diamond is (I1 (worst), SI2, SI1, VS2, VS1, VVS2, VVS1, IF (best))

x length in mm (0--10.74)

y width in mm (0--58.9)

z depth in mm (0--31.8)

depth total depth percentage = z / mean(x, y) = 2 * z / (x + y) (43--79)

table width of top of diamond relative to widest point (43--95)";Sorry, but without access to the dataset, I cannot provide you with an accurate answer.;"Minimum: 43.0
Maximum: 79.0";"The range of values for the feature ""depth"" is 43 (minimum) and 79 (maximum).";;;43.0;79.0;43.0;79.0;;1.0;1.0
202;table;42225;diamonds;numeric;43.0;95.0;"This classic dataset contains the prices and other attributes of almost 54,000 diamonds. It's a great dataset for beginners learning to work with data analysis and visualization.

Content
price price in US dollars (\$326--\$18,823)

carat weight of the diamond (0.2--5.01)

cut quality of the cut (Fair, Good, Very Good, Premium, Ideal)

color diamond colour, from J (worst) to D (best)

clarity a measurement of how clear the diamond is (I1 (worst), SI2, SI1, VS2, VS1, VVS2, VVS1, IF (best))

x length in mm (0--10.74)

y width in mm (0--58.9)

z depth in mm (0--31.8)

depth total depth percentage = z / mean(x, y) = 2 * z / (x + y) (43--79)

table width of top of diamond relative to widest point (43--95)";min: 0.1 max: 10.0;"min(table): 43
max(table): 95";table: min = 43 max = 95;0.1;10.0;43.0;95.0;43.0;95.0;;1.0;1.0
203;price;42225;diamonds;numeric;326.0;18823.0;"This classic dataset contains the prices and other attributes of almost 54,000 diamonds. It's a great dataset for beginners learning to work with data analysis and visualization.

Content
price price in US dollars (\$326--\$18,823)

carat weight of the diamond (0.2--5.01)

cut quality of the cut (Fair, Good, Very Good, Premium, Ideal)

color diamond colour, from J (worst) to D (best)

clarity a measurement of how clear the diamond is (I1 (worst), SI2, SI1, VS2, VS1, VVS2, VVS1, IF (best))

x length in mm (0--10.74)

y width in mm (0--58.9)

z depth in mm (0--31.8)

depth total depth percentage = z / mean(x, y) = 2 * z / (x + y) (43--79)

table width of top of diamond relative to widest point (43--95)";"Minimum: $100
Maximum: $10000";"Minimum price: \$100
Maximum price: \$100000";price: \$326-\$18823;100.0;10000.0;100.0;100000.0;326.0;18823.0;0.5166907012765048;0.18515515515515515;1.0
204;x;42225;diamonds;numeric;0.0;10.74;"This classic dataset contains the prices and other attributes of almost 54,000 diamonds. It's a great dataset for beginners learning to work with data analysis and visualization.

Content
price price in US dollars (\$326--\$18,823)

carat weight of the diamond (0.2--5.01)

cut quality of the cut (Fair, Good, Very Good, Premium, Ideal)

color diamond colour, from J (worst) to D (best)

clarity a measurement of how clear the diamond is (I1 (worst), SI2, SI1, VS2, VS1, VVS2, VVS1, IF (best))

x length in mm (0--10.74)

y width in mm (0--58.9)

z depth in mm (0--31.8)

depth total depth percentage = z / mean(x, y) = 2 * z / (x + y) (43--79)

table width of top of diamond relative to widest point (43--95)";"Minimum: 0
Maximum: 100";"Minimum: 0.0
Maximum: 10.74";"For the feature ""x"" in the dataset the range of values is minimum 0 and maximum 10.74.";0.0;100.0;0.0;10.74;0.0;10.74;0.1074;1.0;1.0
205;y;42225;diamonds;numeric;0.0;58.9;"This classic dataset contains the prices and other attributes of almost 54,000 diamonds. It's a great dataset for beginners learning to work with data analysis and visualization.

Content
price price in US dollars (\$326--\$18,823)

carat weight of the diamond (0.2--5.01)

cut quality of the cut (Fair, Good, Very Good, Premium, Ideal)

color diamond colour, from J (worst) to D (best)

clarity a measurement of how clear the diamond is (I1 (worst), SI2, SI1, VS2, VS1, VVS2, VVS1, IF (best))

x length in mm (0--10.74)

y width in mm (0--58.9)

z depth in mm (0--31.8)

depth total depth percentage = z / mean(x, y) = 2 * z / (x + y) (43--79)

table width of top of diamond relative to widest point (43--95)";"Min: 0
Max: 100";"Minimum: 0.0
Maximum: Unknown";"The range of values for the feature ""y"" is 0--58.9.";0.0;100.0;;;0.0;-58.9;0.589;;0.0
206;z;42225;diamonds;numeric;0.0;31.8;"This classic dataset contains the prices and other attributes of almost 54,000 diamonds. It's a great dataset for beginners learning to work with data analysis and visualization.

Content
price price in US dollars (\$326--\$18,823)

carat weight of the diamond (0.2--5.01)

cut quality of the cut (Fair, Good, Very Good, Premium, Ideal)

color diamond colour, from J (worst) to D (best)

clarity a measurement of how clear the diamond is (I1 (worst), SI2, SI1, VS2, VS1, VVS2, VVS1, IF (best))

x length in mm (0--10.74)

y width in mm (0--58.9)

z depth in mm (0--31.8)

depth total depth percentage = z / mean(x, y) = 2 * z / (x + y) (43--79)

table width of top of diamond relative to widest point (43--95)";"Minimum: -10
Maximum: 10";"Minimum: 2.43
Maximum: 31.8";"The range of values for the feature ""z"" in the dataset is from 0 to 31.8.";-10.0;10.0;2.43;31.8;0.0;31.8;0.23923444976076558;0.9235849056603773;1.0
207;Flight;41672;airlines;numeric;1.0;7814.0;Data;"Min: 1
Max: 10000";"Min: 1
Max: 10000";"The minimum and maximum values for the feature ""Flight"" in the given dataset are not provided.";1.0;10000.0;1.0;10000.0;;;0.7813781378137814;0.7813781378137814;
208;Time;41672;airlines;numeric;10.0;1439.0;Data;"Minimum: 0
Maximum: 1000";"Minimum: 0 minutes
Maximum: 24 hours";"Based on the dataset description, the range of values for the feature ""Time"" is not provided.";0.0;1000.0;0.0;24.0;;;0.6879777623349548;0.009728978457261988;
209;Length;41672;airlines;numeric;0.0;655.0;Data;"Min: 1
Max: 100";Range: Minimum: 0, Maximum: infinite;"Min: 0
Max: 9999";1.0;100.0;0.5;;0.0;9999.0;0.15114503816793892;;0.06550655065506551
210;word_freq_make;44;spambase;numeric;0.0;4.54;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Minimum: 0
Maximum: 4";"Minimum: 0.00
Maximum: 4.540";The min and max values for the feature word_freq_make are not provided in the dataset description.;0.0;4.0;0.0;4.54;;;0.8810572687224669;1.0;
211;word_freq_address;44;spambase;numeric;0.0;14.28;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Based on the given information, the minimum value for the feature ""word_freq_address"" cannot be determined. The maximum value for the feature ""word_freq_address"" cannot be determined.";"Based on the given information, the minimum value for the feature ""word_freq_address"" cannot be determined. The maximum value for the feature ""word_freq_address"" cannot be determined.";"The min and max values of the feature ""word_freq_address"" are not provided in the dataset description.";;;;;;;;;
212;word_freq_all;44;spambase;numeric;0.0;5.1;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";min: 0 max: 30;"Minimum: 0
Maximum: 100";"The range of values for the feature ""word_freq_all"" is [0 100].";0.0;30.0;0.0;100.0;0.0;100.0;0.16999999999999998;0.051;0.051
213;word_freq_3d;44;spambase;numeric;0.0;42.81;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Minimum: 0
Maximum: 100";"Minimum: 0
Maximum: 10";"The range of values for the feature ""word_freq_3d"" is [0 100].";0.0;100.0;0.0;10.0;;;0.42810000000000004;0.23359028264424198;
214;word_freq_our;44;spambase;numeric;0.0;10.0;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";0.00 5.10;"Minimum: 0.00
Maximum: 4.540";"The range of values for the feature ""word_freq_our"" is [0 100].";0.0;5.1;0.0;4.54;0.0;100.0;0.51;0.454;0.1
215;word_freq_over;44;spambase;numeric;0.0;5.88;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Minimum: 0
Maximum: 100";"Minimum: 0
Maximum: 100";"The range of values for the feature ""word_freq_over"" is [0 100].";0.0;100.0;0.0;100.0;0.0;100.0;0.0588;0.0588;0.0588
216;word_freq_remove;44;spambase;numeric;0.0;7.27;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Minimum: 0.000
Maximum: 9.090";"Minimum: 0
Maximum: 100";"The range of values for the feature ""word_freq_remove"" is [0100].";0.0;9.09;0.0;100.0;;;0.7997799779977998;0.0727;
217;word_freq_internet;44;spambase;numeric;0.0;11.11;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Minimum: 0
Maximum: 4.54";"Minimum: 0
Maximum: unknown";"min: 0.0
max: 100.0";0.0;4.54;;;0.0;100.0;0.40864086408640865;;0.11109999999999999
218;word_freq_order;44;spambase;numeric;0.0;5.26;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Minimum: 0
Maximum: 4.54";"Minimum value for word_freq_order: 0
Maximum value for word_freq_order: 100";"The feature ""word_freq_order"" has a range of values between 0 and 100.";0.0;4.54;0.0;100.0;0.0;100.0;0.8631178707224335;0.0526;0.0526
219;word_freq_mail;44;spambase;numeric;0.0;18.18;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Minimum: 0

Maximum: 100";Minimum: 0 Maximum: 100.;"The range of values for the feature ""word_freq_mail"" is [0 100].";0.0;100.0;0.0;100.0;0.0;100.0;0.1818;0.1818;0.1818
220;word_freq_receive;44;spambase;numeric;0.0;2.61;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Minimum: 0
Maximum: 4.54";"Minimum: 0.0
Maximum: 4.54";"The feature ""word_freq_receive"" has a range of values from 0 to 100. (Min: 0 Max: 100)";0.0;4.54;0.0;4.54;;;0.5748898678414096;0.5748898678414096;
221;word_freq_will;44;spambase;numeric;0.0;9.67;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Minimum: 0
Maximum: 100";"Minimum value: 0.0
Maximum value: 100.0";"The range of values for the feature ""word_freq_will"" is [0100].";0.0;100.0;0.0;100.0;;;0.0967;0.0967;
222;word_freq_people;44;spambase;numeric;0.0;5.55;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Minimum: 0
Maximum: 100";"Minimum: 0
Maximum: 100";"The min and max values for the feature ""word_freq_people"" are not provided in the dataset description.";0.0;100.0;0.0;100.0;;;0.0555;0.0555;
223;word_freq_report;44;spambase;numeric;0.0;10.0;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";0.0-100.0;"Minimum value: 0
Maximum value: 100";"Min: 0.0
Max: 100.0";0.0;-100.0;0.0;100.0;0.0;100.0;0.0;0.1;0.1
224;word_freq_addresses;44;spambase;numeric;0.0;4.41;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";0 30;"Minimum: 0
Maximum: 100";"The range of values for the feature ""word_freq_addresses"" is [0 100].";0.0;30.0;0.0;100.0;0.0;100.0;0.147;0.0441;0.0441
225;word_freq_free;44;spambase;numeric;0.0;20.0;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Minimum: 0
Maximum: 9";"Minimum: 0
Maximum: 100";"The range of values for the feature ""word_freq_free"" in the dataset is [0 100].";0.0;9.0;0.0;100.0;0.0;100.0;0.45;0.2;0.2
226;word_freq_business;44;spambase;numeric;0.0;7.14;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Minimum: 0
Maximum: 100";"Minimum: 0.0
Maximum: 100.0";"min: 0
max: 100";0.0;100.0;0.0;100.0;0.0;100.0;0.07139999999999999;0.07139999999999999;0.07139999999999999
227;word_freq_email;44;spambase;numeric;0.0;9.09;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";min: 0.0001 max: 0.9961;"I'm sorry, but without more information or context about the dataset, it is not possible to provide a range of values for the feature ""word_freq_email"".";"min(word_freq_email) = 0
max(word_freq_email) = 100";0.0001;0.9961;;;0.0;100.0;0.10957095709570958;;0.0909
228;word_freq_you;44;spambase;numeric;0.0;18.75;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Minimum: 0
Maximum: 3";"Minimum: 0
Maximum: 100";"The range of values for the feature ""word_freq_you"" is [0 100].";0.0;3.0;0.0;100.0;0.0;100.0;0.16;0.1875;0.1875
229;word_freq_credit;44;spambase;numeric;0.0;18.18;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";0 100;"Minimum: 0
Maximum: 4.54";"min: 0 
max: 100";0.0;100.0;0.0;4.54;0.0;100.0;0.1818;0.24972497249724973;0.1818
230;word_freq_your;44;spambase;numeric;0.0;11.11;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Minimum: 0
Maximum: 4.54";"Minimum: 0
Maximum: 100";"The feature ""word_freq_your"" has a range of values between 0 and 100 according to the dataset description.";0.0;4.54;0.0;100.0;0.0;100.0;0.40864086408640865;0.11109999999999999;0.11109999999999999
231;word_freq_font;44;spambase;numeric;0.0;17.1;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Minimum: 0
Maximum: 10";"Minimum: 0
Maximum: 9";"The range for the feature ""word_freq_font"" is [0 100].";0.0;10.0;0.0;9.0;0.0;100.0;0.5847953216374269;0.5263157894736842;0.171
232;word_freq_000;44;spambase;numeric;0.0;5.45;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";Minimum: 0, Maximum: Unknown;"Minimum: 0
Maximum: 14";"Min value: 0
Max value: 100";;;0.0;14.0;0.0;100.0;;0.3892857142857143;0.0545
233;word_freq_money;44;spambase;numeric;0.0;12.5;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"min: 0.0 
max: 1.0";"Minimum: 0
Maximum: 100";"The range of values for the feature ""word_freq_money"" is [0100].";0.0;1.0;0.0;100.0;;;0.08;0.125;
234;word_freq_hp;44;spambase;numeric;0.0;20.83;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Minimum: 0.00
Maximum: 4.540";"Minimum value for word_freq_hp: 0
Maximum value for word_freq_hp: 650";"The range of values for the feature ""word_freq_hp"" is [0 100].";0.0;4.54;0.0;650.0;0.0;100.0;0.21795487277964476;0.03204615384615384;0.20829999999999999
235;word_freq_hpl;44;spambase;numeric;0.0;16.66;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";0.0 to 100.0;The minimum value for the feature word_freq_hpl is 0 and the maximum value is 100.;"The minimum value for the feature ""word_freq_hpl"" is 0 and the maximum value is 6.91.";0.0;100.0;0.0;100.0;0.0;6.91;0.1666;0.1666;0.414765906362545
236;word_freq_george;44;spambase;numeric;0.0;33.33;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"min: 0.0
max: 100.0";"Minimum: 0
Maximum: 100";"The feature ""word_freq_george"" ranges from 0 to 100.";0.0;100.0;0.0;100.0;0.0;100.0;0.3333;0.3333;0.3333
237;word_freq_650;44;spambase;numeric;0.0;9.09;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Min: 0.00
Max: 4.540";"Minimum value: 0
Maximum value: 100";The minimum value for feature word_freq_650 is 0.0 and the maximum value is 0.083.;0.0;4.54;0.0;100.0;;;0.49944994499449946;0.0909;
238;word_freq_lab;44;spambase;numeric;0.0;14.28;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Min: 0
Max: 44.880";The minimum value for the feature word_freq_lab is 0 and the maximum value is not specified in the given dataset information.;"The range of values for the feature ""word_freq_lab"" is [0 33.33].";0.0;44.88;;;0.0;33.33;0.3181818181818182;;0.42844284428442847
239;word_freq_labs;44;spambase;numeric;0.0;5.88;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";min: 0 max: 33.33;"Minimum: 0.0
Maximum: 100.0";The range of values for the feature word_freq_labs is [0.0 33.33].;0.0;33.33;0.0;100.0;0.0;33.33;0.17641764176417643;0.0588;0.17641764176417643
240;word_freq_telnet;44;spambase;numeric;0.0;12.5;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";min: 0.0 max: 4.0;"Minimum: 0
Maximum: 100";"The range of values for the feature ""word_freq_telnet"" is [0 100].";0.0;4.0;0.0;100.0;0.0;100.0;0.32;0.125;0.125
241;word_freq_857;44;spambase;numeric;0.0;4.76;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Minimum: 0
Maximum: 1";"Minimum: 0
Maximum: 1.0";"The range of values for the feature ""word_freq_857"" in the dataset is [0 33.33].";0.0;1.0;0.0;1.0;;;0.21008403361344538;0.21008403361344538;
242;word_freq_data;44;spambase;numeric;0.0;18.18;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"min: 0.0
max: 4.54";"Minimum: 0 
Maximum: 100";"The range of values for the feature ""word_freq_data"" is [0 100].";0.0;4.54;0.0;100.0;0.0;100.0;0.24972497249724973;0.1818;0.1818
243;word_freq_415;44;spambase;numeric;0.0;4.76;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Sorry as an AI model I don't have access to specific datasets or their values. Hence I cannot provide an accurate range for the feature ""word_freq_415"" without any additional information.";"Minimum: 0.0
Maximum: 33.33";"The minimum and maximum values for the feature ""word_freq_415"" in the dataset are not specified in the provided information.";;;0.0;33.33;;;;0.14281428142814281;
244;word_freq_85;44;spambase;numeric;0.0;20.0;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"minimum: 0.0
maximum: 9.752";"The range of values for the feature ""word_freq_85"" is from 0 to 1.";"The min value for the feature ""word_freq_85"" is 0 and the max value is 20.";0.0;9.752;;;;;0.48760000000000003;;
245;word_freq_technology;44;spambase;numeric;0.0;7.69;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Minimum: 0.0
Maximum: 100.0";"Minimum: 0
Maximum: 100";"The range of values for the feature ""word_freq_technology"" is [0100].";0.0;100.0;0.0;100.0;;;0.07690000000000001;0.07690000000000001;
246;word_freq_1999;44;spambase;numeric;0.0;6.89;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Minimum: 0
Maximum: 100";"Minimum: 0
Maximum: 4.54";"For the feature ""word_freq_1999"" the range of values is [0100].";0.0;100.0;0.0;4.54;1999.0;100.0;0.0689;0.6589259796806967;
247;word_freq_parts;44;spambase;numeric;0.0;8.33;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Minimum: 0
Maximum: 100";"Minimum: 0
Maximum: 100";"The range of values for the feature ""word_freq_parts"" is [0 100].";0.0;100.0;0.0;100.0;0.0;100.0;0.0833;0.0833;0.0833
248;word_freq_pm;44;spambase;numeric;0.0;11.11;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";0.00 to 15.38;"Minimum: 0
Maximum: 0.4";"The range of values for the feature ""word_freq_pm"" is [0 100].";0.0;15.38;0.0;0.4;0.0;100.0;0.7223667100130038;0.036003600360036005;0.11109999999999999
249;word_freq_direct;44;spambase;numeric;0.0;4.76;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Minimum: 0
Maximum: 4.540";"Minimum: 0
Maximum: 4.54";"The range of values for the feature ""word_freq_direct"" is [0 100].";0.0;4.54;0.0;4.54;0.0;100.0;0.9537815126050421;0.9537815126050421;0.047599999999999996
250;word_freq_cs;44;spambase;numeric;0.0;7.14;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Minimum: 0
Maximum: 100";"Minimum: 0
Maximum: 100";"Based on the dataset description, the feature ""word_freq_cs"" is a continuous real attribute. However, the specific range of values for this feature is not indicated.";0.0;100.0;0.0;100.0;;;0.07139999999999999;0.07139999999999999;
251;word_freq_meeting;44;spambase;numeric;0.0;14.28;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Minimum: 0
Maximum: 4.5";"Minimum: 0
Maximum: 4.5";"The range of values for the feature ""word_freq_meeting"" is [0 100].";0.0;4.5;0.0;4.5;0.0;100.0;0.31512605042016806;0.31512605042016806;0.14279999999999998
252;word_freq_original;44;spambase;numeric;0.0;3.57;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";min: 0 max: 100;min: 0 max: 100;"The range of values for the feature ""word_freq_original"" is [0 100].";0.0;100.0;0.0;100.0;0.0;100.0;0.035699999999999996;0.035699999999999996;0.035699999999999996
253;word_freq_project;44;spambase;numeric;0.0;20.0;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";(0.0 100.0);"Minimum: 0
Maximum: 4.54";"The range of values for the feature ""word_freq_project"" is [0100].";0.0;100.0;0.0;4.54;;;0.2;0.227;
254;word_freq_re;44;spambase;numeric;0.0;21.42;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Minimum: 0.0 
Maximum: 4.54";"Minimum: 0
Maximum: 4.54";"For the feature ""word_freq_re"" the minimum value is 0 and the maximum value is 4.54.";0.0;4.54;0.0;4.54;0.0;4.54;0.2119514472455649;0.2119514472455649;0.2119514472455649
255;word_freq_edu;44;spambase;numeric;0.0;22.05;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";0.0 - 1.0;Minimum: 0.00 Maximum: 4.540;"The feature ""word_freq_edu"" has a range of values from 0 to 100.";0.0;1.0;0.0;4.54;0.0;100.0;0.045351473922902494;0.2058956916099773;0.2205
256;word_freq_table;44;spambase;numeric;0.0;2.17;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Minimum: 0
Maximum: 100";"Minimum: 0.0
Maximum: 33.33";"The range of values for the feature ""word_freq_table"" is [0 100].";0.0;100.0;0.0;33.33;0.0;100.0;0.0217;0.06510651065106511;0.0217
257;word_freq_conference;44;spambase;numeric;0.0;10.0;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";0.0 10.0;"Minimum: 0
Maximum: 100";"The range of values for the feature ""word_freq_conference"" is [0 100].";0.0;10.0;0.0;100.0;0.0;100.0;1.0;0.1;0.1
258;char_freq_%3B;44;spambase;numeric;0.0;4.385;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";0.0 - 0.242;"Minimum: 0.000
Maximum: 0.430";The feature char_freq_%3B has a range of values between 0 and 100.;0.0;0.242;0.0;0.43;;;0.055188141391106046;0.09806157354618017;
259;char_freq_%28;44;spambase;numeric;0.0;9.752;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Minimum: 0.0
Maximum: 0.708";"Minimum: 0.0
Maximum: 0.708";"For the feature ""char_freq_%28"" the minimum value is 0 and the maximum value is 48.";0.0;0.708;0.0;0.708;;;0.07260049220672682;0.07260049220672682;
260;char_freq_%5B;44;spambase;numeric;0.0;4.081;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Minimum: 0.0
Maximum: 100.0";The range of values for the feature char_freq_%5B is [0.0 0.63].;"The feature ""char_freq_%"" ranges from 0 to 100. So the minimum value is 0 and the maximum value is 100.";0.0;100.0;;;;;0.040810000000000006;;
261;char_freq_%21;44;spambase;numeric;0.0;32.478;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";Range: 0 to 100;"Minimum: 0.0
Maximum: 4.54";"The feature ""char_freq_%21"" represents the percentage of characters in the e-mail that match the character '!'. Since it is a percentage attribute its range would be [0 100].";0.0;100.0;0.0;4.54;;;0.32478;0.1397869326928998;
262;char_freq_%24;44;spambase;numeric;0.0;6.002999999999999;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Minimum: 0.0
Maximum: 100.0";"Minimum: 0
Maximum: 100";"The range of values for the feature ""char_freq_%24"" that comes from the dataset is [0 100].";0.0;100.0;0.0;100.0;;;0.06002999999999999;0.06002999999999999;
263;char_freq_%23;44;spambase;numeric;0.0;19.829;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";min: 0.0 max: 23.4;"Minimum: 0
Maximum: 4.41";"min: 0.0
max: 22.05";0.0;23.4;0.0;4.41;0.0;22.05;0.8473931623931624;0.22240153310807403;0.8992743764172335
264;capital_run_length_average;44;spambase;numeric;1.0;1102.5;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Minimum: 0.0 
Maximum: 1.0";"Minimum: 0.0 
Maximum: 1.0";"The range of values for the feature ""capital_run_length_average"" is [1, infinity].";0.0;1.0;0.0;1.0;;;0.0;0.0;
265;capital_run_length_longest;44;spambase;numeric;1.0;9989.0;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";Minimum: 0 Maximum: 17010;"Minimum: unknown

Maximum: unknown

As a language model AI, I don't have access to specific dataset information or its underlying values. I suggest referring to the dataset documentation or conducting an analysis on the dataset to determine the range of values for the feature ""capital_run_length_longest"".";"The range of values for the feature ""capital_run_length_longest"" is [1, ...].";0.0;17010.0;;;;;0.5871840094062316;;
266;capital_run_length_total;44;spambase;numeric;1.0;15841.0;"**Author**: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt    
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/spambase)   
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)

SPAM E-mail Database  
The ""spam"" concept is diverse: advertisements for products/websites, make money fast schemes, chain letters, pornography... Our collection of spam e-mails came from our postmaster and individuals who had filed spam.  Our collection of non-spam e-mails came from filed work and personal e-mails, and hence the word 'george' and the area code '650' are indicators of non-spam.  These are useful when constructing a personalized spam filter.  One would either have to blind such non-spam indicators or get a very wide collection of non-spam to generate a general purpose spam filter.
 
For background on spam:  
Cranor, Lorrie F., LaMacchia, Brian A.  Spam! Communications of the ACM, 41(8):74-83, 1998.  

### Attribute Information:  
The last column denotes whether the e-mail was considered spam (1) or not (0), i.e. unsolicited commercial e-mail. Most of the attributes indicate whether a particular word or character was frequently occurring in the e-mail. The run-length attributes (55-57) measure the length of sequences of consecutive capital letters.  

For the statistical measures of each attribute, see the end of this file. Here are the definitions of the attributes:  

48 continuous real [0,100] attributes of type  
word_freq_WORD = percentage of words in the e-mail that match WORD,  i.e. 100 * (number of times the WORD appears in the e-mail) / total number of words in e-mail.  A ""word"" in this case is any string of alphanumeric characters bounded by non-alphanumeric characters or end-of-string.
 
6 continuous real [0,100] attributes of type char_freq_CHAR = percentage of characters in the e-mail that match CHAR, i.e. 100 * (number of CHAR occurences) / total characters in e-mail
 
1 continuous real [1,...] attribute of type capital_run_length_average
 = average length of uninterrupted sequences of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_longest
 = length of longest uninterrupted sequence of capital letters
 
1 continuous integer [1,...] attribute of type capital_run_length_total
 = sum of length of uninterrupted sequences of capital letters
 = total number of capital letters in the e-mail
 
1 nominal {0,1} class attribute of type spam
 = denotes whether the e-mail was considered spam (1) or not (0), 
 i.e. unsolicited commercial e-mail.";"Minimum: 0
Maximum: 3630";"Minimum: 0
Maximum: 1388";"The range of values for the feature ""capital_run_length_total"" is [1, 891].";0.0;3630.0;0.0;1388.0;;;0.22908907265955433;0.08755760368663594;
267;Aattr;182;satimage;numeric;-2.2343290000000002;2.5430200000000003;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";"Minimum: 0
Maximum: 100";"Minimum: Aattr
Maximum: A30attr";The range of values for the feature Aattr is not provided in the dataset description.;0.0;100.0;;;;;0.024874423541235355;;
268;Battr;182;satimage;numeric;-2.4733099999999997;2.3339119999999998;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";"min: 0.5
max: 1.5";"Minimum: 0
Maximum: 30";The range of values for the feature Battr is not provided in the dataset description.;0.5;1.5;0.0;30.0;;;0.20802034938265804;0.07187170017469731;
269;Cattr;182;satimage;numeric;-2.780894;2.445605;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";"The range of values for the feature ""Cattr"" in the dataset is unknown.";"The range of values for the feature ""Cattr"" in the dataset is unknown.";The range of values for the feature Cattr is not provided in the dataset description.;;;;;;;;;
270;Dattr;182;satimage;numeric;-2.624275;3.778629;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";"Minimum: 0
Maximum: 100";"Minimum: 0
Maximum: 100";The minimum and maximum values for the feature Dattr in the dataset are not provided.;0.0;100.0;0.0;100.0;;;0.03682003112811272;0.03682003112811272;
271;Eattr;182;satimage;numeric;-2.223275;2.5698119999999998;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";"Min: 0
Max: 10";"Min: 0
Max: 10";Based on the dataset description, it is not possible to determine the range of values for the feature Eattr without actually analyzing the dataset itself.;0.0;10.0;0.0;10.0;;;0.2102392362112445;0.2102392362112445;
272;Fattr;182;satimage;numeric;-2.4574979999999997;2.34883;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";"Min: 0.5
Max: 10.0";"Min: 0.5
Max: 10.0";The range of values for the feature Fattr is not provided in the given information.;0.5;10.0;0.5;10.0;;;0.14841102121790428;0.14841102121790428;
273;A1attr;182;satimage;numeric;-2.947095;2.753787;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";"Minimum: 0
Maximum: 10";"Minimum: 0
Maximum: 10";The range of values for the feature A1attr is not provided in the dataset description.;0.0;10.0;0.0;10.0;;;0.21269535753000962;0.21269535753000962;
274;B2attr;182;satimage;numeric;-2.82442;3.9334339999999997;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";Sorry but I can't provide a specific answer without knowing the dataset or any information about the feature B2attr. Could you please provide more details or context about the dataset and the feature?;"Minimum: B2attr
Maximum: B2attr";The min and max values for the feature B2attr in the dataset are not provided.;;;2.0;2.0;;;;0.0;
275;C3attr;182;satimage;numeric;-2.14633;2.6047580000000004;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";"Min: 0.5
Max: 10.0";"Min: 0.5
Max: 10.0";The range of values for the feature C3attr is not mentioned in the provided dataset description.;0.5;10.0;0.5;10.0;;;0.17328345269723452;0.17328345269723452;
276;D4attr;182;satimage;numeric;-2.444776;2.0604669999999996;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";"Minimum: 1
Maximum: 10";"Minimum value of D4attr: 4attr
Maximum value of D4attr: 28attr";The range of values for the feature D4attr is not provided in the dataset.;1.0;10.0;;;;;0.08521382787444302;;
277;E5attr;182;satimage;numeric;-2.9364939999999997;2.773804;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";"Minimum: 1
Maximum: 10";"Minimum: 0
Maximum: 30";The range of values for the feature E5attr is not provided in the dataset description.;1.0;10.0;0.0;30.0;;;0.137116285138771;0.08421673539387649;
278;F6attr;182;satimage;numeric;-2.8127009999999997;3.9308449999999997;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";"Minimum: 0.5
Maximum: 10.2";"Minimum: F6attr
Maximum: F6attr";Based on the dataset description, the feature F6attr has values ranging from the minimum to the maximum. Unfortunately, the exact range of values is not provided.;0.5;10.2;6.0;6.0;;;0.2636535643138192;;
279;A7attr;182;satimage;numeric;-2.22674;2.551725;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";"Minimum: 1
Maximum: 10";"Minimum: A7attr
Maximum: A7attr";The range of values for the feature A7attr in the dataset is from the minimum value to the maximum value.;1.0;10.0;7.0;7.0;;;0.12691240674128998;;
280;B8attr;182;satimage;numeric;-2.4716419999999997;2.342384;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";"Minimum: 0
Maximum: 100";"Minimum: B8attr
Maximum: B8attr";Based on the dataset description, the feature B8attr represents the pixel values for the central pixel in the 3x3 neighborhood. The range of values for this feature is not specified in the description. To determine the range, we would need to analyze the actual data in the dataset.;0.0;100.0;8.0;8.0;;;0.022858851037050817;;
281;C9attr;182;satimage;numeric;-2.958463;2.741127;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";Sorry, but as a language model, I do not have access to real-time data or the ability to make arbitrary guesses.;"Minimum: C9attr
Maximum: C27attr";The range of values for the feature C9attr is not provided.;;;9.0;27.0;;;;;
282;D10attr;182;satimage;numeric;-2.833559;3.769022;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";Unfortunately I don't have access to the dataset you're referring to so I can't provide an accurate range for the feature D10attr. However if you want me to make a guess let's assume the minimum value is 0 and the maximum value is 100. Please note that this is purely speculative and may not reflect the actual range in the dataset.;"Minimum: D10attr
Maximum: D10attr";The range of values for the feature D10attr is not provided in the dataset description.;;;10.0;10.0;;;;;
283;E11attr;182;satimage;numeric;-2.145554;2.582013;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";"Minimum: 0.5
Maximum: 0.9";The range of values for the feature E11attr is from 0 to 30.;Based on the given dataset, the range of values for the feature E11attr can be determined by finding the minimum and maximum values.;0.5;0.9;;;;;0.0846101176355618;;
284;F12attr;182;satimage;numeric;-2.452344;2.044478;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";"Minimum: -100
Maximum: 100";"Minimum: F12attr
Maximum: F12attr";The range of values for the feature F12attr is not provided in the dataset description.;-100.0;100.0;12.0;12.0;;;0.022484109999999998;;
285;A13attr;182;satimage;numeric;-2.939991;2.742619;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";"Minimum: 0
Maximum: 100";"Minimum: A13attr
Maximum: A13attr";The range of values for the feature A13attr is not provided in the dataset description.;0.0;100.0;13.0;13.0;;;0.026642891390965828;;
286;B14attr;182;satimage;numeric;-2.815957;3.9083069999999998;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";"Minimum: 0
Maximum: 100";"Minimum: B14attr
Maximum: B14attr";The range of values for the feature B14attr is not provided.;0.0;100.0;14.0;14.0;;;0.03801265011811347;;
287;C15attr;182;satimage;numeric;-2.217016;2.612386;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";"Minimum: 0
Maximum: 100";"Minimum: C15attr
Maximum: C15attr";The range of values for the feature C15attr is not provided in the dataset description.;0.0;100.0;15.0;15.0;;;0.02555725164193797;;
288;D16attr;182;satimage;numeric;-2.4410060000000002;2.0598799999999997;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";min: 1.0 max: 7.0;"Minimum: D16attr

Maximum: D16attr";The range of values for the feature D16attr in the dataset can be obtained by finding the minimum and maximum values of this feature. However, since the dataset is not provided, I am unable to determine the exact range for D16attr.;1.0;7.0;16.0;16.0;;;0.11226346005923518;;
289;E17attr;182;satimage;numeric;-2.925927;2.752623;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";"Minimum: 0
Maximum: 100";"Minimum: 1
Maximum: 30";The range of values for the feature E17attr is not provided.;0.0;100.0;1.0;30.0;;;0.026743728040457677;0.053229268229866386;
290;F18attr;182;satimage;numeric;-2.803693;3.908156;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";"Minimum: 0
Maximum: 10";Range: F18attr [F18minattr F18maxattr];The range of values for the feature F18attr is not provided in the information given.;0.0;10.0;;;;;0.3052366219652408;;
291;A19attr;182;satimage;numeric;-2.221005;2.565264;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";"Minimum: 0
Maximum: 10";"Minimum: A19attr
Maximum: A19attr";The min and max values for the feature A19attr cannot be determined without access to the actual dataset.;0.0;10.0;19.0;19.0;;;0.20990614110705297;;
292;B20attr;182;satimage;numeric;-2.472222;2.088634;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";min: 0.5 max: 10.0;"Minimum: None
Maximum: None";The range of values for the feature B20attr is not provided in the dataset description.;0.5;10.0;;;;;0.1273737750979737;;
293;C21attr;182;satimage;numeric;-2.962511;2.455091;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";"Sorry but I can't provide the minimum and maximum values for the feature ""C21attr"" without any context or dataset information.";"Minimum: C21attr
Maximum: C21attr";The range of values for the feature C21attr is not provided in the dataset description. To determine the range, you would need to examine the actual dataset.;;;21.0;21.0;;;;;
294;D22attr;182;satimage;numeric;-2.825539;3.7564290000000002;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";"Minimum: 1
Maximum: 10";"Minimum: D22attr
Maximum: D22attr";The min and max values for the feature D22attr are not provided in the dataset description.;1.0;10.0;22.0;22.0;;;0.21491720542894927;;
295;E23attr;182;satimage;numeric;-2.219281;2.598145;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";"Minimum: 0
Maximum: 100";"Minimum: 0
Maximum: 30";The range of values for the feature E23attr is not provided in the dataset description.;0.0;100.0;0.0;30.0;;;0.025417367199051227;0.080639446919998;
296;F24attr;182;satimage;numeric;-2.45744;2.0507720000000003;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";"Minimum: 0
Maximum: 5";"Minimum: F24attr
Maximum: F24attr";The minimum and maximum values for the feature F24attr are not provided in the dataset description.;0.0;5.0;24.0;24.0;;;0.2749967817374327;;
297;A25attr;182;satimage;numeric;-2.940074;2.7470830000000004;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";"Minimum: 0
Maximum: 100";"Minimum: A25attr
Maximum: A25attr";The minimum value for feature A25attr is not provided. The maximum value for feature A25attr is not provided.;0.0;100.0;25.0;25.0;;;0.02668623494480877;;
298;B26attr;182;satimage;numeric;-2.815531;3.9058650000000004;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";"Minimum: 0
Maximum: 100";"Minimum: B26attr
Maximum: B26attr";The range of values for the feature B26attr is not provided in the dataset description.;0.0;100.0;26.0;26.0;;;0.037989056342081245;;
299;C27attr;182;satimage;numeric;-2.218211;2.631955;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";"Minimum: 0
Maximum: 100";"Minimum value: C27attr
Maximum value: C27attr";The range of values for the feature C27attr is not provided in the given dataset description.;0.0;100.0;27.0;27.0;;;0.025748396242231242;;
300;D28attr;182;satimage;numeric;-2.448131;2.066056;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";"Minimum: 0
Maximum: 1";"Minimum: 0
Maximum: 1";The range of values for the feature D28attr is not provided in the dataset description.;0.0;1.0;0.0;1.0;;;0.2215238314230226;0.2215238314230226;
301;E29attr;182;satimage;numeric;-2.930494;2.759666;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";"Minimum: 0
Maximum: 10";"Minimum: 0
Maximum: 10";Based on the information provided, it is not possible to determine the range of values for the feature E29attr without access to the dataset or further information.;0.0;10.0;0.0;10.0;;;0.21342309118274988;0.21342309118274988;
302;F30attr;182;satimage;numeric;-2.80805;3.9096029999999997;"**Author**: Ashwin Srinivasan, Department of Statistics and Data Modeling, University of Strathclyde  
**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/Statlog+(Landsat+Satellite)) - 1993  
**Please cite**: [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  

The database consists of the multi-spectral values of pixels in 3x3 neighbourhoods in a satellite image, and the classification associated with the central pixel in each neighbourhood. The aim is to predict this classification, given the multi-spectral values. In the sample database, the class of a pixel is coded as a number. 

One frame of Landsat MSS imagery consists of four digital images of the same scene in different spectral bands. Two of these are in the visible region (corresponding approximately to green and red regions of the visible spectrum) and two are in the (near) infra-red. Each pixel is a 8-bit binary word, with 0 corresponding to black and 255 to white. The spatial resolution of a pixel is about 80m x 80m. Each image contains 2340 x 3380 such pixels. 

The database is a (tiny) sub-area of a scene, consisting of 82 x 100 pixels. Each line of data corresponds to a 3x3 square neighbourhood of pixels completely contained within the 82x100 sub-area. Each line contains the pixel values in the four spectral bands (converted to ASCII) of each of the 9 pixels in the 3x3 neighbourhood and a number indicating the classification label of the central pixel. 

Each pixel is categorized as one of the following classes:  
1 red soil  
2 cotton crop  
3 grey soil  
4 damp grey soil  
5 soil with vegetation stubble  
6 mixture class (all types present)  
7 very damp grey soil  

NB. There are no examples with class 6 in this dataset.  

The data is given in random order and certain lines of data have been removed so you cannot reconstruct the original image from this dataset.  

### Attribute information  
There are 36 predictive attributes (= 4 spectral bands x 9 pixels in neighborhood).
In each line of data the four spectral values for the top-left pixel are given first followed by the four spectral values for the top-middle pixel and then those for the top-right pixel, and so on with the pixels read out in sequence left-to-right and top-to-bottom. Thus, the four spectral values for the central pixel are given by attributes 17,18,19 and 20. If you like you can use only these four attributes, while ignoring the others. This avoids the problem which arises when a 3x3 neighbourhood straddles a boundary. 

In this version, the pixel values 0..255 are normalized around 0.

**Note: it is unclear why the attributes are named Aattr - Fattr in this version, since there are only 4 bands and 9 pixels, naming them A1, B1, C1, D1, A2, B2, C2, D2, ... would have made more sense.**";"min: unknown
max: unknown";"min: unknown
max: unknown";For the feature F30attr in the dataset, the minimum value is not mentioned. The maximum value is also not mentioned.;;;;;;;;;
303;wave;40536;SpeedDating;numeric;1.0;21.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Minimum: 0.001
Maximum: 100";"Minimum: 0.001
Maximum: 100";"For the feature ""wave"", the minimum value is 1 and the maximum value is 21.";0.001;100.0;0.001;100.0;;;0.2000020000200002;0.2000020000200002;
304;age;40536;SpeedDating;numeric;18.0;55.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Minimum: 18
Maximum: 99";"Minimum: 18
Maximum: 99";"The range of values for the feature ""age"" in the dataset is from the minimum value of ""age"" to the maximum value of ""age"".";18.0;99.0;18.0;99.0;;;0.4567901234567901;0.4567901234567901;
305;age_o;40536;SpeedDating;numeric;18.0;55.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Minimum: 18 years old
Maximum: 65 years old";"Minimum: 18 years old
Maximum: 65 years old";"The range of values for the feature ""age_o"" is from 20 to 55.";18.0;65.0;18.0;65.0;;;0.7872340425531915;0.7872340425531915;
306;d_age;40536;SpeedDating;numeric;0.0;37.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Minimum: 18
Maximum: 90";"Minimum: 18
Maximum: 90";"The range of values for the feature ""d_age"" is from -3 to 10.";18.0;90.0;18.0;90.0;;;0.2111111111111111;0.2111111111111111;
307;importance_same_race;40536;SpeedDating;numeric;0.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";The minimum value for the feature importance_same_race can be 0 and the maximum value can be 1.;The minimum value for the feature importance_same_race can be 0 and the maximum value can be 1.;The range of values for the feature importance_same_race is from 0 to 10.;0.0;1.0;0.0;1.0;;;0.1;0.1;
308;importance_same_religion;40536;SpeedDating;numeric;1.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";;;The range of values for the feature importance_same_religion is [1, 10].;;;;;;;;;
309;pref_o_attractive;40536;SpeedDating;numeric;0.0;100.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Based on the given dataset, the minimum and maximum values for the feature ""pref_o_attractive"" are unknown.";"Based on the given dataset, the minimum and maximum values for the feature ""pref_o_attractive"" are unknown.";The range of values for the feature 'pref_o_attractive' is 0.0 to 1.0.;;;;;;;;;
310;pref_o_sincere;40536;SpeedDating;numeric;0.0;60.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Unfortunately, I cannot provide a specific range without knowing the dataset. However, in general, the minimum value of the feature ""pref_o_sincere"" would depend on the data type, while the maximum value would likely be an upper bound determined by the context or limitations of the dataset.";"Unfortunately, I cannot provide a specific range without knowing the dataset. However, in general, the minimum value of the feature ""pref_o_sincere"" would depend on the data type, while the maximum value would likely be an upper bound determined by the context or limitations of the dataset.";"Feature: pref_o_sincere

Range: min = 0, max = 10";;;;;;;;;
311;pref_o_intelligence;40536;SpeedDating;numeric;0.0;50.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Min: 1
Max: 10";"Min: 1
Max: 10";"The range of values for the feature ""pref_o_intelligence"" is from 0 to 10.";1.0;10.0;1.0;10.0;;;0.18;0.18;
312;pref_o_funny;40536;SpeedDating;numeric;0.0;50.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Minimum: 1
Maximum: 10";"Minimum: 1
Maximum: 10";"The range of values for the feature ""pref_o_funny"" is from 0 (minimum) to 10 (maximum).";1.0;10.0;1.0;10.0;;;0.18;0.18;
313;pref_o_ambitious;40536;SpeedDating;numeric;0.0;53.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Minimum: 0
Maximum: 10";"Minimum: 0
Maximum: 10";"The range of values for the feature ""pref_o_ambitious"" is 0.0 to 10.0.";0.0;10.0;0.0;10.0;;;0.18867924528301888;0.18867924528301888;
314;pref_o_shared_interests;40536;SpeedDating;numeric;0.0;30.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";min: 0 max: 10;min: 0 max: 10;The range of values for the feature pref_o_shared_interests is [0, 10].;0.0;10.0;0.0;10.0;;;0.3333333333333333;0.3333333333333333;
315;attractive_o;40536;SpeedDating;numeric;0.0;10.5;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Minimum: 1
Maximum: 10";"Minimum: 1
Maximum: 10";"The range of values for the feature ""attractive_o"" is from 0.0 to 10.0.";1.0;10.0;1.0;10.0;;;0.8571428571428571;0.8571428571428571;
316;sinsere_o;40536;SpeedDating;numeric;0.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Minimum: -1.0
Maximum: 1.0";"Minimum: -1.0
Maximum: 1.0";"The range of values for the feature ""sinsere_o"" is: min = 0, max = 10.";-1.0;1.0;-1.0;1.0;;;0.09090909090909091;0.09090909090909091;
317;intelligence_o;40536;SpeedDating;numeric;0.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"min: 80 
max: 150";"min: 80 
max: 150";"The range of values for the feature ""intelligence_o"" is from 0 to 10.";80.0;150.0;80.0;150.0;;;;;
318;funny_o;40536;SpeedDating;numeric;0.0;11.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Minimum: 0
Maximum: 100";"Minimum: 0
Maximum: 100";"The range of values for the feature ""funny_o"" is minimum 0 and maximum 20.";0.0;100.0;0.0;100.0;;;0.11;0.11;
319;ambitous_o;40536;SpeedDating;numeric;0.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";min: 0 max: 1;min: 0 max: 1;ambitous_o: Min = 0, Max = 10.;0.0;1.0;0.0;1.0;;;0.1;0.1;
320;shared_interests_o;40536;SpeedDating;numeric;0.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Minimum: 0
Maximum: 100";"Minimum: 0
Maximum: 100";"min(shared_interests_o) = 0.0
max(shared_interests_o) = 10.0";0.0;100.0;0.0;100.0;;;0.1;0.1;
321;attractive_important;40536;SpeedDating;numeric;0.0;100.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Minimum: 1 
Maximum: 7";"Minimum: 1 
Maximum: 7";"The range of values for the feature ""attractive_important"" is from 0 to 10.";1.0;7.0;1.0;7.0;;;0.06;0.06;
322;sincere_important;40536;SpeedDating;numeric;0.0;60.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"min: 1
max: 5";"min: 1
max: 5";"The range of values for the feature ""sincere_important"" is from 0 to 10.";1.0;5.0;1.0;5.0;;;0.06666666666666667;0.06666666666666667;
323;intellicence_important;40536;SpeedDating;numeric;0.0;50.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Minimum: 1
Maximum: 5";"Minimum: 1
Maximum: 5";"The range of values for the feature ""intellicence_important"" is 0 to 10.";1.0;5.0;1.0;5.0;;;0.08;0.08;
324;funny_important;40536;SpeedDating;numeric;0.0;50.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Min: 0
Max: 10";"Min: 0
Max: 10";"The range of values for the feature ""funny_important"" is between 0 and 10.";0.0;10.0;0.0;10.0;;;0.2;0.2;
325;ambtition_important;40536;SpeedDating;numeric;0.0;53.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Minimum: 1
Maximum: 5";"Minimum: 1
Maximum: 5";"The range of values for the feature ""ambtition_important"" in the dataset is from 0 to 10.";1.0;5.0;1.0;5.0;;;0.07547169811320754;0.07547169811320754;
326;shared_interests_important;40536;SpeedDating;numeric;0.0;30.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Minimum: 0
Maximum: 1";"Minimum: 0
Maximum: 1";"The range of values for the feature ""shared_interests_important"" is 0 to 10.";0.0;1.0;0.0;1.0;;;0.03333333333333333;0.03333333333333333;
327;attractive;40536;SpeedDating;numeric;2.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Minimum: 1
Maximum: 10";"Minimum: 1
Maximum: 10";"The range of values for the feature ""attractive"" in the dataset is from 0 to 10.";1.0;10.0;1.0;10.0;;;0.8888888888888888;0.8888888888888888;
328;sincere;40536;SpeedDating;numeric;2.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Minimum: 1
Maximum: 5";"Minimum: 1
Maximum: 5";"The range of values for the feature ""sincerity"" in the dataset is as follows:

Min: 0

Max: 10";1.0;5.0;1.0;5.0;;;0.3333333333333333;0.3333333333333333;
329;intelligence;40536;SpeedDating;numeric;2.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Unfortunately, without the dataset or any specific information, it is not possible to give an accurate range of values for the feature ""intelligence"".";"Unfortunately, without the dataset or any specific information, it is not possible to give an accurate range of values for the feature ""intelligence"".";"The range of values for the feature ""intelligence"" in the dataset is from 0 to 10.";;;;;;;;;
330;funny;40536;SpeedDating;numeric;3.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Minimum value: 0
Maximum value: 10";"Minimum value: 0
Maximum value: 10";"Min: 0
Max: 10";0.0;10.0;0.0;10.0;;;0.7;0.7;
331;ambition;40536;SpeedDating;numeric;2.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Minimum: 1
Maximum: 10";"Minimum: 1
Maximum: 10";"The range of values for the feature ""ambition"" in this dataset is from 0 to 10.";1.0;10.0;1.0;10.0;;;0.8888888888888888;0.8888888888888888;
332;attractive_partner;40536;SpeedDating;numeric;0.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";min: 1 max: 10;min: 1 max: 10;"The range of values for the feature ""attractive_partner"" in the dataset is between 0 and 10.";1.0;10.0;1.0;10.0;;;0.9;0.9;
333;sincere_partner;40536;SpeedDating;numeric;0.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";min: 0 max: 10;min: 0 max: 10;"The range of values for the feature ""sincere_partner"" is from 0 to 100.";0.0;10.0;0.0;10.0;;;1.0;1.0;
334;intelligence_partner;40536;SpeedDating;numeric;0.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Minimum: 70
Maximum: 130";"Minimum: 70
Maximum: 130";The range of values for the feature `intelligence_partner` in this dataset is from 0 to 10.;70.0;130.0;70.0;130.0;;;;;
335;funny_partner;40536;SpeedDating;numeric;0.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Minimum: 0
Maximum: 10";"Minimum: 0
Maximum: 10";"The range of values for the feature ""funny_partner"" is between the minimum value of 0 and the maximum value of 10.";0.0;10.0;0.0;10.0;;;1.0;1.0;
336;ambition_partner;40536;SpeedDating;numeric;0.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";Min: 0 Max: 100;Min: 0 Max: 100;"The range of values for the feature ""ambition_partner"" is minimum 0 and maximum 10.";0.0;100.0;0.0;100.0;;;0.1;0.1;
337;shared_interests_partner;40536;SpeedDating;numeric;0.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Min: 0
Max: 100";"Min: 0
Max: 100";"The range of values for the feature ""shared_interests_partner"" is between 0 and 10.";0.0;100.0;0.0;100.0;;;0.1;0.1;
338;sports;40536;SpeedDating;numeric;1.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Minimum: 0
Maximum: 9999";"Minimum: 0
Maximum: 9999";"The range of values for the feature ""sports"" is 1 to 10.";0.0;9999.0;0.0;9999.0;;;0.0009000900090009;0.0009000900090009;
339;tvsports;40536;SpeedDating;numeric;1.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Minimum: 0
Maximum: 100";"Minimum: 0
Maximum: 100";"The range of values for the feature ""tvsports"" is from 1 to 10.";0.0;100.0;0.0;100.0;;;0.09;0.09;
340;exercise;40536;SpeedDating;numeric;1.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Minimum: 0
Maximum: 10";"Minimum: 0
Maximum: 10";"For the feature ""exercise"", the range of values is [1-10].";0.0;10.0;0.0;10.0;;;0.9;0.9;
341;dining;40536;SpeedDating;numeric;1.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";minimum: 0 maximum: 5;minimum: 0 maximum: 5;"The range of values for the feature ""dining"" in the dataset is from 1 to 10.";0.0;5.0;0.0;5.0;;;0.4;0.4;
342;museums;40536;SpeedDating;numeric;0.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";;;"The range of values for the feature ""museums"" is 1-10.";;;;;;;;;
343;art;40536;SpeedDating;numeric;0.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Minimum: 0
Maximum: 100000";"Minimum: 0
Maximum: 100000";"The range of values for the feature ""art"" in the dataset is from 0 to 10.";0.0;100000.0;0.0;100000.0;;;0.0001;0.0001;
344;hiking;40536;SpeedDating;numeric;0.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Min: 0
Max: 1";"Min: 0
Max: 1";"The range of values for the feature ""hiking"" is between 0 and 10.";0.0;1.0;0.0;1.0;;;0.1;0.1;
345;gaming;40536;SpeedDating;numeric;0.0;14.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Minimum: 0
Maximum: 1";"Minimum: 0
Maximum: 1";"The range of values for the feature ""gaming"" in the dataset is from 1 to 10.";0.0;1.0;0.0;1.0;;;0.07142857142857142;0.07142857142857142;
346;clubbing;40536;SpeedDating;numeric;0.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Minimum: 0 
Maximum: 10";"Minimum: 0 
Maximum: 10";"The range of values for the feature ""clubbing"" is from 1 to 10.";0.0;10.0;0.0;10.0;;;1.0;1.0;
347;reading;40536;SpeedDating;numeric;1.0;13.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Minimum: 0
Maximum: 100";"Minimum: 0
Maximum: 100";"The range of values for the feature ""reading"" in the dataset is between 0 and 10 (inclusive).";0.0;100.0;0.0;100.0;;;0.12;0.12;
348;tv;40536;SpeedDating;numeric;1.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";min: 0 max: 100;min: 0 max: 100;"The range of values for the feature ""tv"" is from 1 to 10.";0.0;100.0;0.0;100.0;;;0.09;0.09;
349;theater;40536;SpeedDating;numeric;0.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Minimum: 0
Maximum: 1000";"Minimum: 0
Maximum: 1000";"Theater feature:
Min: 0
Max: 10";0.0;1000.0;0.0;1000.0;;;0.01;0.01;
350;movies;40536;SpeedDating;numeric;0.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"The minimum and maximum values for the feature ""movies"" cannot be determined without the specific dataset you are referring to.";"The minimum and maximum values for the feature ""movies"" cannot be determined without the specific dataset you are referring to.";"For the feature ""movies"" in this dataset, the minimum value is 1 and the maximum value is 10.";;;;;;;;;
351;concerts;40536;SpeedDating;numeric;0.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";min: 0 max: 100;min: 0 max: 100;"Range of values for the feature ""concerts"":
Min: 0
Max: 10";0.0;100.0;0.0;100.0;;;0.1;0.1;
352;music;40536;SpeedDating;numeric;1.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Min: 0 
Max: 10";"Min: 0 
Max: 10";music: Min = 1, Max = 10;0.0;10.0;0.0;10.0;;;0.9;0.9;
353;shopping;40536;SpeedDating;numeric;1.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Sorry, but I cannot provide a range of values for the feature ""shopping"" without further information or access to the dataset.";"Sorry, but I cannot provide a range of values for the feature ""shopping"" without further information or access to the dataset.";"The minimum and maximum values for the feature ""shopping"" in the dataset are not provided.";;;;;;;;;
354;yoga;40536;SpeedDating;numeric;0.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Minimum: 0
Maximum: 10";"Minimum: 0
Maximum: 10";"The range of values for the feature ""yoga"" is (0, 10).";0.0;10.0;0.0;10.0;;;1.0;1.0;
355;interests_correlate;40536;SpeedDating;numeric;-0.83;0.91;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Minimum: -1
Maximum: 1";"Minimum: -1
Maximum: 1";"The range of values for the feature ""interests_correlate"" in the dataset is approximately -0.33 (minimum) to 0.58 (maximum).";-1.0;1.0;-1.0;1.0;;;0.87;0.87;
356;expected_happy_with_sd_people;40536;SpeedDating;numeric;1.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Minimum: 1
Maximum: 10";"Minimum: 1
Maximum: 10";"The range of values for the feature ""expected_happy_with_sd_people"" is from 0 to 10.";1.0;10.0;1.0;10.0;;;1.0;1.0;
357;expected_num_interested_in_me;40536;SpeedDating;numeric;0.0;20.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Min: 0
Max: 100";"Min: 0
Max: 100";"For the feature ""expected_num_interested_in_me"", the range of values is from the minimum value of 0 to the maximum value of 20.";0.0;100.0;0.0;100.0;;;0.2;0.2;
358;expected_num_matches;40536;SpeedDating;numeric;0.0;18.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Dataset: Feature: expected_num_matches

Minimum: 0
Maximum: 100";"Dataset: Feature: expected_num_matches

Minimum: 0
Maximum: 100";"The range of values for the feature ""expected_num_matches"" is between 0 and 20.";0.0;100.0;0.0;100.0;;;0.18;0.18;
359;like;40536;SpeedDating;numeric;0.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"minimum: 0
maximum: 1000";"minimum: 0
maximum: 1000";"The range of values for the feature ""like"" is: [0, 1]";0.0;1000.0;0.0;1000.0;;;0.01;0.01;
360;guess_prob_liked;40536;SpeedDating;numeric;0.0;10.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Minimum: 0
Maximum: 1";"Minimum: 0
Maximum: 1";"The range of values for the feature ""guess_prob_liked"" from the dataset is 0.0000 - 1.0000.";0.0;1.0;0.0;1.0;;;0.1;0.1;
361;met;40536;SpeedDating;numeric;0.0;8.0;"**Author**: Ray Fisman and Sheena Iyengar  
**Source**: [Columbia Business School](http://www.stat.columbia.edu/~gelman/arm/examples/speed.dating/) - 2004  
**Please cite**: None  

This data was gathered from participants in experimental speed dating events from 2002-2004. During the events, the attendees would have a four-minute ""first date"" with every other participant of the opposite sex. At the end of their four minutes, participants were asked if they would like to see their date again. They were also asked to rate their date on six attributes: Attractiveness, Sincerity, Intelligence, Fun, Ambition, and Shared Interests. The dataset also includes questionnaire data gathered from participants at different points in the process. These fields include: demographics, dating habits, self-perception across key attributes, beliefs on what others find valuable in a mate, and lifestyle information. 

### Attribute Information
```
 * gender: Gender of self  
 * age: Age of self  
 * age_o: Age of partner  
 * d_age: Difference in age  
 * race: Race of self  
 * race_o: Race of partner  
 * samerace: Whether the two persons have the same race or not.  
 * importance_same_race: How important is it that partner is of same race?  
 * importance_same_religion: How important is it that partner has same religion?  
 * field: Field of study  
 * pref_o_attractive: How important does partner rate attractiveness  
 * pref_o_sinsere: How important does partner rate sincerity  
 * pref_o_intelligence: How important does partner rate intelligence  
 * pref_o_funny: How important does partner rate being funny  
 * pref_o_ambitious: How important does partner rate ambition  
 * pref_o_shared_interests: How important does partner rate having shared interests  
 * attractive_o: Rating by partner (about me) at night of event on attractiveness  
 * sincere_o: Rating by partner (about me) at night of event on sincerity  
 * intelligence_o: Rating by partner (about me) at night of event on intelligence  
 * funny_o: Rating by partner (about me) at night of event on being funny  
 * ambitous_o: Rating by partner (about me) at night of event on being ambitious  
 * shared_interests_o: Rating by partner (about me) at night of event on shared interest  
 * attractive_important: What do you look for in a partner - attractiveness  
 * sincere_important: What do you look for in a partner - sincerity  
 * intellicence_important: What do you look for in a partner - intelligence  
 * funny_important: What do you look for in a partner - being funny  
 * ambtition_important: What do you look for in a partner - ambition  
 * shared_interests_important: What do you look for in a partner - shared interests  
 * attractive: Rate yourself - attractiveness  
 * sincere: Rate yourself - sincerity   
 * intelligence: Rate yourself - intelligence   
 * funny: Rate yourself - being funny   
 * ambition: Rate yourself - ambition  
 * attractive_partner: Rate your partner - attractiveness  
 * sincere_partner: Rate your partner - sincerity   
 * intelligence_partner: Rate your partner - intelligence   
 * funny_partner: Rate your partner - being funny   
 * ambition_partner: Rate your partner - ambition   
 * shared_interests_partner: Rate your partner - shared interests  
 * sports: Your own interests [1-10]  
 * tvsports  
 * exercise  
 * dining  
 * museums  
 * art  
 * hiking  
 * gaming  
 * clubbing  
 * reading  
 * tv  
 * theater  
 * movies  
 * concerts  
 * music  
 * shopping  
 * yoga  
 * interests_correlate: Correlation between participantâ€™s and partnerâ€™s ratings of interests.  
 * expected_happy_with_sd_people: How happy do you expect to be with the people you meet during the speed-dating event?  
 * expected_num_interested_in_me: Out of the 20 people you will meet, how many do you expect will be interested in dating you?  
 * expected_num_matches: How many matches do you expect to get?  
 * like: Did you like your partner?  
 * guess_prob_liked: How likely do you think it is that your partner likes you?   
 * met: Have you met your partner before?  
 * decision: Decision at night of event.
 * decision_o: Decision of partner at night of event.  
 * match: Match (yes/no)
```

### Relevant paper

Raymond Fisman; Sheena S. Iyengar; Emir Kamenica; Itamar Simonson.   
Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment.   
The Quarterly Journal of Economics, Volume 121, Issue 2, 1 May 2006, Pages 673â€“697,   
[https://doi.org/10.1162/qjec.2006.121.2.673](https://doi.org/10.1162/qjec.2006.121.2.673)";"Sorry, but I cannot provide a specific range of values for the feature ""met"" without more information about the dataset.";"Sorry, but I cannot provide a specific range of values for the feature ""met"" without more information about the dataset.";"The range of values for the feature ""met"" is 0 to 1.";;;;;;;;;
362;Clump_Thickness;15;breast-w;numeric;1.0;10.0;"**Author**: Dr. William H. Wolberg, University of Wisconsin  

**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/breast+cancer+wisconsin+(original)), [University of Wisconsin](http://pages.cs.wisc.edu/~olvi/uwmp/cancer.html) - 1995  

**Please cite**: See below, plus [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  



**Breast Cancer Wisconsin (Original) Data Set.** Features are computed from a digitized image of a fine needle aspirate (FNA) of a breast mass. They describe characteristics of the cell nuclei present in the image. The target feature records the prognosis (malignant or benign). [Original data available here](ftp://ftp.cs.wisc.edu/math-prog/cpo-dataset/machine-learn/cancer/)  



Current dataset was adapted to ARFF format from the UCI version. Sample code ID's were removed.  



! Note that there is also a related Breast Cancer Wisconsin (Diagnosis) Data Set with a different set of features, better known as [wdbc](https://www.openml.org/d/1510).



### Relevant Papers  



W.N. Street, W.H. Wolberg and O.L. Mangasarian. Nuclear feature extraction for breast tumor diagnosis. IS&T/SPIE 1993 International Symposium on Electronic Imaging: Science and Technology, volume 1905, pages 861-870, San Jose, CA, 1993. 



O.L. Mangasarian, W.N. Street and W.H. Wolberg. Breast cancer diagnosis and prognosis via linear programming. Operations Research, 43(4), pages 570-577, July-August 1995.  



### Citation request  



This breast cancer database was obtained from the University of Wisconsin Hospitals, Madison from Dr. William H. Wolberg.  If you publish results when using this database, then please include this information in your acknowledgments.  Also, please cite one or more of:



   1. O. L. Mangasarian and W. H. Wolberg: ""Cancer diagnosis via linear 

      programming"", SIAM News, Volume 23, Number 5, September 1990, pp 1 & 18.



   2. William H. Wolberg and O.L. Mangasarian: ""Multisurface method of 

      pattern separation for medical diagnosis applied to breast cytology"", 

      Proceedings of the National Academy of Sciences, U.S.A., Volume 87, 

      December 1990, pp 9193-9196.



   3. O. L. Mangasarian, R. Setiono, and W.H. Wolberg: ""Pattern recognition 

      via linear programming: Theory and application to medical diagnosis"", 

      in: ""Large-scale numerical optimization"", Thomas F. Coleman and Yuying

      Li, editors, SIAM Publications, Philadelphia 1990, pp 22-30.



   4. K. P. Bennett & O. L. Mangasarian: ""Robust linear programming 

      discrimination of two linearly inseparable sets"", Optimization Methods

      and Software 1, 1992, 23-34 (Gordon & Breach Science Publishers).";1 to 10;1 to 10;"For the feature ""Clump_Thickness"" in the dataset, the range of values is as follows:

Minimum value: 1
Maximum value: 10";1.0;10.0;1.0;10.0;;;1.0;1.0;
363;Cell_Size_Uniformity;15;breast-w;numeric;1.0;10.0;"**Author**: Dr. William H. Wolberg, University of Wisconsin  

**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/breast+cancer+wisconsin+(original)), [University of Wisconsin](http://pages.cs.wisc.edu/~olvi/uwmp/cancer.html) - 1995  

**Please cite**: See below, plus [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  



**Breast Cancer Wisconsin (Original) Data Set.** Features are computed from a digitized image of a fine needle aspirate (FNA) of a breast mass. They describe characteristics of the cell nuclei present in the image. The target feature records the prognosis (malignant or benign). [Original data available here](ftp://ftp.cs.wisc.edu/math-prog/cpo-dataset/machine-learn/cancer/)  



Current dataset was adapted to ARFF format from the UCI version. Sample code ID's were removed.  



! Note that there is also a related Breast Cancer Wisconsin (Diagnosis) Data Set with a different set of features, better known as [wdbc](https://www.openml.org/d/1510).



### Relevant Papers  



W.N. Street, W.H. Wolberg and O.L. Mangasarian. Nuclear feature extraction for breast tumor diagnosis. IS&T/SPIE 1993 International Symposium on Electronic Imaging: Science and Technology, volume 1905, pages 861-870, San Jose, CA, 1993. 



O.L. Mangasarian, W.N. Street and W.H. Wolberg. Breast cancer diagnosis and prognosis via linear programming. Operations Research, 43(4), pages 570-577, July-August 1995.  



### Citation request  



This breast cancer database was obtained from the University of Wisconsin Hospitals, Madison from Dr. William H. Wolberg.  If you publish results when using this database, then please include this information in your acknowledgments.  Also, please cite one or more of:



   1. O. L. Mangasarian and W. H. Wolberg: ""Cancer diagnosis via linear 

      programming"", SIAM News, Volume 23, Number 5, September 1990, pp 1 & 18.



   2. William H. Wolberg and O.L. Mangasarian: ""Multisurface method of 

      pattern separation for medical diagnosis applied to breast cytology"", 

      Proceedings of the National Academy of Sciences, U.S.A., Volume 87, 

      December 1990, pp 9193-9196.



   3. O. L. Mangasarian, R. Setiono, and W.H. Wolberg: ""Pattern recognition 

      via linear programming: Theory and application to medical diagnosis"", 

      in: ""Large-scale numerical optimization"", Thomas F. Coleman and Yuying

      Li, editors, SIAM Publications, Philadelphia 1990, pp 22-30.



   4. K. P. Bennett & O. L. Mangasarian: ""Robust linear programming 

      discrimination of two linearly inseparable sets"", Optimization Methods

      and Software 1, 1992, 23-34 (Gordon & Breach Science Publishers).";"Minimum: 1
Maximum: 10";"Minimum: 1
Maximum: 10";Based on the dataset description, the feature Cell_Size_Uniformity can have a range of values. To determine the specific range, we need to analyze the data.;1.0;10.0;1.0;10.0;;;1.0;1.0;
364;Cell_Shape_Uniformity;15;breast-w;numeric;1.0;10.0;"**Author**: Dr. William H. Wolberg, University of Wisconsin  

**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/breast+cancer+wisconsin+(original)), [University of Wisconsin](http://pages.cs.wisc.edu/~olvi/uwmp/cancer.html) - 1995  

**Please cite**: See below, plus [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  



**Breast Cancer Wisconsin (Original) Data Set.** Features are computed from a digitized image of a fine needle aspirate (FNA) of a breast mass. They describe characteristics of the cell nuclei present in the image. The target feature records the prognosis (malignant or benign). [Original data available here](ftp://ftp.cs.wisc.edu/math-prog/cpo-dataset/machine-learn/cancer/)  



Current dataset was adapted to ARFF format from the UCI version. Sample code ID's were removed.  



! Note that there is also a related Breast Cancer Wisconsin (Diagnosis) Data Set with a different set of features, better known as [wdbc](https://www.openml.org/d/1510).



### Relevant Papers  



W.N. Street, W.H. Wolberg and O.L. Mangasarian. Nuclear feature extraction for breast tumor diagnosis. IS&T/SPIE 1993 International Symposium on Electronic Imaging: Science and Technology, volume 1905, pages 861-870, San Jose, CA, 1993. 



O.L. Mangasarian, W.N. Street and W.H. Wolberg. Breast cancer diagnosis and prognosis via linear programming. Operations Research, 43(4), pages 570-577, July-August 1995.  



### Citation request  



This breast cancer database was obtained from the University of Wisconsin Hospitals, Madison from Dr. William H. Wolberg.  If you publish results when using this database, then please include this information in your acknowledgments.  Also, please cite one or more of:



   1. O. L. Mangasarian and W. H. Wolberg: ""Cancer diagnosis via linear 

      programming"", SIAM News, Volume 23, Number 5, September 1990, pp 1 & 18.



   2. William H. Wolberg and O.L. Mangasarian: ""Multisurface method of 

      pattern separation for medical diagnosis applied to breast cytology"", 

      Proceedings of the National Academy of Sciences, U.S.A., Volume 87, 

      December 1990, pp 9193-9196.



   3. O. L. Mangasarian, R. Setiono, and W.H. Wolberg: ""Pattern recognition 

      via linear programming: Theory and application to medical diagnosis"", 

      in: ""Large-scale numerical optimization"", Thomas F. Coleman and Yuying

      Li, editors, SIAM Publications, Philadelphia 1990, pp 22-30.



   4. K. P. Bennett & O. L. Mangasarian: ""Robust linear programming 

      discrimination of two linearly inseparable sets"", Optimization Methods

      and Software 1, 1992, 23-34 (Gordon & Breach Science Publishers).";"Minimum: 1
Maximum: 10";"Minimum: 1
Maximum: 10";"The range of values for the feature ""Cell_Shape_Uniformity"" in the breast cancer dataset is a minimum of 1 and a maximum of 10.";1.0;10.0;1.0;10.0;;;1.0;1.0;
365;Marginal_Adhesion;15;breast-w;numeric;1.0;10.0;"**Author**: Dr. William H. Wolberg, University of Wisconsin  

**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/breast+cancer+wisconsin+(original)), [University of Wisconsin](http://pages.cs.wisc.edu/~olvi/uwmp/cancer.html) - 1995  

**Please cite**: See below, plus [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  



**Breast Cancer Wisconsin (Original) Data Set.** Features are computed from a digitized image of a fine needle aspirate (FNA) of a breast mass. They describe characteristics of the cell nuclei present in the image. The target feature records the prognosis (malignant or benign). [Original data available here](ftp://ftp.cs.wisc.edu/math-prog/cpo-dataset/machine-learn/cancer/)  



Current dataset was adapted to ARFF format from the UCI version. Sample code ID's were removed.  



! Note that there is also a related Breast Cancer Wisconsin (Diagnosis) Data Set with a different set of features, better known as [wdbc](https://www.openml.org/d/1510).



### Relevant Papers  



W.N. Street, W.H. Wolberg and O.L. Mangasarian. Nuclear feature extraction for breast tumor diagnosis. IS&T/SPIE 1993 International Symposium on Electronic Imaging: Science and Technology, volume 1905, pages 861-870, San Jose, CA, 1993. 



O.L. Mangasarian, W.N. Street and W.H. Wolberg. Breast cancer diagnosis and prognosis via linear programming. Operations Research, 43(4), pages 570-577, July-August 1995.  



### Citation request  



This breast cancer database was obtained from the University of Wisconsin Hospitals, Madison from Dr. William H. Wolberg.  If you publish results when using this database, then please include this information in your acknowledgments.  Also, please cite one or more of:



   1. O. L. Mangasarian and W. H. Wolberg: ""Cancer diagnosis via linear 

      programming"", SIAM News, Volume 23, Number 5, September 1990, pp 1 & 18.



   2. William H. Wolberg and O.L. Mangasarian: ""Multisurface method of 

      pattern separation for medical diagnosis applied to breast cytology"", 

      Proceedings of the National Academy of Sciences, U.S.A., Volume 87, 

      December 1990, pp 9193-9196.



   3. O. L. Mangasarian, R. Setiono, and W.H. Wolberg: ""Pattern recognition 

      via linear programming: Theory and application to medical diagnosis"", 

      in: ""Large-scale numerical optimization"", Thomas F. Coleman and Yuying

      Li, editors, SIAM Publications, Philadelphia 1990, pp 22-30.



   4. K. P. Bennett & O. L. Mangasarian: ""Robust linear programming 

      discrimination of two linearly inseparable sets"", Optimization Methods

      and Software 1, 1992, 23-34 (Gordon & Breach Science Publishers).";"Minimum: 0
Maximum: 10";"Minimum: 0
Maximum: 10";"Unfortunately, I cannot provide you with the specific range of values for the feature ""Marginal_Adhesion"" as I do not have access to the dataset. However, you can download the dataset from the provided link (https://archive.ics.uci.edu/ml/datasets/breast+cancer+wisconsin+(original)) and explore it further to find the minimum and maximum values for this feature.";0.0;10.0;0.0;10.0;;;0.9;0.9;
366;Single_Epi_Cell_Size;15;breast-w;numeric;1.0;10.0;"**Author**: Dr. William H. Wolberg, University of Wisconsin  

**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/breast+cancer+wisconsin+(original)), [University of Wisconsin](http://pages.cs.wisc.edu/~olvi/uwmp/cancer.html) - 1995  

**Please cite**: See below, plus [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  



**Breast Cancer Wisconsin (Original) Data Set.** Features are computed from a digitized image of a fine needle aspirate (FNA) of a breast mass. They describe characteristics of the cell nuclei present in the image. The target feature records the prognosis (malignant or benign). [Original data available here](ftp://ftp.cs.wisc.edu/math-prog/cpo-dataset/machine-learn/cancer/)  



Current dataset was adapted to ARFF format from the UCI version. Sample code ID's were removed.  



! Note that there is also a related Breast Cancer Wisconsin (Diagnosis) Data Set with a different set of features, better known as [wdbc](https://www.openml.org/d/1510).



### Relevant Papers  



W.N. Street, W.H. Wolberg and O.L. Mangasarian. Nuclear feature extraction for breast tumor diagnosis. IS&T/SPIE 1993 International Symposium on Electronic Imaging: Science and Technology, volume 1905, pages 861-870, San Jose, CA, 1993. 



O.L. Mangasarian, W.N. Street and W.H. Wolberg. Breast cancer diagnosis and prognosis via linear programming. Operations Research, 43(4), pages 570-577, July-August 1995.  



### Citation request  



This breast cancer database was obtained from the University of Wisconsin Hospitals, Madison from Dr. William H. Wolberg.  If you publish results when using this database, then please include this information in your acknowledgments.  Also, please cite one or more of:



   1. O. L. Mangasarian and W. H. Wolberg: ""Cancer diagnosis via linear 

      programming"", SIAM News, Volume 23, Number 5, September 1990, pp 1 & 18.



   2. William H. Wolberg and O.L. Mangasarian: ""Multisurface method of 

      pattern separation for medical diagnosis applied to breast cytology"", 

      Proceedings of the National Academy of Sciences, U.S.A., Volume 87, 

      December 1990, pp 9193-9196.



   3. O. L. Mangasarian, R. Setiono, and W.H. Wolberg: ""Pattern recognition 

      via linear programming: Theory and application to medical diagnosis"", 

      in: ""Large-scale numerical optimization"", Thomas F. Coleman and Yuying

      Li, editors, SIAM Publications, Philadelphia 1990, pp 22-30.



   4. K. P. Bennett & O. L. Mangasarian: ""Robust linear programming 

      discrimination of two linearly inseparable sets"", Optimization Methods

      and Software 1, 1992, 23-34 (Gordon & Breach Science Publishers).";"Minimum: 0.1
Maximum: 10.0";"Minimum: 0.1
Maximum: 10.0";"The range of values for the feature ""Single_Epi_Cell_Size"" in the dataset is from the minimum value to the maximum value.";0.1;10.0;0.1;10.0;;;0.9090909090909091;0.9090909090909091;
367;Bare_Nuclei;15;breast-w;numeric;1.0;10.0;"**Author**: Dr. William H. Wolberg, University of Wisconsin  

**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/breast+cancer+wisconsin+(original)), [University of Wisconsin](http://pages.cs.wisc.edu/~olvi/uwmp/cancer.html) - 1995  

**Please cite**: See below, plus [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  



**Breast Cancer Wisconsin (Original) Data Set.** Features are computed from a digitized image of a fine needle aspirate (FNA) of a breast mass. They describe characteristics of the cell nuclei present in the image. The target feature records the prognosis (malignant or benign). [Original data available here](ftp://ftp.cs.wisc.edu/math-prog/cpo-dataset/machine-learn/cancer/)  



Current dataset was adapted to ARFF format from the UCI version. Sample code ID's were removed.  



! Note that there is also a related Breast Cancer Wisconsin (Diagnosis) Data Set with a different set of features, better known as [wdbc](https://www.openml.org/d/1510).



### Relevant Papers  



W.N. Street, W.H. Wolberg and O.L. Mangasarian. Nuclear feature extraction for breast tumor diagnosis. IS&T/SPIE 1993 International Symposium on Electronic Imaging: Science and Technology, volume 1905, pages 861-870, San Jose, CA, 1993. 



O.L. Mangasarian, W.N. Street and W.H. Wolberg. Breast cancer diagnosis and prognosis via linear programming. Operations Research, 43(4), pages 570-577, July-August 1995.  



### Citation request  



This breast cancer database was obtained from the University of Wisconsin Hospitals, Madison from Dr. William H. Wolberg.  If you publish results when using this database, then please include this information in your acknowledgments.  Also, please cite one or more of:



   1. O. L. Mangasarian and W. H. Wolberg: ""Cancer diagnosis via linear 

      programming"", SIAM News, Volume 23, Number 5, September 1990, pp 1 & 18.



   2. William H. Wolberg and O.L. Mangasarian: ""Multisurface method of 

      pattern separation for medical diagnosis applied to breast cytology"", 

      Proceedings of the National Academy of Sciences, U.S.A., Volume 87, 

      December 1990, pp 9193-9196.



   3. O. L. Mangasarian, R. Setiono, and W.H. Wolberg: ""Pattern recognition 

      via linear programming: Theory and application to medical diagnosis"", 

      in: ""Large-scale numerical optimization"", Thomas F. Coleman and Yuying

      Li, editors, SIAM Publications, Philadelphia 1990, pp 22-30.



   4. K. P. Bennett & O. L. Mangasarian: ""Robust linear programming 

      discrimination of two linearly inseparable sets"", Optimization Methods

      and Software 1, 1992, 23-34 (Gordon & Breach Science Publishers).";Minimum: 0 Maximum: 10;Minimum: 0 Maximum: 10;The range of values for the feature Bare_Nuclei in the dataset is from 1 to 10.;0.0;10.0;0.0;10.0;;;0.9;0.9;
368;Bland_Chromatin;15;breast-w;numeric;1.0;10.0;"**Author**: Dr. William H. Wolberg, University of Wisconsin  

**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/breast+cancer+wisconsin+(original)), [University of Wisconsin](http://pages.cs.wisc.edu/~olvi/uwmp/cancer.html) - 1995  

**Please cite**: See below, plus [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  



**Breast Cancer Wisconsin (Original) Data Set.** Features are computed from a digitized image of a fine needle aspirate (FNA) of a breast mass. They describe characteristics of the cell nuclei present in the image. The target feature records the prognosis (malignant or benign). [Original data available here](ftp://ftp.cs.wisc.edu/math-prog/cpo-dataset/machine-learn/cancer/)  



Current dataset was adapted to ARFF format from the UCI version. Sample code ID's were removed.  



! Note that there is also a related Breast Cancer Wisconsin (Diagnosis) Data Set with a different set of features, better known as [wdbc](https://www.openml.org/d/1510).



### Relevant Papers  



W.N. Street, W.H. Wolberg and O.L. Mangasarian. Nuclear feature extraction for breast tumor diagnosis. IS&T/SPIE 1993 International Symposium on Electronic Imaging: Science and Technology, volume 1905, pages 861-870, San Jose, CA, 1993. 



O.L. Mangasarian, W.N. Street and W.H. Wolberg. Breast cancer diagnosis and prognosis via linear programming. Operations Research, 43(4), pages 570-577, July-August 1995.  



### Citation request  



This breast cancer database was obtained from the University of Wisconsin Hospitals, Madison from Dr. William H. Wolberg.  If you publish results when using this database, then please include this information in your acknowledgments.  Also, please cite one or more of:



   1. O. L. Mangasarian and W. H. Wolberg: ""Cancer diagnosis via linear 

      programming"", SIAM News, Volume 23, Number 5, September 1990, pp 1 & 18.



   2. William H. Wolberg and O.L. Mangasarian: ""Multisurface method of 

      pattern separation for medical diagnosis applied to breast cytology"", 

      Proceedings of the National Academy of Sciences, U.S.A., Volume 87, 

      December 1990, pp 9193-9196.



   3. O. L. Mangasarian, R. Setiono, and W.H. Wolberg: ""Pattern recognition 

      via linear programming: Theory and application to medical diagnosis"", 

      in: ""Large-scale numerical optimization"", Thomas F. Coleman and Yuying

      Li, editors, SIAM Publications, Philadelphia 1990, pp 22-30.



   4. K. P. Bennett & O. L. Mangasarian: ""Robust linear programming 

      discrimination of two linearly inseparable sets"", Optimization Methods

      and Software 1, 1992, 23-34 (Gordon & Breach Science Publishers).";"Minimum: 1
Maximum: 10";"Minimum: 1
Maximum: 10";"The range of values for the feature ""Bland_Chromatin"" is from 1 to 10.";1.0;10.0;1.0;10.0;;;1.0;1.0;
369;Normal_Nucleoli;15;breast-w;numeric;1.0;10.0;"**Author**: Dr. William H. Wolberg, University of Wisconsin  

**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/breast+cancer+wisconsin+(original)), [University of Wisconsin](http://pages.cs.wisc.edu/~olvi/uwmp/cancer.html) - 1995  

**Please cite**: See below, plus [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  



**Breast Cancer Wisconsin (Original) Data Set.** Features are computed from a digitized image of a fine needle aspirate (FNA) of a breast mass. They describe characteristics of the cell nuclei present in the image. The target feature records the prognosis (malignant or benign). [Original data available here](ftp://ftp.cs.wisc.edu/math-prog/cpo-dataset/machine-learn/cancer/)  



Current dataset was adapted to ARFF format from the UCI version. Sample code ID's were removed.  



! Note that there is also a related Breast Cancer Wisconsin (Diagnosis) Data Set with a different set of features, better known as [wdbc](https://www.openml.org/d/1510).



### Relevant Papers  



W.N. Street, W.H. Wolberg and O.L. Mangasarian. Nuclear feature extraction for breast tumor diagnosis. IS&T/SPIE 1993 International Symposium on Electronic Imaging: Science and Technology, volume 1905, pages 861-870, San Jose, CA, 1993. 



O.L. Mangasarian, W.N. Street and W.H. Wolberg. Breast cancer diagnosis and prognosis via linear programming. Operations Research, 43(4), pages 570-577, July-August 1995.  



### Citation request  



This breast cancer database was obtained from the University of Wisconsin Hospitals, Madison from Dr. William H. Wolberg.  If you publish results when using this database, then please include this information in your acknowledgments.  Also, please cite one or more of:



   1. O. L. Mangasarian and W. H. Wolberg: ""Cancer diagnosis via linear 

      programming"", SIAM News, Volume 23, Number 5, September 1990, pp 1 & 18.



   2. William H. Wolberg and O.L. Mangasarian: ""Multisurface method of 

      pattern separation for medical diagnosis applied to breast cytology"", 

      Proceedings of the National Academy of Sciences, U.S.A., Volume 87, 

      December 1990, pp 9193-9196.



   3. O. L. Mangasarian, R. Setiono, and W.H. Wolberg: ""Pattern recognition 

      via linear programming: Theory and application to medical diagnosis"", 

      in: ""Large-scale numerical optimization"", Thomas F. Coleman and Yuying

      Li, editors, SIAM Publications, Philadelphia 1990, pp 22-30.



   4. K. P. Bennett & O. L. Mangasarian: ""Robust linear programming 

      discrimination of two linearly inseparable sets"", Optimization Methods

      and Software 1, 1992, 23-34 (Gordon & Breach Science Publishers).";"Minimum: 0
Maximum: 10";"Minimum: 0
Maximum: 10";The range of values for the feature Normal_Nucleoli is 1 to 10.;0.0;10.0;0.0;10.0;;;0.9;0.9;
370;Mitoses;15;breast-w;numeric;1.0;10.0;"**Author**: Dr. William H. Wolberg, University of Wisconsin  

**Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/breast+cancer+wisconsin+(original)), [University of Wisconsin](http://pages.cs.wisc.edu/~olvi/uwmp/cancer.html) - 1995  

**Please cite**: See below, plus [UCI](https://archive.ics.uci.edu/ml/citation_policy.html)  



**Breast Cancer Wisconsin (Original) Data Set.** Features are computed from a digitized image of a fine needle aspirate (FNA) of a breast mass. They describe characteristics of the cell nuclei present in the image. The target feature records the prognosis (malignant or benign). [Original data available here](ftp://ftp.cs.wisc.edu/math-prog/cpo-dataset/machine-learn/cancer/)  



Current dataset was adapted to ARFF format from the UCI version. Sample code ID's were removed.  



! Note that there is also a related Breast Cancer Wisconsin (Diagnosis) Data Set with a different set of features, better known as [wdbc](https://www.openml.org/d/1510).



### Relevant Papers  



W.N. Street, W.H. Wolberg and O.L. Mangasarian. Nuclear feature extraction for breast tumor diagnosis. IS&T/SPIE 1993 International Symposium on Electronic Imaging: Science and Technology, volume 1905, pages 861-870, San Jose, CA, 1993. 



O.L. Mangasarian, W.N. Street and W.H. Wolberg. Breast cancer diagnosis and prognosis via linear programming. Operations Research, 43(4), pages 570-577, July-August 1995.  



### Citation request  



This breast cancer database was obtained from the University of Wisconsin Hospitals, Madison from Dr. William H. Wolberg.  If you publish results when using this database, then please include this information in your acknowledgments.  Also, please cite one or more of:



   1. O. L. Mangasarian and W. H. Wolberg: ""Cancer diagnosis via linear 

      programming"", SIAM News, Volume 23, Number 5, September 1990, pp 1 & 18.



   2. William H. Wolberg and O.L. Mangasarian: ""Multisurface method of 

      pattern separation for medical diagnosis applied to breast cytology"", 

      Proceedings of the National Academy of Sciences, U.S.A., Volume 87, 

      December 1990, pp 9193-9196.



   3. O. L. Mangasarian, R. Setiono, and W.H. Wolberg: ""Pattern recognition 

      via linear programming: Theory and application to medical diagnosis"", 

      in: ""Large-scale numerical optimization"", Thomas F. Coleman and Yuying

      Li, editors, SIAM Publications, Philadelphia 1990, pp 22-30.



   4. K. P. Bennett & O. L. Mangasarian: ""Robust linear programming 

      discrimination of two linearly inseparable sets"", Optimization Methods

      and Software 1, 1992, 23-34 (Gordon & Breach Science Publishers).";"Minimum: 0
Maximum: 10";"Minimum: 0
Maximum: 10";"The range of values for the feature ""Mitoses"" is from 1 to 10.";0.0;10.0;0.0;10.0;;;0.9;0.9;
371;Rep;188;eucalyptus;numeric;1.0;22.0;"**Author**: Bruce Bulloch    
**Source**: [WEKA Dataset Collection](http://www.cs.waikato.ac.nz/ml/weka/datasets.html) - part of the agridatasets archive. [This is the true source](http://tunedit.org/repo/Data/Agricultural/eucalyptus.arff)  
**Please cite**: None  

**Eucalyptus Soil Conservation**  
The objective was to determine which seedlots in a species are best for soil conservation in seasonally dry hill country. Determination is found by measurement of height, diameter by height, survival, and other contributing factors. 
 
It is important to note that eucalypt trial methods changed over time; earlier trials included mostly 15 - 30cm tall seedling grown in peat plots and the later trials have included mostly three replications of eight trees grown. This change may contribute to less significant results.

Experimental data recording procedures which require noting include:
 - instances with no data recorded due to experimental recording procedures
   require that the absence of a species from one replicate at a site was
   treated as a missing value, but if absent from two or more replicates at a
   site the species was excluded from the site's analyses.
 - missing data for survival, vigour, insect resistance, stem form, crown form
   and utility especially for the data recorded at the Morea Station; this 
   could indicate the death of species in these areas or a lack in collection
   of data.  

### Attribute Information  
 
  1.  Abbrev - site abbreviation - enumerated
  2.  Rep - site rep - integer
  3.  Locality - site locality in the North Island - enumerated
  4.  Map_Ref - map location in the North Island - enumerated
  5.  Latitude - latitude approximation - enumerated
  6.  Altitude - altitude approximation - integer
  7.  Rainfall - rainfall (mm pa) - integer
  8.  Frosts - frosts (deg. c) - integer
  9.  Year - year of planting - integer
  10. Sp - species code - enumerated
  11. PMCno - seedlot number - integer
  12. DBH - best diameter base height (cm) - real
  13. Ht - height (m) - real
  14. Surv - survival - integer
  15. Vig - vigour - real
  16. Ins_res - insect resistance - real
  17. Stem_Fm - stem form - real
  18. Crown_Fm - crown form - real
  19. Brnch_Fm - branch form - real
  Class:
  20. Utility - utility rating - enumerated

### Relevant papers

Bulluch B. T., (1992) Eucalyptus Species Selection for Soil Conservation in Seasonally Dry Hill Country - Twelfth Year Assessment  New Zealand Journal of Forestry Science 21(1): 10 - 31 (1991)  

Kirsten Thomson and Robert J. McQueen (1996) Machine Learning Applied to Fourteen Agricultural Datasets. University of Waikato Research Report  
https://www.cs.waikato.ac.nz/ml/publications/1996/Thomson-McQueen-96.pdf + the original publication:";"Minimum: 0 
Maximum: 10";"Minimum: 0 
Maximum: 10";"Min Rep: 1 
Max Rep: 3";0.0;10.0;0.0;10.0;;;0.4090909090909091;0.4090909090909091;
372;Altitude;188;eucalyptus;numeric;70.0;300.0;"**Author**: Bruce Bulloch    
**Source**: [WEKA Dataset Collection](http://www.cs.waikato.ac.nz/ml/weka/datasets.html) - part of the agridatasets archive. [This is the true source](http://tunedit.org/repo/Data/Agricultural/eucalyptus.arff)  
**Please cite**: None  

**Eucalyptus Soil Conservation**  
The objective was to determine which seedlots in a species are best for soil conservation in seasonally dry hill country. Determination is found by measurement of height, diameter by height, survival, and other contributing factors. 
 
It is important to note that eucalypt trial methods changed over time; earlier trials included mostly 15 - 30cm tall seedling grown in peat plots and the later trials have included mostly three replications of eight trees grown. This change may contribute to less significant results.

Experimental data recording procedures which require noting include:
 - instances with no data recorded due to experimental recording procedures
   require that the absence of a species from one replicate at a site was
   treated as a missing value, but if absent from two or more replicates at a
   site the species was excluded from the site's analyses.
 - missing data for survival, vigour, insect resistance, stem form, crown form
   and utility especially for the data recorded at the Morea Station; this 
   could indicate the death of species in these areas or a lack in collection
   of data.  

### Attribute Information  
 
  1.  Abbrev - site abbreviation - enumerated
  2.  Rep - site rep - integer
  3.  Locality - site locality in the North Island - enumerated
  4.  Map_Ref - map location in the North Island - enumerated
  5.  Latitude - latitude approximation - enumerated
  6.  Altitude - altitude approximation - integer
  7.  Rainfall - rainfall (mm pa) - integer
  8.  Frosts - frosts (deg. c) - integer
  9.  Year - year of planting - integer
  10. Sp - species code - enumerated
  11. PMCno - seedlot number - integer
  12. DBH - best diameter base height (cm) - real
  13. Ht - height (m) - real
  14. Surv - survival - integer
  15. Vig - vigour - real
  16. Ins_res - insect resistance - real
  17. Stem_Fm - stem form - real
  18. Crown_Fm - crown form - real
  19. Brnch_Fm - branch form - real
  Class:
  20. Utility - utility rating - enumerated

### Relevant papers

Bulluch B. T., (1992) Eucalyptus Species Selection for Soil Conservation in Seasonally Dry Hill Country - Twelfth Year Assessment  New Zealand Journal of Forestry Science 21(1): 10 - 31 (1991)  

Kirsten Thomson and Robert J. McQueen (1996) Machine Learning Applied to Fourteen Agricultural Datasets. University of Waikato Research Report  
https://www.cs.waikato.ac.nz/ml/publications/1996/Thomson-McQueen-96.pdf + the original publication:";"Min: -500 meters
Max: 8848 meters";"Min: -500 meters
Max: 8848 meters";Altitude range: min=integer, max=integer;-500.0;8848.0;-500.0;8848.0;;;0.024604193410355156;0.024604193410355156;
373;Rainfall;188;eucalyptus;numeric;850.0;1750.0;"**Author**: Bruce Bulloch    
**Source**: [WEKA Dataset Collection](http://www.cs.waikato.ac.nz/ml/weka/datasets.html) - part of the agridatasets archive. [This is the true source](http://tunedit.org/repo/Data/Agricultural/eucalyptus.arff)  
**Please cite**: None  

**Eucalyptus Soil Conservation**  
The objective was to determine which seedlots in a species are best for soil conservation in seasonally dry hill country. Determination is found by measurement of height, diameter by height, survival, and other contributing factors. 
 
It is important to note that eucalypt trial methods changed over time; earlier trials included mostly 15 - 30cm tall seedling grown in peat plots and the later trials have included mostly three replications of eight trees grown. This change may contribute to less significant results.

Experimental data recording procedures which require noting include:
 - instances with no data recorded due to experimental recording procedures
   require that the absence of a species from one replicate at a site was
   treated as a missing value, but if absent from two or more replicates at a
   site the species was excluded from the site's analyses.
 - missing data for survival, vigour, insect resistance, stem form, crown form
   and utility especially for the data recorded at the Morea Station; this 
   could indicate the death of species in these areas or a lack in collection
   of data.  

### Attribute Information  
 
  1.  Abbrev - site abbreviation - enumerated
  2.  Rep - site rep - integer
  3.  Locality - site locality in the North Island - enumerated
  4.  Map_Ref - map location in the North Island - enumerated
  5.  Latitude - latitude approximation - enumerated
  6.  Altitude - altitude approximation - integer
  7.  Rainfall - rainfall (mm pa) - integer
  8.  Frosts - frosts (deg. c) - integer
  9.  Year - year of planting - integer
  10. Sp - species code - enumerated
  11. PMCno - seedlot number - integer
  12. DBH - best diameter base height (cm) - real
  13. Ht - height (m) - real
  14. Surv - survival - integer
  15. Vig - vigour - real
  16. Ins_res - insect resistance - real
  17. Stem_Fm - stem form - real
  18. Crown_Fm - crown form - real
  19. Brnch_Fm - branch form - real
  Class:
  20. Utility - utility rating - enumerated

### Relevant papers

Bulluch B. T., (1992) Eucalyptus Species Selection for Soil Conservation in Seasonally Dry Hill Country - Twelfth Year Assessment  New Zealand Journal of Forestry Science 21(1): 10 - 31 (1991)  

Kirsten Thomson and Robert J. McQueen (1996) Machine Learning Applied to Fourteen Agricultural Datasets. University of Waikato Research Report  
https://www.cs.waikato.ac.nz/ml/publications/1996/Thomson-McQueen-96.pdf + the original publication:";0.1 mm to 1000 mm;0.1 mm to 1000 mm;"Min: 0 (mm pa)
Max: 2521 (mm pa)";0.1;1000.0;0.1;1000.0;;;0.08571918395336876;0.08571918395336876;
374;Frosts;188;eucalyptus;numeric;-3.0;-2.0;"**Author**: Bruce Bulloch    
**Source**: [WEKA Dataset Collection](http://www.cs.waikato.ac.nz/ml/weka/datasets.html) - part of the agridatasets archive. [This is the true source](http://tunedit.org/repo/Data/Agricultural/eucalyptus.arff)  
**Please cite**: None  

**Eucalyptus Soil Conservation**  
The objective was to determine which seedlots in a species are best for soil conservation in seasonally dry hill country. Determination is found by measurement of height, diameter by height, survival, and other contributing factors. 
 
It is important to note that eucalypt trial methods changed over time; earlier trials included mostly 15 - 30cm tall seedling grown in peat plots and the later trials have included mostly three replications of eight trees grown. This change may contribute to less significant results.

Experimental data recording procedures which require noting include:
 - instances with no data recorded due to experimental recording procedures
   require that the absence of a species from one replicate at a site was
   treated as a missing value, but if absent from two or more replicates at a
   site the species was excluded from the site's analyses.
 - missing data for survival, vigour, insect resistance, stem form, crown form
   and utility especially for the data recorded at the Morea Station; this 
   could indicate the death of species in these areas or a lack in collection
   of data.  

### Attribute Information  
 
  1.  Abbrev - site abbreviation - enumerated
  2.  Rep - site rep - integer
  3.  Locality - site locality in the North Island - enumerated
  4.  Map_Ref - map location in the North Island - enumerated
  5.  Latitude - latitude approximation - enumerated
  6.  Altitude - altitude approximation - integer
  7.  Rainfall - rainfall (mm pa) - integer
  8.  Frosts - frosts (deg. c) - integer
  9.  Year - year of planting - integer
  10. Sp - species code - enumerated
  11. PMCno - seedlot number - integer
  12. DBH - best diameter base height (cm) - real
  13. Ht - height (m) - real
  14. Surv - survival - integer
  15. Vig - vigour - real
  16. Ins_res - insect resistance - real
  17. Stem_Fm - stem form - real
  18. Crown_Fm - crown form - real
  19. Brnch_Fm - branch form - real
  Class:
  20. Utility - utility rating - enumerated

### Relevant papers

Bulluch B. T., (1992) Eucalyptus Species Selection for Soil Conservation in Seasonally Dry Hill Country - Twelfth Year Assessment  New Zealand Journal of Forestry Science 21(1): 10 - 31 (1991)  

Kirsten Thomson and Robert J. McQueen (1996) Machine Learning Applied to Fourteen Agricultural Datasets. University of Waikato Research Report  
https://www.cs.waikato.ac.nz/ml/publications/1996/Thomson-McQueen-96.pdf + the original publication:";"Minimum: -10
Maximum: 30";"Minimum: -10
Maximum: 30";Min: -6      Max: 28;-10.0;30.0;-10.0;30.0;;;0.025;0.025;
375;Year;188;eucalyptus;numeric;1980.0;1986.0;"**Author**: Bruce Bulloch    
**Source**: [WEKA Dataset Collection](http://www.cs.waikato.ac.nz/ml/weka/datasets.html) - part of the agridatasets archive. [This is the true source](http://tunedit.org/repo/Data/Agricultural/eucalyptus.arff)  
**Please cite**: None  

**Eucalyptus Soil Conservation**  
The objective was to determine which seedlots in a species are best for soil conservation in seasonally dry hill country. Determination is found by measurement of height, diameter by height, survival, and other contributing factors. 
 
It is important to note that eucalypt trial methods changed over time; earlier trials included mostly 15 - 30cm tall seedling grown in peat plots and the later trials have included mostly three replications of eight trees grown. This change may contribute to less significant results.

Experimental data recording procedures which require noting include:
 - instances with no data recorded due to experimental recording procedures
   require that the absence of a species from one replicate at a site was
   treated as a missing value, but if absent from two or more replicates at a
   site the species was excluded from the site's analyses.
 - missing data for survival, vigour, insect resistance, stem form, crown form
   and utility especially for the data recorded at the Morea Station; this 
   could indicate the death of species in these areas or a lack in collection
   of data.  

### Attribute Information  
 
  1.  Abbrev - site abbreviation - enumerated
  2.  Rep - site rep - integer
  3.  Locality - site locality in the North Island - enumerated
  4.  Map_Ref - map location in the North Island - enumerated
  5.  Latitude - latitude approximation - enumerated
  6.  Altitude - altitude approximation - integer
  7.  Rainfall - rainfall (mm pa) - integer
  8.  Frosts - frosts (deg. c) - integer
  9.  Year - year of planting - integer
  10. Sp - species code - enumerated
  11. PMCno - seedlot number - integer
  12. DBH - best diameter base height (cm) - real
  13. Ht - height (m) - real
  14. Surv - survival - integer
  15. Vig - vigour - real
  16. Ins_res - insect resistance - real
  17. Stem_Fm - stem form - real
  18. Crown_Fm - crown form - real
  19. Brnch_Fm - branch form - real
  Class:
  20. Utility - utility rating - enumerated

### Relevant papers

Bulluch B. T., (1992) Eucalyptus Species Selection for Soil Conservation in Seasonally Dry Hill Country - Twelfth Year Assessment  New Zealand Journal of Forestry Science 21(1): 10 - 31 (1991)  

Kirsten Thomson and Robert J. McQueen (1996) Machine Learning Applied to Fourteen Agricultural Datasets. University of Waikato Research Report  
https://www.cs.waikato.ac.nz/ml/publications/1996/Thomson-McQueen-96.pdf + the original publication:";"Min: 2000
Max: 2021";"Min: 2000
Max: 2021";"Min: 1963
Max: 1996";2000.0;2021.0;2000.0;2021.0;;;;;
376;PMCno;188;eucalyptus;numeric;1.0;3275.0;"**Author**: Bruce Bulloch    
**Source**: [WEKA Dataset Collection](http://www.cs.waikato.ac.nz/ml/weka/datasets.html) - part of the agridatasets archive. [This is the true source](http://tunedit.org/repo/Data/Agricultural/eucalyptus.arff)  
**Please cite**: None  

**Eucalyptus Soil Conservation**  
The objective was to determine which seedlots in a species are best for soil conservation in seasonally dry hill country. Determination is found by measurement of height, diameter by height, survival, and other contributing factors. 
 
It is important to note that eucalypt trial methods changed over time; earlier trials included mostly 15 - 30cm tall seedling grown in peat plots and the later trials have included mostly three replications of eight trees grown. This change may contribute to less significant results.

Experimental data recording procedures which require noting include:
 - instances with no data recorded due to experimental recording procedures
   require that the absence of a species from one replicate at a site was
   treated as a missing value, but if absent from two or more replicates at a
   site the species was excluded from the site's analyses.
 - missing data for survival, vigour, insect resistance, stem form, crown form
   and utility especially for the data recorded at the Morea Station; this 
   could indicate the death of species in these areas or a lack in collection
   of data.  

### Attribute Information  
 
  1.  Abbrev - site abbreviation - enumerated
  2.  Rep - site rep - integer
  3.  Locality - site locality in the North Island - enumerated
  4.  Map_Ref - map location in the North Island - enumerated
  5.  Latitude - latitude approximation - enumerated
  6.  Altitude - altitude approximation - integer
  7.  Rainfall - rainfall (mm pa) - integer
  8.  Frosts - frosts (deg. c) - integer
  9.  Year - year of planting - integer
  10. Sp - species code - enumerated
  11. PMCno - seedlot number - integer
  12. DBH - best diameter base height (cm) - real
  13. Ht - height (m) - real
  14. Surv - survival - integer
  15. Vig - vigour - real
  16. Ins_res - insect resistance - real
  17. Stem_Fm - stem form - real
  18. Crown_Fm - crown form - real
  19. Brnch_Fm - branch form - real
  Class:
  20. Utility - utility rating - enumerated

### Relevant papers

Bulluch B. T., (1992) Eucalyptus Species Selection for Soil Conservation in Seasonally Dry Hill Country - Twelfth Year Assessment  New Zealand Journal of Forestry Science 21(1): 10 - 31 (1991)  

Kirsten Thomson and Robert J. McQueen (1996) Machine Learning Applied to Fourteen Agricultural Datasets. University of Waikato Research Report  
https://www.cs.waikato.ac.nz/ml/publications/1996/Thomson-McQueen-96.pdf + the original publication:";"Minimum: 1
Maximum: 1000";"Minimum: 1
Maximum: 1000";"The range of values for the feature ""PMCno"" in the dataset is from 1 to 20.";1.0;1000.0;1.0;1000.0;;;0.30513133781307267;0.30513133781307267;
377;DBH;188;eucalyptus;numeric;0.58;42085.0;"**Author**: Bruce Bulloch    
**Source**: [WEKA Dataset Collection](http://www.cs.waikato.ac.nz/ml/weka/datasets.html) - part of the agridatasets archive. [This is the true source](http://tunedit.org/repo/Data/Agricultural/eucalyptus.arff)  
**Please cite**: None  

**Eucalyptus Soil Conservation**  
The objective was to determine which seedlots in a species are best for soil conservation in seasonally dry hill country. Determination is found by measurement of height, diameter by height, survival, and other contributing factors. 
 
It is important to note that eucalypt trial methods changed over time; earlier trials included mostly 15 - 30cm tall seedling grown in peat plots and the later trials have included mostly three replications of eight trees grown. This change may contribute to less significant results.

Experimental data recording procedures which require noting include:
 - instances with no data recorded due to experimental recording procedures
   require that the absence of a species from one replicate at a site was
   treated as a missing value, but if absent from two or more replicates at a
   site the species was excluded from the site's analyses.
 - missing data for survival, vigour, insect resistance, stem form, crown form
   and utility especially for the data recorded at the Morea Station; this 
   could indicate the death of species in these areas or a lack in collection
   of data.  

### Attribute Information  
 
  1.  Abbrev - site abbreviation - enumerated
  2.  Rep - site rep - integer
  3.  Locality - site locality in the North Island - enumerated
  4.  Map_Ref - map location in the North Island - enumerated
  5.  Latitude - latitude approximation - enumerated
  6.  Altitude - altitude approximation - integer
  7.  Rainfall - rainfall (mm pa) - integer
  8.  Frosts - frosts (deg. c) - integer
  9.  Year - year of planting - integer
  10. Sp - species code - enumerated
  11. PMCno - seedlot number - integer
  12. DBH - best diameter base height (cm) - real
  13. Ht - height (m) - real
  14. Surv - survival - integer
  15. Vig - vigour - real
  16. Ins_res - insect resistance - real
  17. Stem_Fm - stem form - real
  18. Crown_Fm - crown form - real
  19. Brnch_Fm - branch form - real
  Class:
  20. Utility - utility rating - enumerated

### Relevant papers

Bulluch B. T., (1992) Eucalyptus Species Selection for Soil Conservation in Seasonally Dry Hill Country - Twelfth Year Assessment  New Zealand Journal of Forestry Science 21(1): 10 - 31 (1991)  

Kirsten Thomson and Robert J. McQueen (1996) Machine Learning Applied to Fourteen Agricultural Datasets. University of Waikato Research Report  
https://www.cs.waikato.ac.nz/ml/publications/1996/Thomson-McQueen-96.pdf + the original publication:";min: 0.1 max: 100;min: 0.1 max: 100;"The range of values for the feature ""DBH"" in the dataset is from the minimum value of 1.0 cm to the maximum value of 43.1 cm.";0.1;100.0;0.1;100.0;;;0.0023623674999821787;0.0023623674999821787;
378;Ht;188;eucalyptus;numeric;1.12;21.79;"**Author**: Bruce Bulloch    
**Source**: [WEKA Dataset Collection](http://www.cs.waikato.ac.nz/ml/weka/datasets.html) - part of the agridatasets archive. [This is the true source](http://tunedit.org/repo/Data/Agricultural/eucalyptus.arff)  
**Please cite**: None  

**Eucalyptus Soil Conservation**  
The objective was to determine which seedlots in a species are best for soil conservation in seasonally dry hill country. Determination is found by measurement of height, diameter by height, survival, and other contributing factors. 
 
It is important to note that eucalypt trial methods changed over time; earlier trials included mostly 15 - 30cm tall seedling grown in peat plots and the later trials have included mostly three replications of eight trees grown. This change may contribute to less significant results.

Experimental data recording procedures which require noting include:
 - instances with no data recorded due to experimental recording procedures
   require that the absence of a species from one replicate at a site was
   treated as a missing value, but if absent from two or more replicates at a
   site the species was excluded from the site's analyses.
 - missing data for survival, vigour, insect resistance, stem form, crown form
   and utility especially for the data recorded at the Morea Station; this 
   could indicate the death of species in these areas or a lack in collection
   of data.  

### Attribute Information  
 
  1.  Abbrev - site abbreviation - enumerated
  2.  Rep - site rep - integer
  3.  Locality - site locality in the North Island - enumerated
  4.  Map_Ref - map location in the North Island - enumerated
  5.  Latitude - latitude approximation - enumerated
  6.  Altitude - altitude approximation - integer
  7.  Rainfall - rainfall (mm pa) - integer
  8.  Frosts - frosts (deg. c) - integer
  9.  Year - year of planting - integer
  10. Sp - species code - enumerated
  11. PMCno - seedlot number - integer
  12. DBH - best diameter base height (cm) - real
  13. Ht - height (m) - real
  14. Surv - survival - integer
  15. Vig - vigour - real
  16. Ins_res - insect resistance - real
  17. Stem_Fm - stem form - real
  18. Crown_Fm - crown form - real
  19. Brnch_Fm - branch form - real
  Class:
  20. Utility - utility rating - enumerated

### Relevant papers

Bulluch B. T., (1992) Eucalyptus Species Selection for Soil Conservation in Seasonally Dry Hill Country - Twelfth Year Assessment  New Zealand Journal of Forestry Science 21(1): 10 - 31 (1991)  

Kirsten Thomson and Robert J. McQueen (1996) Machine Learning Applied to Fourteen Agricultural Datasets. University of Waikato Research Report  
https://www.cs.waikato.ac.nz/ml/publications/1996/Thomson-McQueen-96.pdf + the original publication:";"Minimum: 140 cm
Maximum: 210 cm";"Minimum: 140 cm
Maximum: 210 cm";"Min: 0.0
Max: 9.2";140.0;210.0;140.0;210.0;;;;;
379;Surv;188;eucalyptus;numeric;1.5;100.0;"**Author**: Bruce Bulloch    
**Source**: [WEKA Dataset Collection](http://www.cs.waikato.ac.nz/ml/weka/datasets.html) - part of the agridatasets archive. [This is the true source](http://tunedit.org/repo/Data/Agricultural/eucalyptus.arff)  
**Please cite**: None  

**Eucalyptus Soil Conservation**  
The objective was to determine which seedlots in a species are best for soil conservation in seasonally dry hill country. Determination is found by measurement of height, diameter by height, survival, and other contributing factors. 
 
It is important to note that eucalypt trial methods changed over time; earlier trials included mostly 15 - 30cm tall seedling grown in peat plots and the later trials have included mostly three replications of eight trees grown. This change may contribute to less significant results.

Experimental data recording procedures which require noting include:
 - instances with no data recorded due to experimental recording procedures
   require that the absence of a species from one replicate at a site was
   treated as a missing value, but if absent from two or more replicates at a
   site the species was excluded from the site's analyses.
 - missing data for survival, vigour, insect resistance, stem form, crown form
   and utility especially for the data recorded at the Morea Station; this 
   could indicate the death of species in these areas or a lack in collection
   of data.  

### Attribute Information  
 
  1.  Abbrev - site abbreviation - enumerated
  2.  Rep - site rep - integer
  3.  Locality - site locality in the North Island - enumerated
  4.  Map_Ref - map location in the North Island - enumerated
  5.  Latitude - latitude approximation - enumerated
  6.  Altitude - altitude approximation - integer
  7.  Rainfall - rainfall (mm pa) - integer
  8.  Frosts - frosts (deg. c) - integer
  9.  Year - year of planting - integer
  10. Sp - species code - enumerated
  11. PMCno - seedlot number - integer
  12. DBH - best diameter base height (cm) - real
  13. Ht - height (m) - real
  14. Surv - survival - integer
  15. Vig - vigour - real
  16. Ins_res - insect resistance - real
  17. Stem_Fm - stem form - real
  18. Crown_Fm - crown form - real
  19. Brnch_Fm - branch form - real
  Class:
  20. Utility - utility rating - enumerated

### Relevant papers

Bulluch B. T., (1992) Eucalyptus Species Selection for Soil Conservation in Seasonally Dry Hill Country - Twelfth Year Assessment  New Zealand Journal of Forestry Science 21(1): 10 - 31 (1991)  

Kirsten Thomson and Robert J. McQueen (1996) Machine Learning Applied to Fourteen Agricultural Datasets. University of Waikato Research Report  
https://www.cs.waikato.ac.nz/ml/publications/1996/Thomson-McQueen-96.pdf + the original publication:";1 0;1 0;"Min: 0
Max: 100";1.0;0.0;1.0;0.0;;;;;
380;Vig;188;eucalyptus;numeric;0.5;5.0;"**Author**: Bruce Bulloch    
**Source**: [WEKA Dataset Collection](http://www.cs.waikato.ac.nz/ml/weka/datasets.html) - part of the agridatasets archive. [This is the true source](http://tunedit.org/repo/Data/Agricultural/eucalyptus.arff)  
**Please cite**: None  

**Eucalyptus Soil Conservation**  
The objective was to determine which seedlots in a species are best for soil conservation in seasonally dry hill country. Determination is found by measurement of height, diameter by height, survival, and other contributing factors. 
 
It is important to note that eucalypt trial methods changed over time; earlier trials included mostly 15 - 30cm tall seedling grown in peat plots and the later trials have included mostly three replications of eight trees grown. This change may contribute to less significant results.

Experimental data recording procedures which require noting include:
 - instances with no data recorded due to experimental recording procedures
   require that the absence of a species from one replicate at a site was
   treated as a missing value, but if absent from two or more replicates at a
   site the species was excluded from the site's analyses.
 - missing data for survival, vigour, insect resistance, stem form, crown form
   and utility especially for the data recorded at the Morea Station; this 
   could indicate the death of species in these areas or a lack in collection
   of data.  

### Attribute Information  
 
  1.  Abbrev - site abbreviation - enumerated
  2.  Rep - site rep - integer
  3.  Locality - site locality in the North Island - enumerated
  4.  Map_Ref - map location in the North Island - enumerated
  5.  Latitude - latitude approximation - enumerated
  6.  Altitude - altitude approximation - integer
  7.  Rainfall - rainfall (mm pa) - integer
  8.  Frosts - frosts (deg. c) - integer
  9.  Year - year of planting - integer
  10. Sp - species code - enumerated
  11. PMCno - seedlot number - integer
  12. DBH - best diameter base height (cm) - real
  13. Ht - height (m) - real
  14. Surv - survival - integer
  15. Vig - vigour - real
  16. Ins_res - insect resistance - real
  17. Stem_Fm - stem form - real
  18. Crown_Fm - crown form - real
  19. Brnch_Fm - branch form - real
  Class:
  20. Utility - utility rating - enumerated

### Relevant papers

Bulluch B. T., (1992) Eucalyptus Species Selection for Soil Conservation in Seasonally Dry Hill Country - Twelfth Year Assessment  New Zealand Journal of Forestry Science 21(1): 10 - 31 (1991)  

Kirsten Thomson and Robert J. McQueen (1996) Machine Learning Applied to Fourteen Agricultural Datasets. University of Waikato Research Report  
https://www.cs.waikato.ac.nz/ml/publications/1996/Thomson-McQueen-96.pdf + the original publication:";Min = 0.01 Max = 10;Min = 0.01 Max = 10;"The range of values for the feature ""Vig"" is not provided in the dataset description.";0.01;10.0;0.01;10.0;;;0.45045045045045046;0.45045045045045046;
381;Ins_res;188;eucalyptus;numeric;0.0;4.5;"**Author**: Bruce Bulloch    
**Source**: [WEKA Dataset Collection](http://www.cs.waikato.ac.nz/ml/weka/datasets.html) - part of the agridatasets archive. [This is the true source](http://tunedit.org/repo/Data/Agricultural/eucalyptus.arff)  
**Please cite**: None  

**Eucalyptus Soil Conservation**  
The objective was to determine which seedlots in a species are best for soil conservation in seasonally dry hill country. Determination is found by measurement of height, diameter by height, survival, and other contributing factors. 
 
It is important to note that eucalypt trial methods changed over time; earlier trials included mostly 15 - 30cm tall seedling grown in peat plots and the later trials have included mostly three replications of eight trees grown. This change may contribute to less significant results.

Experimental data recording procedures which require noting include:
 - instances with no data recorded due to experimental recording procedures
   require that the absence of a species from one replicate at a site was
   treated as a missing value, but if absent from two or more replicates at a
   site the species was excluded from the site's analyses.
 - missing data for survival, vigour, insect resistance, stem form, crown form
   and utility especially for the data recorded at the Morea Station; this 
   could indicate the death of species in these areas or a lack in collection
   of data.  

### Attribute Information  
 
  1.  Abbrev - site abbreviation - enumerated
  2.  Rep - site rep - integer
  3.  Locality - site locality in the North Island - enumerated
  4.  Map_Ref - map location in the North Island - enumerated
  5.  Latitude - latitude approximation - enumerated
  6.  Altitude - altitude approximation - integer
  7.  Rainfall - rainfall (mm pa) - integer
  8.  Frosts - frosts (deg. c) - integer
  9.  Year - year of planting - integer
  10. Sp - species code - enumerated
  11. PMCno - seedlot number - integer
  12. DBH - best diameter base height (cm) - real
  13. Ht - height (m) - real
  14. Surv - survival - integer
  15. Vig - vigour - real
  16. Ins_res - insect resistance - real
  17. Stem_Fm - stem form - real
  18. Crown_Fm - crown form - real
  19. Brnch_Fm - branch form - real
  Class:
  20. Utility - utility rating - enumerated

### Relevant papers

Bulluch B. T., (1992) Eucalyptus Species Selection for Soil Conservation in Seasonally Dry Hill Country - Twelfth Year Assessment  New Zealand Journal of Forestry Science 21(1): 10 - 31 (1991)  

Kirsten Thomson and Robert J. McQueen (1996) Machine Learning Applied to Fourteen Agricultural Datasets. University of Waikato Research Report  
https://www.cs.waikato.ac.nz/ml/publications/1996/Thomson-McQueen-96.pdf + the original publication:";"Minimum: 0
Maximum: 10000";"Minimum: 0
Maximum: 10000";The range of values for the feature Ins_res (insect resistance) is not provided in the dataset description.;0.0;10000.0;0.0;10000.0;;;0.00045;0.00045;
382;Stem_Fm;188;eucalyptus;numeric;0.0;5.0;"**Author**: Bruce Bulloch    
**Source**: [WEKA Dataset Collection](http://www.cs.waikato.ac.nz/ml/weka/datasets.html) - part of the agridatasets archive. [This is the true source](http://tunedit.org/repo/Data/Agricultural/eucalyptus.arff)  
**Please cite**: None  

**Eucalyptus Soil Conservation**  
The objective was to determine which seedlots in a species are best for soil conservation in seasonally dry hill country. Determination is found by measurement of height, diameter by height, survival, and other contributing factors. 
 
It is important to note that eucalypt trial methods changed over time; earlier trials included mostly 15 - 30cm tall seedling grown in peat plots and the later trials have included mostly three replications of eight trees grown. This change may contribute to less significant results.

Experimental data recording procedures which require noting include:
 - instances with no data recorded due to experimental recording procedures
   require that the absence of a species from one replicate at a site was
   treated as a missing value, but if absent from two or more replicates at a
   site the species was excluded from the site's analyses.
 - missing data for survival, vigour, insect resistance, stem form, crown form
   and utility especially for the data recorded at the Morea Station; this 
   could indicate the death of species in these areas or a lack in collection
   of data.  

### Attribute Information  
 
  1.  Abbrev - site abbreviation - enumerated
  2.  Rep - site rep - integer
  3.  Locality - site locality in the North Island - enumerated
  4.  Map_Ref - map location in the North Island - enumerated
  5.  Latitude - latitude approximation - enumerated
  6.  Altitude - altitude approximation - integer
  7.  Rainfall - rainfall (mm pa) - integer
  8.  Frosts - frosts (deg. c) - integer
  9.  Year - year of planting - integer
  10. Sp - species code - enumerated
  11. PMCno - seedlot number - integer
  12. DBH - best diameter base height (cm) - real
  13. Ht - height (m) - real
  14. Surv - survival - integer
  15. Vig - vigour - real
  16. Ins_res - insect resistance - real
  17. Stem_Fm - stem form - real
  18. Crown_Fm - crown form - real
  19. Brnch_Fm - branch form - real
  Class:
  20. Utility - utility rating - enumerated

### Relevant papers

Bulluch B. T., (1992) Eucalyptus Species Selection for Soil Conservation in Seasonally Dry Hill Country - Twelfth Year Assessment  New Zealand Journal of Forestry Science 21(1): 10 - 31 (1991)  

Kirsten Thomson and Robert J. McQueen (1996) Machine Learning Applied to Fourteen Agricultural Datasets. University of Waikato Research Report  
https://www.cs.waikato.ac.nz/ml/publications/1996/Thomson-McQueen-96.pdf + the original publication:";"Minimum: 0
Maximum: 100";"Minimum: 0
Maximum: 100";"min(Stem_Fm) = 1.0
max(Stem_Fm) = 5.0";0.0;100.0;0.0;100.0;;;0.05;0.05;
383;Crown_Fm;188;eucalyptus;numeric;0.0;5.0;"**Author**: Bruce Bulloch    
**Source**: [WEKA Dataset Collection](http://www.cs.waikato.ac.nz/ml/weka/datasets.html) - part of the agridatasets archive. [This is the true source](http://tunedit.org/repo/Data/Agricultural/eucalyptus.arff)  
**Please cite**: None  

**Eucalyptus Soil Conservation**  
The objective was to determine which seedlots in a species are best for soil conservation in seasonally dry hill country. Determination is found by measurement of height, diameter by height, survival, and other contributing factors. 
 
It is important to note that eucalypt trial methods changed over time; earlier trials included mostly 15 - 30cm tall seedling grown in peat plots and the later trials have included mostly three replications of eight trees grown. This change may contribute to less significant results.

Experimental data recording procedures which require noting include:
 - instances with no data recorded due to experimental recording procedures
   require that the absence of a species from one replicate at a site was
   treated as a missing value, but if absent from two or more replicates at a
   site the species was excluded from the site's analyses.
 - missing data for survival, vigour, insect resistance, stem form, crown form
   and utility especially for the data recorded at the Morea Station; this 
   could indicate the death of species in these areas or a lack in collection
   of data.  

### Attribute Information  
 
  1.  Abbrev - site abbreviation - enumerated
  2.  Rep - site rep - integer
  3.  Locality - site locality in the North Island - enumerated
  4.  Map_Ref - map location in the North Island - enumerated
  5.  Latitude - latitude approximation - enumerated
  6.  Altitude - altitude approximation - integer
  7.  Rainfall - rainfall (mm pa) - integer
  8.  Frosts - frosts (deg. c) - integer
  9.  Year - year of planting - integer
  10. Sp - species code - enumerated
  11. PMCno - seedlot number - integer
  12. DBH - best diameter base height (cm) - real
  13. Ht - height (m) - real
  14. Surv - survival - integer
  15. Vig - vigour - real
  16. Ins_res - insect resistance - real
  17. Stem_Fm - stem form - real
  18. Crown_Fm - crown form - real
  19. Brnch_Fm - branch form - real
  Class:
  20. Utility - utility rating - enumerated

### Relevant papers

Bulluch B. T., (1992) Eucalyptus Species Selection for Soil Conservation in Seasonally Dry Hill Country - Twelfth Year Assessment  New Zealand Journal of Forestry Science 21(1): 10 - 31 (1991)  

Kirsten Thomson and Robert J. McQueen (1996) Machine Learning Applied to Fourteen Agricultural Datasets. University of Waikato Research Report  
https://www.cs.waikato.ac.nz/ml/publications/1996/Thomson-McQueen-96.pdf + the original publication:";"Minimum: 10
Maximum: 100";"Minimum: 10
Maximum: 100";"min(Crown_Fm) = 1.0
max(Crown_Fm) = 4.0";10.0;100.0;10.0;100.0;;;;;
384;Brnch_Fm;188;eucalyptus;numeric;0.0;5.0;"**Author**: Bruce Bulloch    
**Source**: [WEKA Dataset Collection](http://www.cs.waikato.ac.nz/ml/weka/datasets.html) - part of the agridatasets archive. [This is the true source](http://tunedit.org/repo/Data/Agricultural/eucalyptus.arff)  
**Please cite**: None  

**Eucalyptus Soil Conservation**  
The objective was to determine which seedlots in a species are best for soil conservation in seasonally dry hill country. Determination is found by measurement of height, diameter by height, survival, and other contributing factors. 
 
It is important to note that eucalypt trial methods changed over time; earlier trials included mostly 15 - 30cm tall seedling grown in peat plots and the later trials have included mostly three replications of eight trees grown. This change may contribute to less significant results.

Experimental data recording procedures which require noting include:
 - instances with no data recorded due to experimental recording procedures
   require that the absence of a species from one replicate at a site was
   treated as a missing value, but if absent from two or more replicates at a
   site the species was excluded from the site's analyses.
 - missing data for survival, vigour, insect resistance, stem form, crown form
   and utility especially for the data recorded at the Morea Station; this 
   could indicate the death of species in these areas or a lack in collection
   of data.  

### Attribute Information  
 
  1.  Abbrev - site abbreviation - enumerated
  2.  Rep - site rep - integer
  3.  Locality - site locality in the North Island - enumerated
  4.  Map_Ref - map location in the North Island - enumerated
  5.  Latitude - latitude approximation - enumerated
  6.  Altitude - altitude approximation - integer
  7.  Rainfall - rainfall (mm pa) - integer
  8.  Frosts - frosts (deg. c) - integer
  9.  Year - year of planting - integer
  10. Sp - species code - enumerated
  11. PMCno - seedlot number - integer
  12. DBH - best diameter base height (cm) - real
  13. Ht - height (m) - real
  14. Surv - survival - integer
  15. Vig - vigour - real
  16. Ins_res - insect resistance - real
  17. Stem_Fm - stem form - real
  18. Crown_Fm - crown form - real
  19. Brnch_Fm - branch form - real
  Class:
  20. Utility - utility rating - enumerated

### Relevant papers

Bulluch B. T., (1992) Eucalyptus Species Selection for Soil Conservation in Seasonally Dry Hill Country - Twelfth Year Assessment  New Zealand Journal of Forestry Science 21(1): 10 - 31 (1991)  

Kirsten Thomson and Robert J. McQueen (1996) Machine Learning Applied to Fourteen Agricultural Datasets. University of Waikato Research Report  
https://www.cs.waikato.ac.nz/ml/publications/1996/Thomson-McQueen-96.pdf + the original publication:";"Minimum: 0
Maximum: 1";"Minimum: 0
Maximum: 1";For the feature Brnch_Fm, the minimum value is not provided. The maximum value is also not provided.;0.0;1.0;0.0;1.0;;;0.2;0.2;
385;Wifes_age;23;cmc;numeric;16.0;49.0;"**Author**: [Tjen-Sien Lim](limt@stat.wisc.edu) 

**Source**: [As obtained from UCI](https://archive.ics.uci.edu/ml/datasets/Contraceptive+Method+Choice)

**Please cite**: [UCI citation](https://archive.ics.uci.edu/ml/citation_policy.html)



1. Title: Contraceptive Method Choice

 

 2. Sources:

    (a) Origin:  This dataset is a subset of the 1987 National Indonesia

                 Contraceptive Prevalence Survey

    (b) Creator: Tjen-Sien Lim (limt@stat.wisc.edu)

    (c) Donor:   Tjen-Sien Lim (limt@stat.wisc.edu)

    (c) Date:    June 7, 1997

 

 3. Past Usage:

    Lim, T.-S., Loh, W.-Y. & Shih, Y.-S. (1999). A Comparison of

    Prediction Accuracy, Complexity, and Training Time of Thirty-three

    Old and New Classification Algorithms. Machine Learning. Forthcoming.

    (ftp://ftp.stat.wisc.edu/pub/loh/treeprogs/quest1.7/mach1317.pdf or

    (http://www.stat.wisc.edu/~limt/mach1317.pdf)

 

 4. Relevant Information:

    This dataset is a subset of the 1987 National Indonesia Contraceptive

    Prevalence Survey. The samples are married women who were either not 

    pregnant or do not know if they were at the time of interview. The 

    problem is to predict the current contraceptive method choice 

    (no use, long-term methods, or short-term methods) of a woman based 

    on her demographic and socio-economic characteristics.

 

 5. Number of Instances: 1473

 

 6. Number of Attributes: 10 (including the class attribute)

 

 7. Attribute Information:

 

    1. Wife's age                     (numerical)

    2. Wife's education               (categorical)      1=low, 2, 3, 4=high

    3. Husband's education            (categorical)      1=low, 2, 3, 4=high

    4. Number of children ever born   (numerical)

    5. Wife's religion                (binary)           0=Non-Islam, 1=Islam

    6. Wife's now working?            (binary)           0=Yes, 1=No

    7. Husband's occupation           (categorical)      1, 2, 3, 4

    8. Standard-of-living index       (categorical)      1=low, 2, 3, 4=high

    9. Media exposure                 (binary)           0=Good, 1=Not good

    10. Contraceptive method used     (class attribute)  1=No-use 

                                                         2=Long-term

                                                         3=Short-term

 

 8. Missing Attribute Values: None



 Information about the dataset

 CLASSTYPE: nominal

 CLASSINDEX: last";"Minimum: 18
Maximum: 65";"Minimum: 18
Maximum: 65";"The range of values for the feature ""Wife's age"" is from the minimum value of 16 to the maximum value of 49.";18.0;65.0;18.0;65.0;;;0.6326530612244898;0.6326530612244898;
386;Number_of_children_ever_born;23;cmc;numeric;0.0;16.0;"**Author**: [Tjen-Sien Lim](limt@stat.wisc.edu) 

**Source**: [As obtained from UCI](https://archive.ics.uci.edu/ml/datasets/Contraceptive+Method+Choice)

**Please cite**: [UCI citation](https://archive.ics.uci.edu/ml/citation_policy.html)



1. Title: Contraceptive Method Choice

 

 2. Sources:

    (a) Origin:  This dataset is a subset of the 1987 National Indonesia

                 Contraceptive Prevalence Survey

    (b) Creator: Tjen-Sien Lim (limt@stat.wisc.edu)

    (c) Donor:   Tjen-Sien Lim (limt@stat.wisc.edu)

    (c) Date:    June 7, 1997

 

 3. Past Usage:

    Lim, T.-S., Loh, W.-Y. & Shih, Y.-S. (1999). A Comparison of

    Prediction Accuracy, Complexity, and Training Time of Thirty-three

    Old and New Classification Algorithms. Machine Learning. Forthcoming.

    (ftp://ftp.stat.wisc.edu/pub/loh/treeprogs/quest1.7/mach1317.pdf or

    (http://www.stat.wisc.edu/~limt/mach1317.pdf)

 

 4. Relevant Information:

    This dataset is a subset of the 1987 National Indonesia Contraceptive

    Prevalence Survey. The samples are married women who were either not 

    pregnant or do not know if they were at the time of interview. The 

    problem is to predict the current contraceptive method choice 

    (no use, long-term methods, or short-term methods) of a woman based 

    on her demographic and socio-economic characteristics.

 

 5. Number of Instances: 1473

 

 6. Number of Attributes: 10 (including the class attribute)

 

 7. Attribute Information:

 

    1. Wife's age                     (numerical)

    2. Wife's education               (categorical)      1=low, 2, 3, 4=high

    3. Husband's education            (categorical)      1=low, 2, 3, 4=high

    4. Number of children ever born   (numerical)

    5. Wife's religion                (binary)           0=Non-Islam, 1=Islam

    6. Wife's now working?            (binary)           0=Yes, 1=No

    7. Husband's occupation           (categorical)      1, 2, 3, 4

    8. Standard-of-living index       (categorical)      1=low, 2, 3, 4=high

    9. Media exposure                 (binary)           0=Good, 1=Not good

    10. Contraceptive method used     (class attribute)  1=No-use 

                                                         2=Long-term

                                                         3=Short-term

 

 8. Missing Attribute Values: None



 Information about the dataset

 CLASSTYPE: nominal

 CLASSINDEX: last";"Minimum: 0
Maximum: 20";"Minimum: 0
Maximum: 20";"The range of values for the feature ""Number_of_children_ever_born"" in the dataset is as follows:

Min: 0
Max: 16";0.0;20.0;0.0;20.0;;;0.8;0.8;
